{
  "version": 3,
  "sources": ["../../node_modules/events/events.js", "../../node_modules/graphology-utils/defaults.js", "../../node_modules/graphology-utils/is-graph.js", "../../node_modules/pandemonium/random.js", "../../node_modules/pandemonium/shuffle-in-place.js", "../../node_modules/graphology-layout/circlepack.js", "../../node_modules/graphology-layout/circular.js", "../../node_modules/graphology-layout/random.js", "../../node_modules/graphology-layout/rotation.js", "../../node_modules/graphology-layout/index.js", "../../node_modules/graphology/src/utils.js", "../../node_modules/graphology/src/errors.js", "../../node_modules/graphology/src/data.js", "../../node_modules/graphology/src/attributes/nodes.js", "../../node_modules/graphology/src/attributes/edges.js", "../../node_modules/graphology/src/iteration/edges.js", "../../node_modules/graphology/src/iteration/neighbors.js", "../../node_modules/graphology/src/iteration/adjacency.js", "../../node_modules/graphology/src/serialization.js", "../../node_modules/graphology/src/graph.js", "../../node_modules/graphology/src/classes.js", "../../node_modules/graphology/src/endpoint.esm.js", "../../src/wiki-article-graph/wiki-article-graph.ts", "../../node_modules/sigma/dist/inherits-d1a1e29b.esm.js", "../../node_modules/sigma/dist/colors-beb06eb2.esm.js", "../../node_modules/sigma/dist/index-236c62ad.esm.js", "../../node_modules/sigma/types/dist/sigma-types.esm.js", "../../node_modules/sigma/dist/normalization-be445518.esm.js", "../../node_modules/sigma/dist/data-11df7124.esm.js", "../../node_modules/sigma/settings/dist/sigma-settings.esm.js", "../../node_modules/sigma/dist/sigma.esm.js", "../../node_modules/uuid/dist/esm-browser/stringify.js", "../../node_modules/uuid/dist/esm-browser/rng.js", "../../node_modules/uuid/dist/esm-browser/native.js", "../../node_modules/uuid/dist/esm-browser/v4.js", "../../src/common/workerify.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "/**\n * Graphology Defaults\n * ====================\n *\n * Helper function used throughout the standard lib to resolve defaults.\n */\nfunction isLeaf(o) {\n  return (\n    !o ||\n    typeof o !== 'object' ||\n    typeof o === 'function' ||\n    Array.isArray(o) ||\n    o instanceof Set ||\n    o instanceof Map ||\n    o instanceof RegExp ||\n    o instanceof Date\n  );\n}\n\nfunction resolveDefaults(target, defaults) {\n  target = target || {};\n\n  var output = {};\n\n  for (var k in defaults) {\n    var existing = target[k];\n    var def = defaults[k];\n\n    // Recursion\n    if (!isLeaf(def)) {\n      output[k] = resolveDefaults(existing, def);\n\n      continue;\n    }\n\n    // Leaf\n    if (existing === undefined) {\n      output[k] = def;\n    } else {\n      output[k] = existing;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = resolveDefaults;\n", "/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n", "/**\n * Pandemonium Random\n * ===================\n *\n * Random function.\n */\n\n/**\n * Creating a function returning a random integer such as a <= N <= b.\n *\n * @param  {function} rng - RNG function returning uniform random.\n * @return {function}     - The created function.\n */\nfunction createRandom(rng) {\n  /**\n   * Random function.\n   *\n   * @param  {number} a - From.\n   * @param  {number} b - To.\n   * @return {number}\n   */\n  return function (a, b) {\n    return a + Math.floor(rng() * (b - a + 1));\n  };\n}\n\n/**\n * Default random using `Math.random`.\n */\nvar random = createRandom(Math.random);\n\n/**\n * Exporting.\n */\nrandom.createRandom = createRandom;\nmodule.exports = random;\n", "/**\n * Pandemonium Shuffle In Place\n * =============================\n *\n * Shuffle function applying the Fisher-Yates algorithm to the provided array.\n */\nvar createRandom = require('./random.js').createRandom;\n\n/**\n * Creating a function returning the given array shuffled.\n *\n * @param  {function} rng - The RNG to use.\n * @return {function}     - The created function.\n */\nfunction createShuffleInPlace(rng) {\n  var customRandom = createRandom(rng);\n\n  /**\n   * Function returning the shuffled array.\n   *\n   * @param  {array}  sequence - Target sequence.\n   * @return {array}           - The shuffled sequence.\n   */\n  return function (sequence) {\n    var length = sequence.length,\n      lastIndex = length - 1;\n\n    var index = -1;\n\n    while (++index < length) {\n      var r = customRandom(index, lastIndex),\n        value = sequence[r];\n\n      sequence[r] = sequence[index];\n      sequence[index] = value;\n    }\n  };\n}\n\n/**\n * Default shuffle in place using `Math.random`.\n */\nvar shuffleInPlace = createShuffleInPlace(Math.random);\n\n/**\n * Exporting.\n */\nshuffleInPlace.createShuffleInPlace = createShuffleInPlace;\nmodule.exports = shuffleInPlace;\n", "/**\n * Graphology CirclePack Layout\n * =============================\n *\n * Circlepack layout from d3-hierarchy/gephi.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\nvar shuffle = require('pandemonium/shuffle-in-place');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  attributes: {\n    x: 'x',\n    y: 'y'\n  },\n  center: 0,\n  hierarchyAttributes: [],\n  rng: Math.random,\n  scale: 1\n};\n\n/**\n * Helpers.\n */\nfunction CircleWrap(id, x, y, r, circleWrap) {\n  this.wrappedCircle = circleWrap || null; //hacky d3 reference thing\n\n  this.children = {};\n  this.countChildren = 0;\n  this.id = id || null;\n  this.next = null;\n  this.previous = null;\n\n  this.x = x || null;\n  this.y = y || null;\n  if (circleWrap) this.r = 1010101;\n  // for debugging purposes - should not be used in this case\n  else this.r = r || 999;\n}\n\nCircleWrap.prototype.hasChildren = function () {\n  return this.countChildren > 0;\n};\n\nCircleWrap.prototype.addChild = function (id, child) {\n  this.children[id] = child;\n  ++this.countChildren;\n};\n\nCircleWrap.prototype.getChild = function (id) {\n  if (!this.children.hasOwnProperty(id)) {\n    var circleWrap = new CircleWrap();\n    this.children[id] = circleWrap;\n    ++this.countChildren;\n  }\n  return this.children[id];\n};\n\nCircleWrap.prototype.applyPositionToChildren = function () {\n  if (this.hasChildren()) {\n    var root = this; // using 'this' in Object.keys.forEach seems a bad idea\n    for (var key in root.children) {\n      var child = root.children[key];\n      child.x += root.x;\n      child.y += root.y;\n      child.applyPositionToChildren();\n    }\n  }\n};\n\nfunction setNode(/*Graph*/ graph, /*CircleWrap*/ parentCircle, /*Map*/ posMap) {\n  for (var key in parentCircle.children) {\n    var circle = parentCircle.children[key];\n    if (circle.hasChildren()) {\n      setNode(graph, circle, posMap);\n    } else {\n      posMap[circle.id] = {x: circle.x, y: circle.y};\n    }\n  }\n}\n\nfunction enclosesNot(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r - b.r;\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r - b.r + 1e-6;\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(/*CircleWrap*/ a, /*Array<CircleWrap>*/ B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis1(/*CircleWrap*/ a) {\n  return new CircleWrap(null, a.x, a.y, a.r);\n}\n\nfunction encloseBasis2(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x21 = x2 - x1,\n    y21 = y2 - y1,\n    r21 = r2 - r1,\n    l = Math.sqrt(x21 * x21 + y21 * y21);\n  return new CircleWrap(\n    null,\n    (x1 + x2 + (x21 / l) * r21) / 2,\n    (y1 + y2 + (y21 / l) * r21) / 2,\n    (l + r1 + r2) / 2\n  );\n}\n\nfunction encloseBasis3(/*CircleWrap*/ a, /*CircleWrap*/ b, /*CircleWrap*/ c) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x3 = c.x,\n    y3 = c.y,\n    r3 = c.r,\n    a2 = x1 - x2,\n    a3 = x1 - x3,\n    b2 = y1 - y2,\n    b3 = y1 - y3,\n    c2 = r2 - r1,\n    c3 = r3 - r1,\n    d1 = x1 * x1 + y1 * y1 - r1 * r1,\n    d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n    d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n    ab = a3 * b2 - a2 * b3,\n    xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n    xb = (b3 * c2 - b2 * c3) / ab,\n    ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n    yb = (a2 * c3 - a3 * c2) / ab,\n    A = xb * xb + yb * yb - 1,\n    B = 2 * (r1 + xa * xb + ya * yb),\n    C = xa * xa + ya * ya - r1 * r1,\n    r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return new CircleWrap(null, x1 + xa + xb * r, y1 + ya + yb * r, r);\n}\n\nfunction encloseBasis(/*Array<CircleWrap>*/ B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n    default:\n      throw new Error(\n        'graphology-layout/circlepack: Invalid basis length ' + B.length\n      );\n  }\n}\n\nfunction extendBasis(/*Array<CircleWrap>*/ B, /*CircleWrap*/ p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (\n        enclosesNot(encloseBasis2(B[i], B[j]), p) &&\n        enclosesNot(encloseBasis2(B[i], p), B[j]) &&\n        enclosesNot(encloseBasis2(B[j], p), B[i]) &&\n        enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)\n      ) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error('graphology-layout/circlepack: extendBasis failure !');\n}\n\nfunction score(/*CircleWrap*/ node) {\n  var a = node.wrappedCircle;\n  var b = node.next.wrappedCircle;\n  var ab = a.r + b.r;\n  var dx = (a.x * b.r + b.x * a.r) / ab;\n  var dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction enclose(circles, shuffleFunc) {\n  var i = 0;\n  var circlesLoc = circles.slice();\n\n  var n = circles.length;\n  var B = [];\n  var p;\n  var e;\n  shuffleFunc(circlesLoc);\n  while (i < n) {\n    p = circlesLoc[i];\n    if (e && enclosesWeak(e, p)) {\n      ++i;\n    } else {\n      B = extendBasis(B, p);\n      e = encloseBasis(B);\n      i = 0;\n    }\n  }\n  return e;\n}\n\nfunction place(/*CircleWrap*/ b, /*CircleWrap*/ a, /*CircleWrap*/ c) {\n  var dx = b.x - a.x,\n    x,\n    a2,\n    dy = b.y - a.y,\n    y,\n    b2,\n    d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r;\n    a2 *= a2;\n    b2 = b.r + c.r;\n    b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r + b.r - 1e-6,\n    dx = b.x - a.x,\n    dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction packEnclose(/*Array<CircleWrap>*/ circles, shuffleFunc) {\n  var n = circles.length;\n  if (n === 0) return 0;\n\n  var a, b, c, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0];\n  a.x = 0;\n  a.y = 0;\n  if (n <= 1) return a.r;\n\n  // Place the second circle.\n  b = circles[1];\n  a.x = -b.r;\n  b.x = a.r;\n  b.y = 0;\n  if (n <= 2) return a.r + b.r;\n\n  // Place the third circle.\n  c = circles[2];\n  place(b, a, c);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new CircleWrap(null, null, null, null, a);\n  b = new CircleWrap(null, null, null, null, b);\n  c = new CircleWrap(null, null, null, null, c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle\u2026\n  pack: for (i = 3; i < n; ++i) {\n    c = circles[i];\n    place(a.wrappedCircle, b.wrappedCircle, c);\n    c = new CircleWrap(null, null, null, null, c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // \u201CCloseness\u201D is determined by linear distance along the front-chain.\n    // \u201CAhead\u201D or \u201Cbehind\u201D is likewise determined by linear distance.\n    j = b.next;\n    k = a.previous;\n    sj = b.wrappedCircle.r;\n    sk = a.wrappedCircle.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j.wrappedCircle, c.wrappedCircle)) {\n          b = j;\n          a.next = b;\n          b.previous = a;\n          --i;\n          continue pack;\n        }\n        sj += j.wrappedCircle.r;\n        j = j.next;\n      } else {\n        if (intersects(k.wrappedCircle, c.wrappedCircle)) {\n          a = k;\n          a.next = b;\n          b.previous = a;\n          --i;\n          continue pack;\n        }\n        sk += k.wrappedCircle.r;\n        k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a;\n    c.next = b;\n    a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c;\n        aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b.wrappedCircle];\n  c = b;\n  var safety = 10000;\n  while ((c = c.next) !== b) {\n    if (--safety === 0) {\n      break;\n    }\n    a.push(c.wrappedCircle);\n  }\n  c = enclose(a, shuffleFunc);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) {\n    a = circles[i];\n    a.x -= c.x;\n    a.y -= c.y;\n  }\n  return c.r;\n}\n\nfunction packHierarchy(/*CircleWrap*/ parentCircle, shuffleFunc) {\n  var r = 0;\n  if (parentCircle.hasChildren()) {\n    //pack the children first because the radius is determined by how the children get packed (recursive)\n    for (var key in parentCircle.children) {\n      var circle = parentCircle.children[key];\n      if (circle.hasChildren()) {\n        circle.r = packHierarchy(circle, shuffleFunc);\n      }\n    }\n    //now that each circle has a radius set by its children, pack the circles at this level\n    r = packEnclose(Object.values(parentCircle.children), shuffleFunc);\n  }\n  return r;\n}\n\nfunction packHierarchyAndShift(/*CircleWrap*/ parentCircle, shuffleFunc) {\n  packHierarchy(parentCircle, shuffleFunc);\n  for (var key in parentCircle.children) {\n    var circle = parentCircle.children[key];\n    circle.applyPositionToChildren();\n  }\n}\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph                   - Target  graph.\n * @param  {object}   [options]               - Options:\n * @param  {object}     [attributes]          - Attributes names to map.\n * @param  {number}     [center]              - Center of the layout.\n * @param  {string[]}   [hierarchyAttributes] - List of attributes used for the layout in decreasing order.\n * @param  {function}   [rng]                 - Custom RNG function to be used.\n * @param  {number}     [scale]               - Scale of the layout.\n * @return {object}                           - The positions by node.\n */\nfunction genericCirclePackLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/circlepack: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var posMap = {},\n    positions = {},\n    nodes = graph.nodes(),\n    center = options.center,\n    hierarchyAttributes = options.hierarchyAttributes,\n    shuffleFunc = shuffle.createShuffleInPlace(options.rng),\n    scale = options.scale;\n\n  var container = new CircleWrap();\n\n  graph.forEachNode(function (key, attributes) {\n    var r = attributes.size ? attributes.size : 1;\n    var newCircleWrap = new CircleWrap(key, null, null, r);\n    var parentContainer = container;\n\n    hierarchyAttributes.forEach(function (v) {\n      var attr = attributes[v];\n      parentContainer = parentContainer.getChild(attr);\n    });\n\n    parentContainer.addChild(key, newCircleWrap);\n  });\n  packHierarchyAndShift(container, shuffleFunc);\n  setNode(graph, container, posMap);\n  var l = nodes.length,\n    x,\n    y,\n    i;\n  for (i = 0; i < l; i++) {\n    var node = nodes[i];\n\n    x = center + scale * posMap[node].x;\n    y = center + scale * posMap[node].y;\n\n    positions[node] = {\n      x: x,\n      y: y\n    };\n\n    if (assign) {\n      graph.setNodeAttribute(node, options.attributes.x, x);\n      graph.setNodeAttribute(node, options.attributes.y, y);\n    }\n  }\n  return positions;\n}\n\nvar circlePackLayout = genericCirclePackLayout.bind(null, false);\ncirclePackLayout.assign = genericCirclePackLayout.bind(null, true);\n\nmodule.exports = circlePackLayout;\n", "/**\n * Graphology Circular Layout\n * ===========================\n *\n * Layout arranging the nodes in a circle.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {object}     [attributes] - Attributes names to map.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericCircularLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var center = options.center;\n  var scale = options.scale;\n  var tau = Math.PI * 2;\n\n  var offset = (center - 0.5) * scale;\n  var l = graph.order;\n\n  var x = dimensions[0];\n  var y = dimensions[1];\n\n  function assignPosition(i, target) {\n    target[x] = scale * Math.cos((i * tau) / l) + offset;\n    target[y] = scale * Math.sin((i * tau) / l) + offset;\n\n    return target;\n  }\n\n  var i = 0;\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition(i++, {});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(i++, attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar circularLayout = genericCircularLayout.bind(null, false);\ncircularLayout.assign = genericCircularLayout.bind(null, true);\n\nmodule.exports = circularLayout;\n", "/**\n * Graphology Random Layout\n * =========================\n *\n * Simple layout giving uniform random positions to the nodes.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  rng: Math.random,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {array}      [dimensions] - List of dimensions of the layout.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {function}   [rng]        - Custom RNG function to be used.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericRandomLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length < 1)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var d = dimensions.length;\n  var center = options.center;\n  var rng = options.rng;\n  var scale = options.scale;\n\n  var offset = (center - 0.5) * scale;\n\n  function assignPosition(target) {\n    for (var i = 0; i < d; i++) {\n      target[dimensions[i]] = rng() * scale + offset;\n    }\n\n    return target;\n  }\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition({});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar randomLayout = genericRandomLayout.bind(null, false);\nrandomLayout.assign = genericRandomLayout.bind(null, true);\n\nmodule.exports = randomLayout;\n", "/**\n * Graphology Rotation Layout Helper\n * ==================================\n *\n * Function rotating the coordinates of the graph.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Constants.\n */\nvar RAD_CONVERSION = Math.PI / 180;\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  centeredOnZero: false,\n  degrees: false\n};\n\n/**\n * Abstract function for rotating a graph's coordinates.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {number}   angle          - Rotation angle.\n * @param  {object}   [options]      - Options.\n * @return {object}                  - The positions by node.\n */\nfunction genericRotation(assign, graph, angle, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/rotation: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  if (options.degrees) angle *= RAD_CONVERSION;\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  // Handling null graph\n  if (graph.order === 0) {\n    if (assign) return;\n\n    return {};\n  }\n\n  var xd = dimensions[0];\n  var yd = dimensions[1];\n\n  var xCenter = 0;\n  var yCenter = 0;\n\n  if (!options.centeredOnZero) {\n    // Finding bounds of the graph\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n\n    graph.forEachNode(function (node, attr) {\n      var x = attr[xd];\n      var y = attr[yd];\n\n      if (x < xMin) xMin = x;\n      if (x > xMax) xMax = x;\n      if (y < yMin) yMin = y;\n      if (y > yMax) yMax = y;\n    });\n\n    xCenter = (xMin + xMax) / 2;\n    yCenter = (yMin + yMax) / 2;\n  }\n\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n\n  function assignPosition(target) {\n    var x = target[xd];\n    var y = target[yd];\n\n    target[xd] = xCenter + (x - xCenter) * cos - (y - yCenter) * sin;\n    target[yd] = yCenter + (x - xCenter) * sin + (y - yCenter) * cos;\n\n    return target;\n  }\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node, attr) {\n      var o = {};\n      o[xd] = attr[xd];\n      o[yd] = attr[yd];\n      positions[node] = assignPosition(o);\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar rotation = genericRotation.bind(null, false);\nrotation.assign = genericRotation.bind(null, true);\n\nmodule.exports = rotation;\n", "/**\n * Graphology Layout\n * ==================\n *\n * Library endpoint.\n */\nexports.circlepack = require('./circlepack.js');\nexports.circular = require('./circular.js');\nexports.random = require('./random.js');\nexports.rotation = require('./rotation.js');\n", "/**\n * Graphology Utilities\n * =====================\n *\n * Collection of helpful functions used by the implementation.\n */\n\n/**\n * Object.assign-like polyfill.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignPolyfill() {\n  const target = arguments[0];\n\n  for (let i = 1, l = arguments.length; i < l; i++) {\n    if (!arguments[i]) continue;\n\n    for (const k in arguments[i]) target[k] = arguments[i][k];\n  }\n\n  return target;\n}\n\nlet assign = assignPolyfill;\n\nif (typeof Object.assign === 'function') assign = Object.assign;\n\nexport {assign};\n\n/**\n * Function returning the first matching edge for given path.\n * Note: this function does not check the existence of source & target. This\n * must be performed by the caller.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @param  {any}    target - Target node.\n * @param  {string} type   - Type of the edge (mixed, directed or undirected).\n * @return {string|null}\n */\nexport function getMatchingEdge(graph, source, target, type) {\n  const sourceData = graph._nodes.get(source);\n\n  let edge = null;\n\n  if (!sourceData) return edge;\n\n  if (type === 'mixed') {\n    edge =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]);\n  } else if (type === 'directed') {\n    edge = sourceData.out && sourceData.out[target];\n  } else {\n    edge = sourceData.undirected && sourceData.undirected[target];\n  }\n\n  return edge;\n}\n\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\nexport function isPlainObject(value) {\n  // NOTE: as per https://github.com/graphology/graphology/issues/149\n  // this function has been loosened not to reject object instances\n  // coming from other JavaScript contexts. It has also been chosen\n  // not to improve it to avoid obvious false positives and avoid\n  // taking a performance hit. People should really use TypeScript\n  // if they want to avoid feeding subtly irrelvant attribute objects.\n  return typeof value === 'object' && value !== null;\n}\n\n/**\n * Checks whether the given object is empty.\n *\n * @param  {object}  o - Target Object.\n * @return {boolean}\n */\nexport function isEmpty(o) {\n  let k;\n\n  for (k in o) return false;\n\n  return true;\n}\n\n/**\n * Creates a \"private\" property for the given member name by concealing it\n * using the `enumerable` option.\n *\n * @param {object} target - Target object.\n * @param {string} name   - Member name.\n */\nexport function privateProperty(target, name, value) {\n  Object.defineProperty(target, name, {\n    enumerable: false,\n    configurable: false,\n    writable: true,\n    value\n  });\n}\n\n/**\n * Creates a read-only property for the given member name & the given getter.\n *\n * @param {object}   target - Target object.\n * @param {string}   name   - Member name.\n * @param {mixed}    value  - The attached getter or fixed value.\n */\nexport function readOnlyProperty(target, name, value) {\n  const descriptor = {\n    enumerable: true,\n    configurable: true\n  };\n\n  if (typeof value === 'function') {\n    descriptor.get = value;\n  } else {\n    descriptor.value = value;\n    descriptor.writable = false;\n  }\n\n  Object.defineProperty(target, name, descriptor);\n}\n\n/**\n * Returns whether the given object constitute valid hints.\n *\n * @param {object} hints - Target object.\n */\nexport function validateHints(hints) {\n  if (!isPlainObject(hints)) return false;\n\n  if (hints.attributes && !Array.isArray(hints.attributes)) return false;\n\n  return true;\n}\n\n/**\n * Creates a function generating incremental ids for edges.\n *\n * @return {function}\n */\nexport function incrementalIdStartingFromRandomByte() {\n  let i = Math.floor(Math.random() * 256) & 0xff;\n\n  return () => {\n    return i++;\n  };\n}\n\n/**\n * Chains multiple iterators into a single iterator.\n *\n * @param {...Iterator} iterables\n * @returns {Iterator}\n */\nexport function chain() {\n  const iterables = arguments;\n  let current = null;\n  let i = -1;\n\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      let step = null;\n\n      do {\n        if (current === null) {\n          i++;\n          if (i >= iterables.length) return {done: true};\n          current = iterables[i][Symbol.iterator]();\n        }\n        step = current.next();\n        if (step.done) {\n          current = null;\n          continue;\n        }\n        break;\n        // eslint-disable-next-line no-constant-condition\n      } while (true);\n\n      return step;\n    }\n  };\n}\n\n/**\n * Maps the given iterable using the provided function.\n *\n * @param {Iterable} iterable\n * @param {Function} fn\n * @returns {Iterator}\n */\nexport function map(iterable, fn) {\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      const step = iterable.next();\n      if (step.done) return step;\n      return {value: fn(step.value), done: false};\n    }\n  };\n}\n\nexport function emptyIterator() {\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      return {done: true};\n    }\n  };\n}\n", "/**\n * Graphology Custom Errors\n * =========================\n *\n * Defining custom errors for ease of use & easy unit tests across\n * implementations (normalized typology rather than relying on error\n * messages to check whether the correct error was found).\n */\nexport class GraphError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'GraphError';\n    this.message = message;\n  }\n}\n\nexport class InvalidArgumentsGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidArgumentsGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(\n        this,\n        InvalidArgumentsGraphError.prototype.constructor\n      );\n  }\n}\n\nexport class NotFoundGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'NotFoundGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, NotFoundGraphError.prototype.constructor);\n  }\n}\n\nexport class UsageGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'UsageGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, UsageGraphError.prototype.constructor);\n  }\n}\n", "/**\n * Graphology Internal Data Classes\n * =================================\n *\n * Internal classes hopefully reduced to structs by engines & storing\n * necessary information for nodes & edges.\n *\n * Note that those classes don't rely on the `class` keyword to avoid some\n * cruft introduced by most of ES2015 transpilers.\n */\n\n/**\n * MixedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function MixedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nMixedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n  this.undirected = {};\n};\n\n/**\n * DirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function DirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nDirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n};\n\n/**\n * UndirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function UndirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nUndirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n\n  // Indices\n  this.undirected = {};\n};\n\n/**\n * EdgeData class.\n *\n * @constructor\n * @param {boolean} undirected   - Whether the edge is undirected.\n * @param {string}  string       - The edge's key.\n * @param {string}  source       - Source of the edge.\n * @param {string}  target       - Target of the edge.\n * @param {object}  attributes   - Edge's attributes.\n */\nexport function EdgeData(undirected, key, source, target, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n  this.undirected = undirected;\n\n  // Extremities\n  this.source = source;\n  this.target = target;\n}\n\nEdgeData.prototype.attach = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  // Handling source\n  this.source[outKey][target] = this;\n\n  if (this.undirected && source === target) return;\n\n  // Handling target\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.attachMulti = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Handling source\n  const adj = this.source[outKey];\n  const head = adj[target];\n\n  if (typeof head === 'undefined') {\n    adj[target] = this;\n\n    // Self-loop optimization\n    if (!(this.undirected && source === target)) {\n      // Handling target\n      this.target[inKey][source] = this;\n    }\n\n    return;\n  }\n\n  // Prepending to doubly-linked list\n  head.previous = this;\n  this.next = head;\n\n  // Pointing to new head\n  // NOTE: use mutating swap later to avoid lookup?\n  adj[target] = this;\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.detach = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  delete this.source[outKey][target];\n\n  // No-op delete in case of undirected self-loop\n  delete this.target[inKey][source];\n};\n\nEdgeData.prototype.detachMulti = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Deleting from doubly-linked list\n  if (this.previous === undefined) {\n    // We are dealing with the head\n\n    // Should we delete the adjacency entry because it is now empty?\n    if (this.next === undefined) {\n      delete this.source[outKey][target];\n\n      // No-op delete in case of undirected self-loop\n      delete this.target[inKey][source];\n    } else {\n      // Detaching\n      this.next.previous = undefined;\n\n      // NOTE: could avoid the lookups by creating a #.become mutating method\n      this.source[outKey][target] = this.next;\n\n      // No-op delete in case of undirected self-loop\n      this.target[inKey][source] = this.next;\n    }\n  } else {\n    // We are dealing with another list node\n    this.previous.next = this.next;\n\n    // If not last\n    if (this.next !== undefined) {\n      this.next.previous = this.previous;\n    }\n  }\n};\n", "/**\n * Graphology Node Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject} from '../utils';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\nconst NODE = 0;\nconst SOURCE = 1;\nconst TARGET = 2;\nconst OPPOSITE = 3;\n\nfunction findRelevantNodeData(\n  graph,\n  method,\n  mode,\n  nodeOrEdge,\n  nameOrEdge,\n  add1,\n  add2\n) {\n  let nodeData, edgeData, arg1, arg2;\n\n  nodeOrEdge = '' + nodeOrEdge;\n\n  if (mode === NODE) {\n    nodeData = graph._nodes.get(nodeOrEdge);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" node in the graph.`\n      );\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  } else if (mode === OPPOSITE) {\n    nameOrEdge = '' + nameOrEdge;\n\n    edgeData = graph._edges.get(nameOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nameOrEdge}\" edge in the graph.`\n      );\n\n    const source = edgeData.source.key;\n    const target = edgeData.target.key;\n\n    if (nodeOrEdge === source) {\n      nodeData = edgeData.target;\n    } else if (nodeOrEdge === target) {\n      nodeData = edgeData.source;\n    } else {\n      throw new NotFoundGraphError(\n        `Graph.${method}: the \"${nodeOrEdge}\" node is not attached to the \"${nameOrEdge}\" edge (${source}, ${target}).`\n      );\n    }\n\n    arg1 = add1;\n    arg2 = add2;\n  } else {\n    edgeData = graph._edges.get(nodeOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" edge in the graph.`\n      );\n\n    if (mode === SOURCE) {\n      nodeData = edgeData.source;\n    } else {\n      nodeData = edgeData.target;\n    }\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  }\n\n  return [nodeData, arg1, arg2];\n}\n\nfunction attachNodeAttributeGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes[name];\n  };\n}\n\nfunction attachNodeAttributesGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge) {\n    const [data] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge\n    );\n\n    return data.attributes;\n  };\n}\n\nfunction attachNodeAttributeChecker(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\nfunction attachNodeAttributeSetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, value] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    const attributes = data.attributes;\n    const value = updater(attributes[name]);\n\n    attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeRemover(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesReplacer(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesMerger(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst NODE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachNodeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachNodeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachNodeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachNodeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachNodeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachNodeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachNodeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachNodeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachNodeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachNodeAttributesMethods(Graph) {\n  NODE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For nodes\n    attacher(Graph, name('Node'), NODE);\n\n    // For sources\n    attacher(Graph, name('Source'), SOURCE);\n\n    // For targets\n    attacher(Graph, name('Target'), TARGET);\n\n    // For opposites\n    attacher(Graph, name('Opposite'), OPPOSITE);\n  });\n}\n", "/**\n * Graphology Edge Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject, getMatchingEdge} from '../utils';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from '../errors';\n\n/**\n * Attach an attribute getter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeGetter(Class, method, type) {\n  /**\n   * Get the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {mixed}          - The attribute's value.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes[name];\n  };\n}\n\n/**\n * Attach an attributes getter method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributesGetter(Class, method, type) {\n  /**\n   * Retrieves all the target element's attributes.\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   *\n   * @return {object}          - The element's attributes.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 1) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + arguments[1];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes;\n  };\n}\n\n/**\n * Attach an attribute checker method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributeChecker(Class, method, type) {\n  /**\n   * Checks whether the desired attribute is set for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\n/**\n * Attach an attribute setter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeSetter(Class, method, type) {\n  /**\n   * Set the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, value) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      value = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeUpdater(Class, method, type) {\n  /**\n   * Update the desired attribute for the given element (node or edge) using\n   * the provided function.\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      updater = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    data.attributes[name] = updater(data.attributes[name]);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute remover method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeRemover(Class, method, type) {\n  /**\n   * Remove the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute replacer method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesReplacer(Class, method, type) {\n  /**\n   * Replace the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - New attributes.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - New attributes.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute merger method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesMerger(Class, method, type) {\n  /**\n   * Merge the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - Attributes to merge.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - Attributes to merge.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesUpdater(Class, method, type) {\n  /**\n   * Update the attributes of the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + updater;\n\n      updater = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst EDGE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachEdgeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachEdgeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachEdgeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachEdgeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachEdgeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachEdgeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachEdgeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachEdgeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachEdgeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachEdgeAttributesMethods(Graph) {\n  EDGE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For edges\n    attacher(Graph, name('Edge'), 'mixed');\n\n    // For directed edges\n    attacher(Graph, name('DirectedEdge'), 'directed');\n\n    // For undirected edges\n    attacher(Graph, name('UndirectedEdge'), 'undirected');\n  });\n}\n", "/**\n * Graphology Edge Iteration\n * ==========================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's edges.\n */\nimport {chain, emptyIterator} from '../utils';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst EDGES_ITERATION = [\n  {\n    name: 'edges',\n    type: 'mixed'\n  },\n  {\n    name: 'inEdges',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outEdges',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundEdges',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundEdges',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedEdges',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedEdges',\n    type: 'undirected'\n  }\n];\n\n/**\n * Function iterating over edges from the given object to match one of them.\n *\n * @param {object}   object   - Target object.\n * @param {function} callback - Function to call.\n */\nfunction forEachSimple(breakable, object, callback, avoid) {\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    const edgeData = object[k];\n\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n  }\n\n  return;\n}\n\nfunction forEachMulti(breakable, object, callback, avoid) {\n  let edgeData, source, target;\n\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    edgeData = object[k];\n\n    do {\n      source = edgeData.source;\n      target = edgeData.target;\n\n      shouldBreak = callback(\n        edgeData.key,\n        edgeData.attributes,\n        source.key,\n        target.key,\n        source.attributes,\n        target.attributes,\n        edgeData.undirected\n      );\n\n      if (breakable && shouldBreak) return edgeData.key;\n\n      edgeData = edgeData.next;\n    } while (edgeData !== undefined);\n  }\n\n  return;\n}\n\n/**\n * Function returning an iterator over edges from the given object.\n *\n * @param  {object}   object - Target object.\n * @return {Iterator}\n */\nfunction createIterator(object, avoid) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let edgeData;\n  let i = 0;\n\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      do {\n        if (!edgeData) {\n          if (i >= l) return {done: true};\n\n          const k = keys[i++];\n\n          if (k === avoid) {\n            edgeData = undefined;\n            continue;\n          }\n\n          edgeData = object[k];\n        } else {\n          edgeData = edgeData.next;\n        }\n      } while (!edgeData);\n\n      return {\n        done: false,\n        value: {\n          edge: edgeData.key,\n          attributes: edgeData.attributes,\n          source: edgeData.source.key,\n          target: edgeData.target.key,\n          sourceAttributes: edgeData.source.attributes,\n          targetAttributes: edgeData.target.attributes,\n          undirected: edgeData.undirected\n        }\n      };\n    }\n  };\n}\n\n/**\n * Function iterating over the egdes from the object at given key to match\n * one of them.\n *\n * @param {object}   object   - Target object.\n * @param {mixed}    k        - Neighbor key.\n * @param {function} callback - Callback to use.\n */\nfunction forEachForKeySimple(breakable, object, k, callback) {\n  const edgeData = object[k];\n\n  if (!edgeData) return;\n\n  const sourceData = edgeData.source;\n  const targetData = edgeData.target;\n\n  if (\n    callback(\n      edgeData.key,\n      edgeData.attributes,\n      sourceData.key,\n      targetData.key,\n      sourceData.attributes,\n      targetData.attributes,\n      edgeData.undirected\n    ) &&\n    breakable\n  )\n    return edgeData.key;\n}\n\nfunction forEachForKeyMulti(breakable, object, k, callback) {\n  let edgeData = object[k];\n\n  if (!edgeData) return;\n\n  let shouldBreak = false;\n\n  do {\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n\n    edgeData = edgeData.next;\n  } while (edgeData !== undefined);\n\n  return;\n}\n\n/**\n * Function returning an iterator over the egdes from the object at given key.\n *\n * @param  {object}   object   - Target object.\n * @param  {mixed}    k        - Neighbor key.\n * @return {Iterator}\n */\nfunction createIteratorForKey(object, k) {\n  let edgeData = object[k];\n\n  if (edgeData.next !== undefined) {\n    return {\n      [Symbol.iterator]() {\n        return this;\n      },\n      next() {\n        if (!edgeData) return {done: true};\n\n        const value = {\n          edge: edgeData.key,\n          attributes: edgeData.attributes,\n          source: edgeData.source.key,\n          target: edgeData.target.key,\n          sourceAttributes: edgeData.source.attributes,\n          targetAttributes: edgeData.target.attributes,\n          undirected: edgeData.undirected\n        };\n\n        edgeData = edgeData.next;\n\n        return {\n          done: false,\n          value\n        };\n      }\n    };\n  }\n\n  let done = false;\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      if (done === true) return {done: true};\n      done = true;\n      return {\n        done: false,\n        value: {\n          edge: edgeData.key,\n          attributes: edgeData.attributes,\n          source: edgeData.source.key,\n          target: edgeData.target.key,\n          sourceAttributes: edgeData.source.attributes,\n          targetAttributes: edgeData.target.attributes,\n          undirected: edgeData.undirected\n        }\n      };\n    }\n  };\n}\n\n/**\n * Function creating an array of edges for the given type.\n *\n * @param  {Graph}   graph - Target Graph instance.\n * @param  {string}  type  - Type of edges to retrieve.\n * @return {array}         - Array of edges.\n */\nfunction createEdgeArray(graph, type) {\n  if (graph.size === 0) return [];\n\n  if (type === 'mixed' || type === graph.type) {\n    return Array.from(graph._edges.keys());\n  }\n\n  const size =\n    type === 'undirected' ? graph.undirectedSize : graph.directedSize;\n\n  const list = new Array(size),\n    mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  let i = 0;\n  let step, data;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (data.undirected === mask) list[i++] = data.key;\n  }\n\n  return list;\n}\n\n/**\n * Function iterating over a graph's edges using a callback to match one of\n * them.\n *\n * @param  {Graph}    graph    - Target Graph instance.\n * @param  {string}   type     - Type of edges to retrieve.\n * @param  {function} callback - Function to call.\n */\nfunction forEachEdge(breakable, graph, type, callback) {\n  if (graph.size === 0) return;\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  let step, data;\n  let shouldBreak = false;\n  const iterator = graph._edges.values();\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (shouldFilter && data.undirected !== mask) continue;\n\n    const {key, attributes, source, target} = data;\n\n    shouldBreak = callback(\n      key,\n      attributes,\n      source.key,\n      target.key,\n      source.attributes,\n      target.attributes,\n      data.undirected\n    );\n\n    if (breakable && shouldBreak) return key;\n  }\n\n  return;\n}\n\n/**\n * Function creating an iterator of edges for the given type.\n *\n * @param  {Graph}    graph - Target Graph instance.\n * @param  {string}   type  - Type of edges to retrieve.\n * @return {Iterator}\n */\nfunction createEdgeIterator(graph, type) {\n  if (graph.size === 0) return emptyIterator();\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      let step, data;\n\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        step = iterator.next();\n\n        if (step.done) return step;\n\n        data = step.value;\n\n        if (shouldFilter && data.undirected !== mask) continue;\n\n        break;\n      }\n\n      const value = {\n        edge: data.key,\n        attributes: data.attributes,\n        source: data.source.key,\n        target: data.target.key,\n        sourceAttributes: data.source.attributes,\n        targetAttributes: data.target.attributes,\n        undirected: data.undirected\n      };\n\n      return {value, done: false};\n    }\n  };\n}\n\n/**\n * Function iterating over a node's edges using a callback to match one of them.\n *\n * @param  {boolean}  multi     - Whether the graph is multi or not.\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Function to call.\n */\nfunction forEachEdgeForNode(\n  breakable,\n  multi,\n  type,\n  direction,\n  nodeData,\n  callback\n) {\n  const fn = multi ? forEachMulti : forEachSimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = fn(breakable, nodeData.in, callback);\n\n      if (breakable && found) return found;\n    }\n    if (direction !== 'in') {\n      found = fn(\n        breakable,\n        nodeData.out,\n        callback,\n        !direction ? nodeData.key : undefined\n      );\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    found = fn(breakable, nodeData.undirected, callback);\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given type & the given node.\n *\n * @param  {boolean} multi     - Whether the graph is multi or not.\n * @param  {string}  type      - Type of edges to retrieve.\n * @param  {string}  direction - In or out?\n * @param  {any}     nodeData  - Target node's data.\n * @return {array}             - Array of edges.\n */\nfunction createEdgeArrayForNode(multi, type, direction, nodeData) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForNode(false, multi, type, direction, nodeData, function (key) {\n    edges.push(key);\n  });\n\n  return edges;\n}\n\n/**\n * Function iterating over a node's edges using a callback.\n *\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createEdgeIteratorForNode(type, direction, nodeData) {\n  let iterator = emptyIterator();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out' && typeof nodeData.in !== 'undefined')\n      iterator = chain(iterator, createIterator(nodeData.in));\n    if (direction !== 'in' && typeof nodeData.out !== 'undefined')\n      iterator = chain(\n        iterator,\n        createIterator(nodeData.out, !direction ? nodeData.key : undefined)\n      );\n  }\n\n  if (type !== 'directed' && typeof nodeData.undirected !== 'undefined') {\n    iterator = chain(iterator, createIterator(nodeData.undirected));\n  }\n\n  return iterator;\n}\n\n/**\n * Function iterating over edges for the given path using a callback to match\n * one of them.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction forEachEdgeForPath(\n  breakable,\n  type,\n  multi,\n  direction,\n  sourceData,\n  target,\n  callback\n) {\n  const fn = multi ? forEachForKeyMulti : forEachForKeySimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (typeof sourceData.in !== 'undefined' && direction !== 'out') {\n      found = fn(breakable, sourceData.in, target, callback);\n\n      if (breakable && found) return found;\n    }\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      (direction || sourceData.key !== target)\n    ) {\n      found = fn(breakable, sourceData.out, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    if (typeof sourceData.undirected !== 'undefined') {\n      found = fn(breakable, sourceData.undirected, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {any}      target     - Target node.\n * @return {array}               - Array of edges.\n */\nfunction createEdgeArrayForPath(type, multi, direction, sourceData, target) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForPath(\n    false,\n    type,\n    multi,\n    direction,\n    sourceData,\n    target,\n    function (key) {\n      edges.push(key);\n    }\n  );\n\n  return edges;\n}\n\n/**\n * Function returning an iterator over edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction createEdgeIteratorForPath(type, direction, sourceData, target) {\n  let iterator = emptyIterator();\n\n  if (type !== 'undirected') {\n    if (\n      typeof sourceData.in !== 'undefined' &&\n      direction !== 'out' &&\n      target in sourceData.in\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.in, target));\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      target in sourceData.out &&\n      (direction || sourceData.key !== target)\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.out, target));\n  }\n\n  if (type !== 'directed') {\n    if (\n      typeof sourceData.undirected !== 'undefined' &&\n      target in sourceData.undirected\n    )\n      iterator = chain(\n        iterator,\n        createIteratorForKey(sourceData.undirected, target)\n      );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching an edge array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain edges.\n   *\n   * Arity 0: Return all the relevant edges.\n   *\n   * Arity 1: Return all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Return the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    if (!arguments.length) return createEdgeArray(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeArrayForNode(\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData\n      );\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeArrayForPath(\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching a edge callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(false, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        false,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        false,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${forEachName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function mapping the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Map all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Map all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Map the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    let result;\n\n    // We know the result length beforehand\n    if (args.length === 0) {\n      let length = 0;\n\n      if (type !== 'directed') length += this.undirectedSize;\n      if (type !== 'undirected') length += this.directedSize;\n\n      result = new Array(length);\n\n      let i = 0;\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result[i++] = callback(e, ea, s, t, sa, ta, u);\n      });\n    }\n\n    // We don't know the result length beforehand\n    // TODO: we can in some instances of simple graphs, knowing degree\n    else {\n      result = [];\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result.push(callback(e, ea, s, t, sa, ta, u));\n      });\n    }\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function filtering the graph's relevant edges using the provided predicate\n   * function.\n   *\n   * Arity 1: Filter all the relevant edges.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 2: Filter all of a node's relevant edges.\n   * @param  {any}      node      - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 3: Filter the relevant edges across the given path.\n   * @param  {any}      source    - Source node.\n   * @param  {any}      target    - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    const result = [];\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      if (callback(e, ea, s, t, sa, ta, u)) result.push(e);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function reducing the graph's relevant edges using the provided accumulator\n   * function.\n   *\n   * Arity 1: Reduce all the relevant edges.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 2: Reduce all of a node's relevant edges.\n   * @param  {any}      node         - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 3: Reduce the relevant edges across the given path.\n   * @param  {any}      source       - Source node.\n   * @param  {any}      target       - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function () {\n    let args = Array.prototype.slice.call(arguments);\n\n    if (args.length < 2 || args.length > 4) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: invalid number of arguments (expecting 2, 3 or 4 and got ${args.length}).`\n      );\n    }\n\n    if (\n      typeof args[args.length - 1] === 'function' &&\n      typeof args[args.length - 2] !== 'function'\n    ) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n    }\n\n    let callback;\n    let initialValue;\n\n    if (args.length === 2) {\n      callback = args[0];\n      initialValue = args[1];\n      args = [];\n    } else if (args.length === 3) {\n      callback = args[1];\n      initialValue = args[2];\n      args = [args[0]];\n    } else if (args.length === 4) {\n      callback = args[2];\n      initialValue = args[3];\n      args = [args[0], args[1]];\n    }\n\n    let accumulator = initialValue;\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      accumulator = callback(accumulator, e, ea, s, t, sa, ta, u);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable edge callback iterator method to the Graph\n * prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const findEdgeName = 'find' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges in order to match\n   * one of them using the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findEdgeName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return false;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(true, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        true,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        true,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${findEdgeName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether any one of them matches the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[someName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether all of them matche the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[everyName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return !callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching an edge iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeIteratorCreator(Class, description) {\n  const {name: originalName, type, direction} = description;\n\n  const name = originalName.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over the graph's edges.\n   *\n   * Arity 0: Iterate over all the relevant edges.\n   *\n   * Arity 1: Iterate over all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Iterate over the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return emptyIterator();\n\n    if (!arguments.length) return createEdgeIterator(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeIteratorForNode(type, direction, sourceData);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeIteratorForPath(type, direction, sourceData, target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching every edge iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachEdgeIterationMethods(Graph) {\n  EDGES_ITERATION.forEach(description => {\n    attachEdgeArrayCreator(Graph, description);\n    attachForEachEdge(Graph, description);\n    attachFindEdge(Graph, description);\n    attachEdgeIteratorCreator(Graph, description);\n  });\n}\n", "/**\n * Graphology Neighbor Iteration\n * ==============================\n *\n * Attaching some methods to the Graph class to be able to iterate over\n * neighbors.\n */\nimport {chain, emptyIterator} from '../utils';\n\nimport {NotFoundGraphError, InvalidArgumentsGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst NEIGHBORS_ITERATION = [\n  {\n    name: 'neighbors',\n    type: 'mixed'\n  },\n  {\n    name: 'inNeighbors',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outNeighbors',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundNeighbors',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundNeighbors',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedNeighbors',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedNeighbors',\n    type: 'undirected'\n  }\n];\n\n/**\n * Helpers.\n */\nfunction CompositeSetWrapper() {\n  this.A = null;\n  this.B = null;\n}\n\nCompositeSetWrapper.prototype.wrap = function (set) {\n  if (this.A === null) this.A = set;\n  else if (this.B === null) this.B = set;\n};\n\nCompositeSetWrapper.prototype.has = function (key) {\n  if (this.A !== null && key in this.A) return true;\n  if (this.B !== null && key in this.B) return true;\n  return false;\n};\n\n/**\n * Function iterating over the given node's relevant neighbors to match\n * one of them using a predicated function.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Callback to use.\n */\nfunction forEachInObjectOnce(breakable, visited, nodeData, object, callback) {\n  for (const k in object) {\n    const edgeData = object[k];\n\n    const sourceData = edgeData.source;\n    const targetData = edgeData.target;\n\n    const neighborData = sourceData === nodeData ? targetData : sourceData;\n\n    if (visited && visited.has(neighborData.key)) continue;\n\n    const shouldBreak = callback(neighborData.key, neighborData.attributes);\n\n    if (breakable && shouldBreak) return neighborData.key;\n  }\n\n  return;\n}\n\nfunction forEachNeighbor(breakable, type, direction, nodeData, callback) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.undirected,\n        callback\n      );\n\n    if (typeof direction === 'string')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData[direction],\n        callback\n      );\n  }\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.in,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.in);\n    }\n    if (direction !== 'in') {\n      found = forEachInObjectOnce(\n        breakable,\n        visited,\n        nodeData,\n        nodeData.out,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.out);\n    }\n  }\n\n  if (type !== 'directed') {\n    found = forEachInObjectOnce(\n      breakable,\n      visited,\n      nodeData,\n      nodeData.undirected,\n      callback\n    );\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of relevant neighbors for the given node.\n *\n * @param  {string}       type      - Type of neighbors.\n * @param  {string}       direction - Direction.\n * @param  {any}          nodeData  - Target node's data.\n * @return {Array}                  - The list of neighbors.\n */\nfunction createNeighborArrayForNode(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected') return Object.keys(nodeData.undirected);\n\n    if (typeof direction === 'string') return Object.keys(nodeData[direction]);\n  }\n\n  const neighbors = [];\n\n  forEachNeighbor(false, type, direction, nodeData, function (key) {\n    neighbors.push(key);\n  });\n\n  return neighbors;\n}\n\n/**\n * Function returning an iterator over the given node's relevant neighbors.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createDedupedObjectIterator(visited, nodeData, object) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let i = 0;\n\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      let neighborData = null;\n\n      do {\n        if (i >= l) {\n          if (visited) visited.wrap(object);\n          return {done: true};\n        }\n\n        const edgeData = object[keys[i++]];\n\n        const sourceData = edgeData.source;\n        const targetData = edgeData.target;\n\n        neighborData = sourceData === nodeData ? targetData : sourceData;\n\n        if (visited && visited.has(neighborData.key)) {\n          neighborData = null;\n          continue;\n        }\n      } while (neighborData === null);\n\n      return {\n        done: false,\n        value: {neighbor: neighborData.key, attributes: neighborData.attributes}\n      };\n    }\n  };\n}\n\nfunction createNeighborIterator(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return createDedupedObjectIterator(null, nodeData, nodeData.undirected);\n\n    if (typeof direction === 'string')\n      return createDedupedObjectIterator(null, nodeData, nodeData[direction]);\n  }\n\n  let iterator = emptyIterator();\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.in)\n      );\n    }\n    if (direction !== 'in') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.out)\n      );\n    }\n  }\n\n  if (type !== 'directed') {\n    iterator = chain(\n      iterator,\n      createDedupedObjectIterator(visited, nodeData, nodeData.undirected)\n    );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching a neighbors array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain neighbors.\n   *\n   * @param  {any}   node   - Target node.\n   * @return {array} - The neighbors of neighbors.\n   *\n   * @throws {Error} - Will throw if node is not found in the graph.\n   */\n  Class.prototype[name] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${name}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborArrayForNode(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${forEachName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    forEachNeighbor(\n      false,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function mapping the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function (node, callback) {\n    // TODO: optimize when size is known beforehand\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      result.push(callback(n, a));\n    });\n\n    return result;\n  };\n\n  /**\n   * Function filtering the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function (node, callback) {\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      if (callback(n, a)) result.push(n);\n    });\n\n    return result;\n  };\n\n  /**\n   * Function reducing the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function (node, callback, initialValue) {\n    if (arguments.length < 3)\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n\n    let accumulator = initialValue;\n\n    this[forEachName](node, (n, a) => {\n      accumulator = callback(accumulator, n, a);\n    });\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable neighbors callback iterator method to the\n * Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const capitalizedSingular = name[0].toUpperCase() + name.slice(1, -1);\n\n  const findName = 'find' + capitalizedSingular;\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${findName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return forEachNeighbor(\n      true,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if any of them\n   * matches the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + capitalizedSingular;\n\n  Class.prototype[someName] = function (node, callback) {\n    const found = this[findName](node, callback);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if all of them\n   * matche the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + capitalizedSingular;\n\n  Class.prototype[everyName] = function (node, callback) {\n    const found = this[findName](node, (n, a) => {\n      return !callback(n, a);\n    });\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborIteratorCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  const iteratorName = name.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over all the relevant neighbors.\n   *\n   * @param  {any}      node     - Target node.\n   * @return {Iterator}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[iteratorName] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return emptyIterator();\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${iteratorName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborIterator(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching every neighbor iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachNeighborIterationMethods(Graph) {\n  NEIGHBORS_ITERATION.forEach(description => {\n    attachNeighborArrayCreator(Graph, description);\n    attachForEachNeighbor(Graph, description);\n    attachFindNeighbor(Graph, description);\n    attachNeighborIteratorCreator(Graph, description);\n  });\n}\n", "/**\n * Graphology Adjacency Iteration\n * ===============================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's adjacency.\n */\n\n/**\n * Function iterating over a simple graph's adjacency using a callback.\n *\n * @param {boolean}  breakable         - Can we break?\n * @param {boolean}  assymetric        - Whether to emit undirected edges only once.\n * @param {boolean}  disconnectedNodes - Whether to emit disconnected nodes.\n * @param {Graph}    graph             - Target Graph instance.\n * @param {callback} function          - Iteration callback.\n */\nexport function forEachAdjacency(\n  breakable,\n  assymetric,\n  disconnectedNodes,\n  graph,\n  callback\n) {\n  const iterator = graph._nodes.values();\n\n  const type = graph.type;\n\n  let step, sourceData, neighbor, adj, edgeData, targetData, shouldBreak;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    let hasEdges = false;\n\n    sourceData = step.value;\n\n    if (type !== 'undirected') {\n      adj = sourceData.out;\n\n      for (neighbor in adj) {\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (type !== 'directed') {\n      adj = sourceData.undirected;\n\n      for (neighbor in adj) {\n        if (assymetric && sourceData.key > neighbor) continue;\n\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          if (targetData.key !== neighbor) targetData = edgeData.source;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (disconnectedNodes && !hasEdges) {\n      shouldBreak = callback(\n        sourceData.key,\n        null,\n        sourceData.attributes,\n        null,\n        null,\n        null,\n        null\n      );\n\n      if (breakable && shouldBreak) return null;\n    }\n  }\n\n  return;\n}\n", "/**\n * Graphology Serialization Utilities\n * ===================================\n *\n * Collection of functions used by the graph serialization schemes.\n */\nimport {InvalidArgumentsGraphError} from './errors';\nimport {assign, isPlainObject, isEmpty} from './utils';\n\n/**\n * Formats internal node data into a serialized node.\n *\n * @param  {any}    key  - The node's key.\n * @param  {object} data - Internal node's data.\n * @return {array}       - The serialized node.\n */\nexport function serializeNode(key, data) {\n  const serialized = {key};\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  return serialized;\n}\n\n/**\n * Formats internal edge data into a serialized edge.\n *\n * @param  {string} type - The graph's type.\n * @param  {any}    key  - The edge's key.\n * @param  {object} data - Internal edge's data.\n * @return {array}       - The serialized edge.\n */\nexport function serializeEdge(type, key, data) {\n  const serialized = {\n    key,\n    source: data.source.key,\n    target: data.target.key\n  };\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  if (type === 'mixed' && data.undirected) serialized.undirected = true;\n\n  return serialized;\n}\n\n/**\n * Checks whether the given value is a serialized node.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedNode(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.'\n    );\n\n  if (!('key' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized node is missing its key.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n}\n\n/**\n * Checks whether the given value is a serialized edge.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedEdge(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.'\n    );\n\n  if (!('source' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its source.'\n    );\n\n  if (!('target' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its target.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n\n  if ('undirected' in value && typeof value.undirected !== 'boolean')\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.'\n    );\n}\n", "/* eslint no-nested-ternary: 0 */\n/**\n * Graphology Reference Implementation\n * ====================================\n *\n * Reference implementation of the graphology specs.\n */\nimport {EventEmitter} from 'events';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\nimport {\n  MixedNodeData,\n  DirectedNodeData,\n  UndirectedNodeData,\n  EdgeData\n} from './data';\n\nimport attachNodeAttributesMethods from './attributes/nodes';\nimport attachEdgeAttributesMethods from './attributes/edges';\nimport attachEdgeIterationMethods from './iteration/edges';\nimport attachNeighborIterationMethods from './iteration/neighbors';\nimport {forEachAdjacency} from './iteration/adjacency';\n\nimport {\n  serializeNode,\n  serializeEdge,\n  validateSerializedNode,\n  validateSerializedEdge\n} from './serialization';\n\nimport {\n  assign,\n  getMatchingEdge,\n  isPlainObject,\n  privateProperty,\n  readOnlyProperty,\n  incrementalIdStartingFromRandomByte,\n  validateHints\n} from './utils';\n\n/**\n * Constants.\n */\nconst INSTANCE_ID = incrementalIdStartingFromRandomByte();\n\n/**\n * Enums.\n */\nconst TYPES = new Set(['directed', 'undirected', 'mixed']);\n\nconst EMITTER_PROPS = new Set([\n  'domain',\n  '_events',\n  '_eventsCount',\n  '_maxListeners'\n]);\n\nconst EDGE_ADD_METHODS = [\n  {\n    name: verb => `${verb}Edge`,\n    generateKey: true\n  },\n  {\n    name: verb => `${verb}DirectedEdge`,\n    generateKey: true,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdge`,\n    generateKey: true,\n    type: 'undirected'\n  },\n  {\n    name: verb => `${verb}EdgeWithKey`\n  },\n  {\n    name: verb => `${verb}DirectedEdgeWithKey`,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdgeWithKey`,\n    type: 'undirected'\n  }\n];\n\n/**\n * Default options.\n */\nconst DEFAULTS = {\n  allowSelfLoops: true,\n  multi: false,\n  type: 'mixed'\n};\n\n/**\n * Abstract functions used by the Graph class for various methods.\n */\n\n/**\n * Internal method used to add a node to the given graph\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {any}     node            - The node's key.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {NodeData}                - Created node data.\n */\nfunction addNode(graph, node, attributes) {\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.addNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // String coercion\n  node = '' + node;\n  attributes = attributes || {};\n\n  if (graph._nodes.has(node))\n    throw new UsageGraphError(\n      `Graph.addNode: the \"${node}\" node already exist in the graph.`\n    );\n\n  const data = new graph.NodeDataClass(node, attributes);\n\n  // Adding the node to internal register\n  graph._nodes.set(node, data);\n\n  // Emitting\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Same as the above but without sanity checks because we call this in contexts\n * where necessary checks were already done.\n */\nfunction unsafeAddNode(graph, node, attributes) {\n  const data = new graph.NodeDataClass(node, attributes);\n\n  graph._nodes.set(node, data);\n\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction addEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n  attributes = attributes || {};\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  const sourceData = graph._nodes.get(source),\n    targetData = graph._nodes.get(target);\n\n  if (!sourceData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: source node \"${source}\" not found.`\n    );\n\n  if (!targetData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: target node \"${target}\" not found.`\n    );\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  // Here, we might have a source / target collision\n  if (\n    !graph.multi &&\n    (undirected\n      ? typeof sourceData.undirected[target] !== 'undefined'\n      : typeof sourceData.out[target] !== 'undefined')\n  ) {\n    throw new UsageGraphError(\n      `Graph.${name}: an edge linking \"${source}\" to \"${target}\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`\n    );\n  }\n\n  // Storing some data\n  const edgeData = new EdgeData(\n    undirected,\n    edge,\n    sourceData,\n    targetData,\n    attributes\n  );\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return edge;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @param  {boolean} [asUpdater]       - Are we updating or merging?\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction mergeEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes,\n  asUpdater\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes) {\n    if (asUpdater) {\n      if (typeof attributes !== 'function')\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid updater function. Expecting a function but got \"${attributes}\"`\n        );\n    } else {\n      if (!isPlainObject(attributes))\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n        );\n    }\n  }\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n\n  let updater;\n\n  if (asUpdater) {\n    updater = attributes;\n    attributes = undefined;\n  }\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  let sourceData = graph._nodes.get(source);\n  let targetData = graph._nodes.get(target);\n  let edgeData;\n\n  // Do we need to handle duplicate?\n  let alreadyExistingEdgeData;\n\n  if (!mustGenerateKey) {\n    edgeData = graph._edges.get(edge);\n\n    if (edgeData) {\n      // Here, we need to ensure, if the user gave a key, that source & target\n      // are consistent\n      if (edgeData.source.key !== source || edgeData.target.key !== target) {\n        // If source or target inconsistent\n        if (\n          !undirected ||\n          edgeData.source.key !== target ||\n          edgeData.target.key !== source\n        ) {\n          // If directed, or source/target aren't flipped\n          throw new UsageGraphError(\n            `Graph.${name}: inconsistency detected when attempting to merge the \"${edge}\" edge with \"${source}\" source & \"${target}\" target vs. (\"${edgeData.source.key}\", \"${edgeData.target.key}\").`\n          );\n        }\n      }\n\n      alreadyExistingEdgeData = edgeData;\n    }\n  }\n\n  // Here, we might have a source / target collision\n  if (!alreadyExistingEdgeData && !graph.multi && sourceData) {\n    alreadyExistingEdgeData = undirected\n      ? sourceData.undirected[target]\n      : sourceData.out[target];\n  }\n\n  // Handling duplicates\n  if (alreadyExistingEdgeData) {\n    const info = [alreadyExistingEdgeData.key, false, false, false];\n\n    // We can skip the attribute merging part if the user did not provide them\n    if (asUpdater ? !updater : !attributes) return info;\n\n    // Updating the attributes\n    if (asUpdater) {\n      const oldAttributes = alreadyExistingEdgeData.attributes;\n      alreadyExistingEdgeData.attributes = updater(oldAttributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'replace',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes\n      });\n    }\n\n    // Merging the attributes\n    else {\n      assign(alreadyExistingEdgeData.attributes, attributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'merge',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes,\n        data: attributes\n      });\n    }\n\n    return info;\n  }\n\n  attributes = attributes || {};\n\n  if (asUpdater && updater) attributes = updater(attributes);\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  let sourceWasAdded = false;\n  let targetWasAdded = false;\n\n  if (!sourceData) {\n    sourceData = unsafeAddNode(graph, source, {});\n    sourceWasAdded = true;\n\n    if (source === target) {\n      targetData = sourceData;\n      targetWasAdded = true;\n    }\n  }\n  if (!targetData) {\n    targetData = unsafeAddNode(graph, target, {});\n    targetWasAdded = true;\n  }\n\n  // Storing some data\n  edgeData = new EdgeData(undirected, edge, sourceData, targetData, attributes);\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return [edge, true, sourceWasAdded, targetWasAdded];\n}\n\n/**\n * Internal method used to drop an edge.\n *\n * @param  {Graph}    graph    - Target graph.\n * @param  {EdgeData} edgeData - Data of the edge to drop.\n */\nfunction dropEdgeFromData(graph, edgeData) {\n  // Dropping the edge from the register\n  graph._edges.delete(edgeData.key);\n\n  // Updating related degrees\n  const {source: sourceData, target: targetData, attributes} = edgeData;\n\n  const undirected = edgeData.undirected;\n\n  const isSelfLoop = sourceData === targetData;\n\n  if (undirected) {\n    sourceData.undirectedDegree--;\n    targetData.undirectedDegree--;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops--;\n      graph._undirectedSelfLoopCount--;\n    }\n  } else {\n    sourceData.outDegree--;\n    targetData.inDegree--;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops--;\n      graph._directedSelfLoopCount--;\n    }\n  }\n\n  // Clearing index\n  if (graph.multi) edgeData.detachMulti();\n  else edgeData.detach();\n\n  if (undirected) graph._undirectedSize--;\n  else graph._directedSize--;\n\n  // Emitting\n  graph.emit('edgeDropped', {\n    key: edgeData.key,\n    attributes,\n    source: sourceData.key,\n    target: targetData.key,\n    undirected\n  });\n}\n\n/**\n * Graph class\n *\n * @constructor\n * @param  {object}  [options] - Options:\n * @param  {boolean}   [allowSelfLoops] - Allow self loops?\n * @param  {string}    [type]           - Type of the graph.\n * @param  {boolean}   [map]            - Allow references as keys?\n * @param  {boolean}   [multi]          - Allow parallel edges?\n *\n * @throws {Error} - Will throw if the arguments are not valid.\n */\nexport default class Graph extends EventEmitter {\n  constructor(options) {\n    super();\n\n    //-- Solving options\n    options = assign({}, DEFAULTS, options);\n\n    // Enforcing options validity\n    if (typeof options.multi !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"${options.multi}\".`\n      );\n\n    if (!TYPES.has(options.type))\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'type' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"${options.type}\".`\n      );\n\n    if (typeof options.allowSelfLoops !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"${options.allowSelfLoops}\".`\n      );\n\n    //-- Private properties\n\n    // Utilities\n    const NodeDataClass =\n      options.type === 'mixed'\n        ? MixedNodeData\n        : options.type === 'directed'\n        ? DirectedNodeData\n        : UndirectedNodeData;\n\n    privateProperty(this, 'NodeDataClass', NodeDataClass);\n\n    // Internal edge key generator\n\n    // NOTE: this internal generator produce keys that are strings\n    // composed of a weird prefix, an incremental instance id starting from\n    // a random byte and finally an internal instance incremental id.\n    // All this to avoid intra-frame and cross-frame adversarial inputs\n    // that can force a single #.addEdge call to degenerate into a O(n)\n    // available key search loop.\n\n    // It also ensures that automatically generated edge keys are unlikely\n    // to produce collisions with arbitrary keys given by users.\n    const instancePrefix = 'geid_' + INSTANCE_ID() + '_';\n    let edgeId = 0;\n\n    const edgeKeyGenerator = () => {\n      let availableEdgeKey;\n\n      do {\n        availableEdgeKey = instancePrefix + edgeId++;\n      } while (this._edges.has(availableEdgeKey));\n\n      return availableEdgeKey;\n    };\n\n    // Indexes\n    privateProperty(this, '_attributes', {});\n    privateProperty(this, '_nodes', new Map());\n    privateProperty(this, '_edges', new Map());\n    privateProperty(this, '_directedSize', 0);\n    privateProperty(this, '_undirectedSize', 0);\n    privateProperty(this, '_directedSelfLoopCount', 0);\n    privateProperty(this, '_undirectedSelfLoopCount', 0);\n    privateProperty(this, '_edgeKeyGenerator', edgeKeyGenerator);\n\n    // Options\n    privateProperty(this, '_options', options);\n\n    // Emitter properties\n    EMITTER_PROPS.forEach(prop => privateProperty(this, prop, this[prop]));\n\n    //-- Properties readers\n    readOnlyProperty(this, 'order', () => this._nodes.size);\n    readOnlyProperty(this, 'size', () => this._edges.size);\n    readOnlyProperty(this, 'directedSize', () => this._directedSize);\n    readOnlyProperty(this, 'undirectedSize', () => this._undirectedSize);\n    readOnlyProperty(\n      this,\n      'selfLoopCount',\n      () => this._directedSelfLoopCount + this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'directedSelfLoopCount',\n      () => this._directedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'undirectedSelfLoopCount',\n      () => this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(this, 'multi', this._options.multi);\n    readOnlyProperty(this, 'type', this._options.type);\n    readOnlyProperty(this, 'allowSelfLoops', this._options.allowSelfLoops);\n    readOnlyProperty(this, 'implementation', () => 'graphology');\n  }\n\n  _resetInstanceCounters() {\n    this._directedSize = 0;\n    this._undirectedSize = 0;\n    this._directedSelfLoopCount = 0;\n    this._undirectedSelfLoopCount = 0;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Read\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning whether the given node is found in the graph.\n   *\n   * @param  {any}     node - The node.\n   * @return {boolean}\n   */\n  hasNode(node) {\n    return this._nodes.has('' + node);\n  }\n\n  /**\n   * Method returning whether the given directed edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasDirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'undirected') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && !edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.out.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given undirected edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasUndirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'directed') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.undirected.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasEdge(source, target) {\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      return this._edges.has(edge);\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return (\n        (typeof nodeData.out !== 'undefined' &&\n          nodeData.out.hasOwnProperty(target)) ||\n        (typeof nodeData.undirected !== 'undefined' &&\n          nodeData.undirected.hasOwnProperty(target))\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning the edge matching source & target in a directed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  directedEdge(source, target) {\n    if (this.type === 'undirected') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData = (sourceData.out && sourceData.out[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a undirected fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  undirectedEdge(source, target) {\n    if (this.type === 'directed') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.undirected && sourceData.undirected[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a mixed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  edge(source, target) {\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]) ||\n      undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning whether two nodes are directed neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areDirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areDirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in || neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are out neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are in neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in;\n  }\n\n  /**\n   * Method returning whether two nodes are undirected neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areUndirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areUndirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return false;\n\n    return neighbor in nodeData.undirected;\n  }\n\n  /**\n   * Method returning whether two nodes are neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in || neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are inbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are outbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning the given node's in degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree;\n  }\n\n  /**\n   * Method returning the given node's out degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's undirected degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree;\n  }\n\n  /**\n   * Method returning the given node's inbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's outbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's in degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's out degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree - nodeData.directedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's undirected degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree - nodeData.undirectedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's inbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's outbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n      loops += nodeData.directedLoops * 2;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given edge's source.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's source.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  source(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.source: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key;\n  }\n\n  /**\n   * Method returning the given edge's target.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's target.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  target(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.target: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.target.key;\n  }\n\n  /**\n   * Method returning the given edge's extremities.\n   *\n   * @param  {any}   edge - The edge's key.\n   * @return {array}      - The edge's extremities.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  extremities(edge) {\n    edge = '' + edge;\n\n    const edgeData = this._edges.get(edge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.extremities: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return [edgeData.source.key, edgeData.target.key];\n  }\n\n  /**\n   * Given a node & an edge, returns the other extremity of the edge.\n   *\n   * @param  {any}   node - The node's key.\n   * @param  {any}   edge - The edge's key.\n   * @return {any}        - The related node.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph or if the\n   *                   edge & node are not related.\n   */\n  opposite(node, edge) {\n    node = '' + node;\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.opposite: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    const source = data.source.key;\n    const target = data.target.key;\n\n    if (node === source) return target;\n    if (node === target) return source;\n\n    throw new NotFoundGraphError(\n      `Graph.opposite: the \"${node}\" node is not attached to the \"${edge}\" edge (${source}, ${target}).`\n    );\n  }\n\n  /**\n   * Returns whether the given edge has the given node as extremity.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @param  {any}     node - The node's key.\n   * @return {boolean}      - The related node.\n   *\n   * @throws {Error} - Will throw if either the node or the edge isn't in the graph.\n   */\n  hasExtremity(edge, node) {\n    edge = '' + edge;\n    node = '' + node;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.hasExtremity: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key === node || data.target.key === node;\n  }\n\n  /**\n   * Method returning whether the given edge is undirected.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isUndirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isUndirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is directed.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isDirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isDirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return !data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is a self loop.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isSelfLoop(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isSelfLoop: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source === data.target;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Mutation\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to add a node to the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   *\n   * @throws {Error} - Will throw if the given node already exist.\n   * @throws {Error} - Will throw if the given attributes are not an object.\n   */\n  addNode(node, attributes) {\n    const nodeData = addNode(this, node, attributes);\n\n    return nodeData.key;\n  }\n\n  /**\n   * Method used to merge a node into the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   */\n  mergeNode(node, attributes) {\n    if (attributes && !isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.mergeNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n    attributes = attributes || {};\n\n    // If the node already exists, we merge the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (attributes) {\n        assign(data.attributes, attributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'merge',\n          key: node,\n          attributes: data.attributes,\n          data: attributes\n        });\n      }\n      return [node, false];\n    }\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to add a node if it does not exist in the graph or else to\n   * update its attributes using a function.\n   *\n   * @param  {any}      node      - The node.\n   * @param  {function} [updater] - Optional updater function.\n   * @return {any}                - The node.\n   */\n  updateNode(node, updater) {\n    if (updater && typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.updateNode: invalid updater function. Expecting a function but got \"${updater}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n\n    // If the node already exists, we update the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (updater) {\n        const oldAttributes = data.attributes;\n        data.attributes = updater(oldAttributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'replace',\n          key: node,\n          attributes: data.attributes\n        });\n      }\n      return [node, false];\n    }\n\n    const attributes = updater ? updater({}) : {};\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to drop a single node & all its attached edges from the graph.\n   *\n   * @param  {any}    node - The node.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the node doesn't exist.\n   */\n  dropNode(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.dropNode: could not find the \"${node}\" node in the graph.`\n      );\n\n    let edgeData;\n\n    // Removing attached edges\n    // NOTE: we could be faster here, but this is such a pain to maintain\n    if (this.type !== 'undirected') {\n      for (const neighbor in nodeData.out) {\n        edgeData = nodeData.out[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n\n      for (const neighbor in nodeData.in) {\n        edgeData = nodeData.in[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (this.type !== 'directed') {\n      for (const neighbor in nodeData.undirected) {\n        edgeData = nodeData.undirected[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    // Dropping the node from the register\n    this._nodes.delete(node);\n\n    // Emitting\n    this.emit('nodeDropped', {\n      key: node,\n      attributes: nodeData.attributes\n    });\n  }\n\n  /**\n   * Method used to drop a single edge from the graph.\n   *\n   * Arity 1:\n   * @param  {any}    edge - The edge.\n   *\n   * Arity 2:\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropEdge(edge) {\n    let edgeData;\n\n    if (arguments.length > 1) {\n      const source = '' + arguments[0];\n      const target = '' + arguments[1];\n\n      edgeData = getMatchingEdge(this, source, target, this.type);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${source}\" -> \"${target}\" edge in the graph.`\n        );\n    } else {\n      edge = '' + edge;\n\n      edgeData = this._edges.get(edge);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${edge}\" edge in the graph.`\n        );\n    }\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single directed edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropDirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const edgeData = getMatchingEdge(this, source, target, 'directed');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropDirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single undirected edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropUndirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    const edgeData = getMatchingEdge(this, source, target, 'undirected');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropUndirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to remove every edge & every node from the graph.\n   *\n   * @return {Graph}\n   */\n  clear() {\n    // Clearing edges\n    this._edges.clear();\n\n    // Clearing nodes\n    this._nodes.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('cleared');\n  }\n\n  /**\n   * Method used to remove every edge from the graph.\n   *\n   * @return {Graph}\n   */\n  clearEdges() {\n    // Clearing structure index\n    const iterator = this._nodes.values();\n\n    let step;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      step.value.clear();\n    }\n\n    // Clearing edges\n    this._edges.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('edgesCleared');\n  }\n\n  /**---------------------------------------------------------------------------\n   * Attributes-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning the desired graph's attribute.\n   *\n   * @param  {string} name - Name of the attribute.\n   * @return {any}\n   */\n  getAttribute(name) {\n    return this._attributes[name];\n  }\n\n  /**\n   * Method returning the graph's attributes.\n   *\n   * @return {object}\n   */\n  getAttributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Method returning whether the graph has the desired attribute.\n   *\n   * @param  {string}  name - Name of the attribute.\n   * @return {boolean}\n   */\n  hasAttribute(name) {\n    return this._attributes.hasOwnProperty(name);\n  }\n\n  /**\n   * Method setting a value for the desired graph's attribute.\n   *\n   * @param  {string}  name  - Name of the attribute.\n   * @param  {any}     value - Value for the attribute.\n   * @return {Graph}\n   */\n  setAttribute(name, value) {\n    this._attributes[name] = value;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method using a function to update the desired graph's attribute's value.\n   *\n   * @param  {string}   name    - Name of the attribute.\n   * @param  {function} updater - Function use to update the attribute's value.\n   * @return {Graph}\n   */\n  updateAttribute(name, updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttribute: updater should be a function.'\n      );\n\n    const value = this._attributes[name];\n\n    this._attributes[name] = updater(value);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method removing the desired graph's attribute.\n   *\n   * @param  {string} name  - Name of the attribute.\n   * @return {Graph}\n   */\n  removeAttribute(name) {\n    delete this._attributes[name];\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'remove',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method replacing the graph's attributes.\n   *\n   * @param  {object} attributes - New attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  replaceAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.replaceAttributes: provided attributes are not a plain object.'\n      );\n\n    this._attributes = attributes;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'replace',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method merging the graph's attributes.\n   *\n   * @param  {object} attributes - Attributes to merge.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  mergeAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.mergeAttributes: provided attributes are not a plain object.'\n      );\n\n    assign(this._attributes, attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'merge',\n      attributes: this._attributes,\n      data: attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method updating the graph's attributes.\n   *\n   * @param  {function} updater - Function used to update the attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given updater is not a function.\n   */\n  updateAttributes(updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttributes: provided updater is not a function.'\n      );\n\n    this._attributes = updater(this._attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'update',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method used to update each node's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachNodeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      nodeData.attributes = updater(nodeData.key, nodeData.attributes);\n    }\n\n    this.emit('eachNodeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**\n   * Method used to update each edge's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachEdgeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._edges.values();\n\n    let step, edgeData, sourceData, targetData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n      sourceData = edgeData.source;\n      targetData = edgeData.target;\n\n      edgeData.attributes = updater(\n        edgeData.key,\n        edgeData.attributes,\n        sourceData.key,\n        targetData.key,\n        sourceData.attributes,\n        targetData.attributes,\n        edgeData.undirected\n      );\n    }\n\n    this.emit('eachEdgeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Iteration-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method iterating over the graph's adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, false, this, callback);\n  }\n  forEachAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, true, this, callback);\n  }\n\n  /**\n   * Method iterating over the graph's assymetric adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAssymetricAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, false, this, callback);\n  }\n  forEachAssymetricAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, true, this, callback);\n  }\n\n  /**\n   * Method returning the list of the graph's nodes.\n   *\n   * @return {array} - The nodes.\n   */\n  nodes() {\n    return Array.from(this._nodes.keys());\n  }\n\n  /**\n   * Method iterating over the graph's nodes using the given callback.\n   *\n   * @param  {function}  callback - Callback (key, attributes, index).\n   */\n  forEachNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      callback(nodeData.key, nodeData.attributes);\n    }\n  }\n\n  /**\n   * Method iterating attempting to find a node matching the given predicate\n   * function.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  findNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.findNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return nodeData.key;\n    }\n\n    return;\n  }\n\n  /**\n   * Method mapping nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  mapNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.mapNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = new Array(this.order);\n    let i = 0;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      result[i++] = callback(nodeData.key, nodeData.attributes);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method returning whether some node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  someNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.someNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether all node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  everyNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.everyNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (!callback(nodeData.key, nodeData.attributes)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Method filtering nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  filterNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.filterNodes: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = [];\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes))\n        result.push(nodeData.key);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method reducing nodes.\n   *\n   * @param  {function}  callback - Callback (accumulator, key, attributes).\n   */\n  reduceNodes(callback, initialValue) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: expecting a callback.'\n      );\n\n    if (arguments.length < 2)\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.'\n      );\n\n    let accumulator = initialValue;\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      accumulator = callback(accumulator, nodeData.key, nodeData.attributes);\n    }\n\n    return accumulator;\n  }\n\n  /**\n   * Method returning an iterator over the graph's node entries.\n   *\n   * @return {Iterator}\n   */\n  nodeEntries() {\n    const iterator = this._nodes.values();\n\n    return {\n      [Symbol.iterator]() {\n        return this;\n      },\n      next() {\n        const step = iterator.next();\n        if (step.done) return step;\n        const data = step.value;\n        return {\n          value: {node: data.key, attributes: data.attributes},\n          done: false\n        };\n      }\n    };\n  }\n\n  /**---------------------------------------------------------------------------\n   * Serialization\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to export the whole graph.\n   *\n   * @return {object} - The serialized graph.\n   */\n  export() {\n    const nodes = new Array(this._nodes.size);\n\n    let i = 0;\n\n    this._nodes.forEach((data, key) => {\n      nodes[i++] = serializeNode(key, data);\n    });\n\n    const edges = new Array(this._edges.size);\n\n    i = 0;\n\n    this._edges.forEach((data, key) => {\n      edges[i++] = serializeEdge(this.type, key, data);\n    });\n\n    return {\n      options: {\n        type: this.type,\n        multi: this.multi,\n        allowSelfLoops: this.allowSelfLoops\n      },\n      attributes: this.getAttributes(),\n      nodes,\n      edges\n    };\n  }\n\n  /**\n   * Method used to import a serialized graph.\n   *\n   * @param  {object|Graph} data  - The serialized graph.\n   * @param  {boolean}      merge - Whether to merge data.\n   * @return {Graph}              - Returns itself for chaining.\n   */\n  import(data, merge = false) {\n    // Importing a Graph instance directly\n    if (data instanceof Graph) {\n      // Nodes\n      data.forEachNode((n, a) => {\n        if (merge) this.mergeNode(n, a);\n        else this.addNode(n, a);\n      });\n\n      // Edges\n      data.forEachEdge((e, a, s, t, _sa, _ta, u) => {\n        if (merge) {\n          if (u) this.mergeUndirectedEdgeWithKey(e, s, t, a);\n          else this.mergeDirectedEdgeWithKey(e, s, t, a);\n        } else {\n          if (u) this.addUndirectedEdgeWithKey(e, s, t, a);\n          else this.addDirectedEdgeWithKey(e, s, t, a);\n        }\n      });\n\n      return this;\n    }\n\n    // Importing a serialized graph\n    if (!isPlainObject(data))\n      throw new InvalidArgumentsGraphError(\n        'Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.'\n      );\n\n    if (data.attributes) {\n      if (!isPlainObject(data.attributes))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid attributes. Expecting a plain object.'\n        );\n\n      if (merge) this.mergeAttributes(data.attributes);\n      else this.replaceAttributes(data.attributes);\n    }\n\n    let i, l, list, node, edge;\n\n    if (data.nodes) {\n      list = data.nodes;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid nodes. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        node = list[i];\n\n        // Validating\n        validateSerializedNode(node);\n\n        // Adding the node\n        const {key, attributes} = node;\n\n        if (merge) this.mergeNode(key, attributes);\n        else this.addNode(key, attributes);\n      }\n    }\n\n    if (data.edges) {\n      let undirectedByDefault = false;\n\n      if (this.type === 'undirected') {\n        undirectedByDefault = true;\n      }\n\n      list = data.edges;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid edges. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        edge = list[i];\n\n        // Validating\n        validateSerializedEdge(edge);\n\n        // Adding the edge\n        const {\n          source,\n          target,\n          attributes,\n          undirected = undirectedByDefault\n        } = edge;\n\n        let method;\n\n        if ('key' in edge) {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdgeWithKey\n              : this.mergeDirectedEdgeWithKey\n            : undirected\n            ? this.addUndirectedEdgeWithKey\n            : this.addDirectedEdgeWithKey;\n\n          method.call(this, edge.key, source, target, attributes);\n        } else {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdge\n              : this.mergeDirectedEdge\n            : undirected\n            ? this.addUndirectedEdge\n            : this.addDirectedEdge;\n\n          method.call(this, source, target, attributes);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Utils\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning a null copy of the graph, i.e. a graph without nodes\n   * & edges but with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The null copy.\n   */\n  nullCopy(options) {\n    const graph = new Graph(assign({}, this._options, options));\n    graph.replaceAttributes(assign({}, this.getAttributes()));\n    return graph;\n  }\n\n  /**\n   * Method returning an empty copy of the graph, i.e. a graph without edges but\n   * with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The empty copy.\n   */\n  emptyCopy(options) {\n    const graph = this.nullCopy(options);\n\n    this._nodes.forEach((nodeData, key) => {\n      const attributes = assign({}, nodeData.attributes);\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      nodeData = new graph.NodeDataClass(key, attributes);\n      graph._nodes.set(key, nodeData);\n    });\n\n    return graph;\n  }\n\n  /**\n   * Method returning an exact copy of the graph.\n   *\n   * @param  {object} options - Upgrade options.\n   * @return {Graph}          - The copy.\n   */\n  copy(options) {\n    options = options || {};\n\n    if (\n      typeof options.type === 'string' &&\n      options.type !== this.type &&\n      options.type !== 'mixed'\n    )\n      throw new UsageGraphError(\n        `Graph.copy: cannot create an incompatible copy from \"${this.type}\" type to \"${options.type}\" because this would mean losing information about the current graph.`\n      );\n\n    if (\n      typeof options.multi === 'boolean' &&\n      options.multi !== this.multi &&\n      options.multi !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.'\n      );\n\n    if (\n      typeof options.allowSelfLoops === 'boolean' &&\n      options.allowSelfLoops !== this.allowSelfLoops &&\n      options.allowSelfLoops !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.'\n      );\n\n    const graph = this.emptyCopy(options);\n\n    const iterator = this._edges.values();\n\n    let step, edgeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      addEdge(\n        graph,\n        'copy',\n        false,\n        edgeData.undirected,\n        edgeData.key,\n        edgeData.source.key,\n        edgeData.target.key,\n        assign({}, edgeData.attributes)\n      );\n    }\n\n    return graph;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Known methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used by JavaScript to perform JSON serialization.\n   *\n   * @return {object} - The serialized graph.\n   */\n  toJSON() {\n    return this.export();\n  }\n\n  /**\n   * Method returning [object Graph].\n   */\n  toString() {\n    return '[object Graph]';\n  }\n\n  /**\n   * Method used internally by node's console to display a custom object.\n   *\n   * @return {object} - Formatted object representation of the graph.\n   */\n  inspect() {\n    const nodes = {};\n    this._nodes.forEach((data, key) => {\n      nodes[key] = data.attributes;\n    });\n\n    const edges = {},\n      multiIndex = {};\n\n    this._edges.forEach((data, key) => {\n      const direction = data.undirected ? '--' : '->';\n\n      let label = '';\n\n      let source = data.source.key;\n      let target = data.target.key;\n      let tmp;\n\n      if (data.undirected && source > target) {\n        tmp = source;\n        source = target;\n        target = tmp;\n      }\n\n      const desc = `(${source})${direction}(${target})`;\n\n      if (!key.startsWith('geid_')) {\n        label += `[${key}]: `;\n      } else if (this.multi) {\n        if (typeof multiIndex[desc] === 'undefined') {\n          multiIndex[desc] = 0;\n        } else {\n          multiIndex[desc]++;\n        }\n\n        label += `${multiIndex[desc]}. `;\n      }\n\n      label += desc;\n\n      edges[label] = data.attributes;\n    });\n\n    const dummy = {};\n\n    for (const k in this) {\n      if (\n        this.hasOwnProperty(k) &&\n        !EMITTER_PROPS.has(k) &&\n        typeof this[k] !== 'function' &&\n        typeof k !== 'symbol'\n      )\n        dummy[k] = this[k];\n    }\n\n    dummy.attributes = this._attributes;\n    dummy.nodes = nodes;\n    dummy.edges = edges;\n\n    privateProperty(dummy, 'constructor', this.constructor);\n\n    return dummy;\n  }\n}\n\n/**\n * Attaching methods to the prototype.\n *\n * Here, we are attaching a wide variety of methods to the Graph class'\n * prototype when those are very numerous and when their creation is\n * abstracted.\n */\n\n/**\n * Attaching custom inspect method for node >= 10.\n */\nif (typeof Symbol !== 'undefined')\n  Graph.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    Graph.prototype.inspect;\n\n/**\n * Related to edge addition.\n */\nEDGE_ADD_METHODS.forEach(method => {\n  ['add', 'merge', 'update'].forEach(verb => {\n    const name = method.name(verb);\n    const fn = verb === 'add' ? addEdge : mergeEdge;\n\n    if (method.generateKey) {\n      Graph.prototype[name] = function (source, target, attributes) {\n        return fn(\n          this,\n          name,\n          true,\n          (method.type || this.type) === 'undirected',\n          null,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    } else {\n      Graph.prototype[name] = function (edge, source, target, attributes) {\n        return fn(\n          this,\n          name,\n          false,\n          (method.type || this.type) === 'undirected',\n          edge,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    }\n  });\n});\n\n/**\n * Attributes-related.\n */\nattachNodeAttributesMethods(Graph);\nattachEdgeAttributesMethods(Graph);\n\n/**\n * Edge iteration-related.\n */\nattachEdgeIterationMethods(Graph);\n\n/**\n * Neighbor iteration-related.\n */\nattachNeighborIterationMethods(Graph);\n", "/**\n * Graphology Helper Classes\n * ==========================\n *\n * Building some higher-order classes instantiating the graph with\n * predefinite options.\n */\nimport {assign} from './utils';\nimport Graph from './graph';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\n/**\n * Alternative constructors.\n */\nclass DirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass UndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiDirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiUndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\n\n/**\n * Attaching static #.from method to each of the constructors.\n */\nfunction attachStaticFromMethod(Class) {\n  /**\n   * Builds a graph from serialized data or another graph's data.\n   *\n   * @param  {Graph|SerializedGraph} data      - Hydratation data.\n   * @param  {object}                [options] - Options.\n   * @return {Class}\n   */\n  Class.from = function (data, options) {\n    // Merging given options with serialized ones\n    const finalOptions = assign({}, data.options, options);\n\n    const instance = new Class(finalOptions);\n    instance.import(data);\n\n    return instance;\n  };\n}\n\nattachStaticFromMethod(Graph);\nattachStaticFromMethod(DirectedGraph);\nattachStaticFromMethod(UndirectedGraph);\nattachStaticFromMethod(MultiGraph);\nattachStaticFromMethod(MultiDirectedGraph);\nattachStaticFromMethod(MultiUndirectedGraph);\n\nGraph.Graph = Graph;\nGraph.DirectedGraph = DirectedGraph;\nGraph.UndirectedGraph = UndirectedGraph;\nGraph.MultiGraph = MultiGraph;\nGraph.MultiDirectedGraph = MultiDirectedGraph;\nGraph.MultiUndirectedGraph = MultiUndirectedGraph;\n\nGraph.InvalidArgumentsGraphError = InvalidArgumentsGraphError;\nGraph.NotFoundGraphError = NotFoundGraphError;\nGraph.UsageGraphError = UsageGraphError;\n\nexport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph\n};\n", "/**\n * Graphology ESM Endoint\n * =======================\n *\n * Endpoint for ESM modules consumers.\n */\nimport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph\n} from './classes';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\nexport default Graph;\n\nexport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph,\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n};\n", "import * as d3 from \"d3\";\r\nimport { wait } from \"../common/wait.js\";\r\nimport { crom } from \"../common/crom.js\";\r\nimport { throttle } from \"../common/throttle.js\";\r\nimport * as graphology from \"graphology\";\r\nimport { random } from \"graphology-layout\";\r\nimport forceAtlas2 from \"graphology-layout-forceatlas2\";\r\nimport FA2Layout from \"graphology-layout-forceatlas2/worker.js\";\r\nimport NoverlapLayout from \"graphology-layout-noverlap/worker.js\";\r\nimport Sigma from \"sigma\";\r\nimport { workerifyClient } from \"../common/workerify.js\";\r\nimport type { wikiGraphWorkerInterface } from \"./wiki-article-graph-worker-interface.js\";\r\n\r\ntype WikiGraph = Record<\r\n  string,\r\n  {\r\n    links: string[];\r\n    children: string[];\r\n  }\r\n>;\r\n\r\ntype Data = {\r\n  nodes: { id: string; group: string; radius: number }[];\r\n  links: {\r\n    source: string;\r\n    target: string;\r\n    value: number;\r\n  }[];\r\n};\r\n\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from https://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @param   {number}  h       The hue\r\n * @param   {number}  s       The saturation\r\n * @param   {number}  l       The lightness\r\n * @return  {Array}           The RGB representation\r\n */\r\nfunction hslToRgb(h: number, s: number, l: number) {\r\n  let r, g, b;\r\n\r\n  if (s === 0) {\r\n    r = g = b = l; // achromatic\r\n  } else {\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n    r = hueToRgb(p, q, h + 1 / 3);\r\n    g = hueToRgb(p, q, h);\r\n    b = hueToRgb(p, q, h - 1 / 3);\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n}\r\n\r\nfunction hueToRgb(p: number, q: number, t: number) {\r\n  if (t < 0) t += 1;\r\n  if (t > 1) t -= 1;\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n  if (t < 1 / 2) return q;\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n  return p;\r\n}\r\n\r\nfunction rgb2hex([r, g, b]: number[]) {\r\n  return `#${r.toString(16).padStart(2, \"0\")}${g\r\n    .toString(16)\r\n    .padStart(2, \"0\")}${b.toString(16).padStart(2, \"0\")}`;\r\n}\r\n\r\nfunction lerp(a: number, b: number, x: number) {\r\n  return a * (1 - x) + b * x;\r\n}\r\n\r\nlet angleOffsets: number[] = [];\r\nfor (let i = 0; i < 30000; i++) {\r\n  angleOffsets.push(Math.random() * Math.PI * 2);\r\n}\r\n\r\nfunction applyCircleIteration(graph: graphology.DirectedGraph) {\r\n  let neighborCountMap = new Map<string, number>();\r\n\r\n  for (const node of graph.nodes()) {\r\n    const neighbors = graph.outboundNeighbors(node);\r\n    let neighborCount = neighbors.length;\r\n    neighborCountMap.set(node, neighborCount);\r\n  }\r\n\r\n  let i = 0;\r\n  for (const node of graph.nodes()) {\r\n    const neighbors = graph.outboundNeighbors(node);\r\n    let neighborCount = neighbors.length;\r\n    const nodeData = graph.getNodeAttributes(node);\r\n\r\n    let angleOffset = angleOffsets[i];\r\n    for (let i = 0; i < neighborCount; i++) {\r\n      let angle = (Math.PI * 2 * i) / neighborCount + angleOffset;\r\n      const rad = Math.pow(neighborCount, 0.3) + 200;\r\n      let nx = Math.cos(angle) * rad + nodeData.x;\r\n      let ny = Math.sin(angle) * rad + nodeData.y;\r\n\r\n      const attribs = graph.getNodeAttributes(neighbors[i]);\r\n\r\n      // let influence = Math.pow(\r\n      //   -1 / (neighborCountMap.get(neighbors[i])! + 1),\r\n      //   50\r\n      // );\r\n      let influence = 0.01;\r\n\r\n      graph.setNodeAttribute(neighbors[i], \"x\", lerp(attribs.x, nx, influence));\r\n      graph.setNodeAttribute(neighbors[i], \"y\", lerp(attribs.y, ny, influence));\r\n    }\r\n\r\n    graph.setNodeAttribute(node, \"x\", nodeData.x * 1.02);\r\n    graph.setNodeAttribute(node, \"y\", nodeData.y * 1.02);\r\n    i++;\r\n  }\r\n}\r\n\r\nconst worker = new Worker(\r\n  \"../build/wiki-article-graph/wiki-article-graph-worker.js\"\r\n);\r\n\r\nlet positions: { id: string; x: number; y: number }[] = [];\r\n\r\nconst workerClient = workerifyClient<typeof wikiGraphWorkerInterface>(\r\n  \"graph\",\r\n  (req) => {\r\n    worker.addEventListener(\"message\", (e) => req(e.data));\r\n    return () => {};\r\n  },\r\n  (res) => {\r\n    worker.postMessage(res);\r\n  }\r\n);\r\n\r\nvoid (async () => {\r\n  let graphRaw: WikiGraph = await (await fetch(\"../build/links.json\")).json();\r\n\r\n  // graphRaw = Object.fromEntries(\r\n  //   Object.entries(graphRaw).filter(([k, v]) => !!k.match(/\\/scp-\\d{1,4}$/g))\r\n  // );\r\n\r\n  const graph = new graphology.DirectedGraph();\r\n\r\n  const data: Data = { nodes: [], links: [] };\r\n\r\n  const nodeColors = new Map<string, [number, number, number]>();\r\n\r\n  let i = 0;\r\n  const graphCount = Object.entries(graphRaw).length;\r\n\r\n  for (const [url, article] of Object.entries(graphRaw)) {\r\n    nodeColors.set(url, [i / graphCount, 1, 0.6]);\r\n    const colorRgb = hslToRgb(...nodeColors.get(url)!);\r\n    const color = rgb2hex(colorRgb);\r\n    graph.addNode(url, {\r\n      label: url.replace(\"http://scp-wiki.wikidot.com/\", \"\"),\r\n      size: Math.pow(article.links.length, 0.4) + 1,\r\n      color,\r\n    });\r\n    i++;\r\n  }\r\n\r\n  for (const [url, article] of Object.entries(graphRaw)) {\r\n    for (const slug of new Set(article.links)) {\r\n      const targetUrl = `http://scp-wiki.wikidot.com${slug}`;\r\n      if (graphRaw[targetUrl]) {\r\n        const color: [number, number, number] = nodeColors\r\n          .get(url)!\r\n          .concat() as any;\r\n        color[2] = 0.85;\r\n        graph.addDirectedEdge(url, targetUrl, {\r\n          size: 0.01,\r\n          color: rgb2hex(hslToRgb(...color)),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  random.assign(graph, {\r\n    dimensions: [\"x\", \"y\"],\r\n    scale: 1000,\r\n  });\r\n\r\n  applyCircleIteration(graph);\r\n  await workerClient.setGraph(graph.export());\r\n\r\n  let iters = 1;\r\n  void (async () => {\r\n    while (true) {\r\n      positions = await workerClient.applyIteration(\r\n        Math.min(iters * 0.01 + 1, 1),\r\n        15 / Math.sqrt(iters)\r\n      );\r\n      iters++;\r\n    }\r\n  })();\r\n\r\n  let idx = 0;\r\n\r\n  // let iters = 0;\r\n  // let interval = setInterval(() => {\r\n  //   iters++;\r\n  //   applyCoordinateDescentForceIteration(graph, {\r\n  //     repulsion: 0.5,\r\n  //     neighborAttraction: 20 / Math.sqrt(iters + 1),\r\n  //   });\r\n  //   if (iters > 1000) {\r\n  //     clearInterval(interval);\r\n  //   }\r\n  // }, 100);\r\n\r\n  document.body.style.height = \"100vh\";\r\n\r\n  const sigma = new Sigma(graph, document.body);\r\n\r\n  let animLoop = (t: number) => {\r\n    // console.log(t);\r\n    // let offset1 = (idx * 5000) % positions.length;\r\n    // let offset2 = ((idx + 1) * 5000) % positions.length;\r\n    // if (offset2 < offset1) offset2 += positions.length;\r\n    // for (const p of [...positions, ...positions].slice(offset1, offset2)) {\r\n    for (const p of positions) {\r\n      const attribs = graph.getNodeAttributes(p.id);\r\n      graph.setNodeAttribute(p.id, \"x\", lerp(attribs.x, p.x, 0.1));\r\n      graph.setNodeAttribute(p.id, \"y\", lerp(attribs.y, p.y, 0.1));\r\n    }\r\n    sigma.scheduleRefresh();\r\n    idx++;\r\n    setTimeout(animLoop);\r\n  };\r\n\r\n  animLoop(0);\r\n\r\n  let oldEdgeSettings: { id: string; color: string; size: number }[] = [];\r\n\r\n  sigma.on(\"enterNode\", (e) => {\r\n    const neighbors = graph.outboundEdges(e.node);\r\n    for (const n of neighbors) {\r\n      oldEdgeSettings.push({\r\n        color: graph.getEdgeAttribute(n, \"color\"),\r\n        size: graph.getEdgeAttribute(n, \"size\"),\r\n        id: n,\r\n      });\r\n      graph.setEdgeAttribute(n, \"color\", \"orange\");\r\n      graph.setEdgeAttribute(n, \"size\", 5);\r\n    }\r\n    const neighborsIn = graph.inboundEdges(e.node);\r\n    for (const n of neighborsIn) {\r\n      oldEdgeSettings.push({\r\n        color: graph.getEdgeAttribute(n, \"color\"),\r\n        size: graph.getEdgeAttribute(n, \"size\"),\r\n        id: n,\r\n      });\r\n      graph.setEdgeAttribute(n, \"color\", \"blue\");\r\n      graph.setEdgeAttribute(n, \"size\", 5);\r\n    }\r\n  });\r\n\r\n  sigma.on(\"leaveNode\", (e) => {\r\n    for (const c of oldEdgeSettings) {\r\n      graph.setEdgeAttribute(c.id, \"color\", c.color);\r\n      graph.setEdgeAttribute(c.id, \"size\", c.size);\r\n    }\r\n    oldEdgeSettings = [];\r\n  });\r\n})();\r\n", "function _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\n\nfunction _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\n\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function () {\n    return !!t;\n  })();\n}\n\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\n\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return _assertThisInitialized(t);\n}\n\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\n\nfunction _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\n\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && _setPrototypeOf(t, e);\n}\n\nexport { _inherits as _, _createClass as a, _classCallCheck as b, _callSuper as c, _toPropertyKey as d, _getPrototypeOf as e };\n", "function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\n\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\n\nvar HTML_COLORS = {\n  black: \"#000000\",\n  silver: \"#C0C0C0\",\n  gray: \"#808080\",\n  grey: \"#808080\",\n  white: \"#FFFFFF\",\n  maroon: \"#800000\",\n  red: \"#FF0000\",\n  purple: \"#800080\",\n  fuchsia: \"#FF00FF\",\n  green: \"#008000\",\n  lime: \"#00FF00\",\n  olive: \"#808000\",\n  yellow: \"#FFFF00\",\n  navy: \"#000080\",\n  blue: \"#0000FF\",\n  teal: \"#008080\",\n  aqua: \"#00FFFF\",\n  darkblue: \"#00008B\",\n  mediumblue: \"#0000CD\",\n  darkgreen: \"#006400\",\n  darkcyan: \"#008B8B\",\n  deepskyblue: \"#00BFFF\",\n  darkturquoise: \"#00CED1\",\n  mediumspringgreen: \"#00FA9A\",\n  springgreen: \"#00FF7F\",\n  cyan: \"#00FFFF\",\n  midnightblue: \"#191970\",\n  dodgerblue: \"#1E90FF\",\n  lightseagreen: \"#20B2AA\",\n  forestgreen: \"#228B22\",\n  seagreen: \"#2E8B57\",\n  darkslategray: \"#2F4F4F\",\n  darkslategrey: \"#2F4F4F\",\n  limegreen: \"#32CD32\",\n  mediumseagreen: \"#3CB371\",\n  turquoise: \"#40E0D0\",\n  royalblue: \"#4169E1\",\n  steelblue: \"#4682B4\",\n  darkslateblue: \"#483D8B\",\n  mediumturquoise: \"#48D1CC\",\n  indigo: \"#4B0082\",\n  darkolivegreen: \"#556B2F\",\n  cadetblue: \"#5F9EA0\",\n  cornflowerblue: \"#6495ED\",\n  rebeccapurple: \"#663399\",\n  mediumaquamarine: \"#66CDAA\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  slateblue: \"#6A5ACD\",\n  olivedrab: \"#6B8E23\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  mediumslateblue: \"#7B68EE\",\n  lawngreen: \"#7CFC00\",\n  chartreuse: \"#7FFF00\",\n  aquamarine: \"#7FFFD4\",\n  skyblue: \"#87CEEB\",\n  lightskyblue: \"#87CEFA\",\n  blueviolet: \"#8A2BE2\",\n  darkred: \"#8B0000\",\n  darkmagenta: \"#8B008B\",\n  saddlebrown: \"#8B4513\",\n  darkseagreen: \"#8FBC8F\",\n  lightgreen: \"#90EE90\",\n  mediumpurple: \"#9370DB\",\n  darkviolet: \"#9400D3\",\n  palegreen: \"#98FB98\",\n  darkorchid: \"#9932CC\",\n  yellowgreen: \"#9ACD32\",\n  sienna: \"#A0522D\",\n  brown: \"#A52A2A\",\n  darkgray: \"#A9A9A9\",\n  darkgrey: \"#A9A9A9\",\n  lightblue: \"#ADD8E6\",\n  greenyellow: \"#ADFF2F\",\n  paleturquoise: \"#AFEEEE\",\n  lightsteelblue: \"#B0C4DE\",\n  powderblue: \"#B0E0E6\",\n  firebrick: \"#B22222\",\n  darkgoldenrod: \"#B8860B\",\n  mediumorchid: \"#BA55D3\",\n  rosybrown: \"#BC8F8F\",\n  darkkhaki: \"#BDB76B\",\n  mediumvioletred: \"#C71585\",\n  indianred: \"#CD5C5C\",\n  peru: \"#CD853F\",\n  chocolate: \"#D2691E\",\n  tan: \"#D2B48C\",\n  lightgray: \"#D3D3D3\",\n  lightgrey: \"#D3D3D3\",\n  thistle: \"#D8BFD8\",\n  orchid: \"#DA70D6\",\n  goldenrod: \"#DAA520\",\n  palevioletred: \"#DB7093\",\n  crimson: \"#DC143C\",\n  gainsboro: \"#DCDCDC\",\n  plum: \"#DDA0DD\",\n  burlywood: \"#DEB887\",\n  lightcyan: \"#E0FFFF\",\n  lavender: \"#E6E6FA\",\n  darksalmon: \"#E9967A\",\n  violet: \"#EE82EE\",\n  palegoldenrod: \"#EEE8AA\",\n  lightcoral: \"#F08080\",\n  khaki: \"#F0E68C\",\n  aliceblue: \"#F0F8FF\",\n  honeydew: \"#F0FFF0\",\n  azure: \"#F0FFFF\",\n  sandybrown: \"#F4A460\",\n  wheat: \"#F5DEB3\",\n  beige: \"#F5F5DC\",\n  whitesmoke: \"#F5F5F5\",\n  mintcream: \"#F5FFFA\",\n  ghostwhite: \"#F8F8FF\",\n  salmon: \"#FA8072\",\n  antiquewhite: \"#FAEBD7\",\n  linen: \"#FAF0E6\",\n  lightgoldenrodyellow: \"#FAFAD2\",\n  oldlace: \"#FDF5E6\",\n  magenta: \"#FF00FF\",\n  deeppink: \"#FF1493\",\n  orangered: \"#FF4500\",\n  tomato: \"#FF6347\",\n  hotpink: \"#FF69B4\",\n  coral: \"#FF7F50\",\n  darkorange: \"#FF8C00\",\n  lightsalmon: \"#FFA07A\",\n  orange: \"#FFA500\",\n  lightpink: \"#FFB6C1\",\n  pink: \"#FFC0CB\",\n  gold: \"#FFD700\",\n  peachpuff: \"#FFDAB9\",\n  navajowhite: \"#FFDEAD\",\n  moccasin: \"#FFE4B5\",\n  bisque: \"#FFE4C4\",\n  mistyrose: \"#FFE4E1\",\n  blanchedalmond: \"#FFEBCD\",\n  papayawhip: \"#FFEFD5\",\n  lavenderblush: \"#FFF0F5\",\n  seashell: \"#FFF5EE\",\n  cornsilk: \"#FFF8DC\",\n  lemonchiffon: \"#FFFACD\",\n  floralwhite: \"#FFFAF0\",\n  snow: \"#FFFAFA\",\n  lightyellow: \"#FFFFE0\",\n  ivory: \"#FFFFF0\"\n};\n\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n  var data = array || new Uint8Array(4);\n  gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  return data;\n}\n\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n  var r = 0; // byte\n  var g = 0; // byte\n  var b = 0; // byte\n  var a = 1; // float\n\n  // Handling hexadecimal notation\n  if (val[0] === \"#\") {\n    if (val.length === 4) {\n      r = parseInt(val.charAt(1) + val.charAt(1), 16);\n      g = parseInt(val.charAt(2) + val.charAt(2), 16);\n      b = parseInt(val.charAt(3) + val.charAt(3), 16);\n    } else {\n      r = parseInt(val.charAt(1) + val.charAt(2), 16);\n      g = parseInt(val.charAt(3) + val.charAt(4), 16);\n      b = parseInt(val.charAt(5) + val.charAt(6), 16);\n    }\n    if (val.length === 9) {\n      a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n    }\n  }\n\n  // Handling rgb notation\n  else if (RGBA_TEST_REGEX.test(val)) {\n    var match = val.match(RGBA_EXTRACT_REGEX);\n    if (match) {\n      r = +match[1];\n      g = +match[2];\n      b = +match[3];\n      if (match[4]) a = +match[4];\n    }\n  }\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in HTML_COLORS) {\n  FLOAT_COLOR_CACHE[htmlColor] = floatColor(HTML_COLORS[htmlColor]);\n  // Replicating cache for hex values for free\n  FLOAT_COLOR_CACHE[HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction rgbaToFloat(r, g, b, a, masking) {\n  INT32[0] = a << 24 | b << 16 | g << 8 | r;\n  if (masking) INT32[0] = INT32[0] & 0xfeffffff;\n  return FLOAT32[0];\n}\nfunction floatColor(val) {\n  // The html color names are case-insensitive\n  val = val.toLowerCase();\n\n  // If the color is already computed, we yield it\n  if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\") return FLOAT_COLOR_CACHE[val];\n  var parsed = parseColor(val);\n  var r = parsed.r,\n    g = parsed.g,\n    b = parsed.b;\n  var a = parsed.a;\n  a = a * 255 | 0;\n  var color = rgbaToFloat(r, g, b, a, true);\n  FLOAT_COLOR_CACHE[val] = color;\n  return color;\n}\nfunction colorToArray(val, masking) {\n  FLOAT32[0] = floatColor(val);\n  var intValue = INT32[0];\n  if (masking) {\n    intValue = intValue | 0x01000000;\n  }\n  var r = intValue & 0xff;\n  var g = intValue >> 8 & 0xff;\n  var b = intValue >> 16 & 0xff;\n  var a = intValue >> 24 & 0xff;\n  return [r, g, b, a];\n}\nvar FLOAT_INDEX_CACHE = {};\nfunction indexToColor(index) {\n  // If the index is already computed, we yield it\n  if (typeof FLOAT_INDEX_CACHE[index] !== \"undefined\") return FLOAT_INDEX_CACHE[index];\n\n  // To address issue #1397, one strategy is to keep encoding 4 bytes colors,\n  // but with alpha hard-set to 1.0 (or 255):\n  var r = (index & 0x00ff0000) >>> 16;\n  var g = (index & 0x0000ff00) >>> 8;\n  var b = index & 0x000000ff;\n  var a = 0x000000ff;\n\n  // The original 4 bytes color encoding was the following:\n  // const r = (index & 0xff000000) >>> 24;\n  // const g = (index & 0x00ff0000) >>> 16;\n  // const b = (index & 0x0000ff00) >>> 8;\n  // const a = index & 0x000000ff;\n\n  var color = rgbaToFloat(r, g, b, a, true);\n  FLOAT_INDEX_CACHE[index] = color;\n  return color;\n}\nfunction colorToIndex(r, g, b, _a) {\n  // As for the function indexToColor, because of #1397 and the \"alpha is always\n  // 1.0\" strategy, we need to fix this function as well:\n  return b + (g << 8) + (r << 16);\n\n  // The original 4 bytes color decoding is the following:\n  // return a + (b << 8) + (g << 16) + (r << 24);\n}\nfunction getPixelColor(gl, frameBuffer, x, y, pixelRatio, downSizingRatio) {\n  var bufferX = Math.floor(x / downSizingRatio * pixelRatio);\n  var bufferY = Math.floor(gl.drawingBufferHeight / downSizingRatio - y / downSizingRatio * pixelRatio);\n  var pixel = new Uint8Array(4);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.readPixels(bufferX, bufferY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n  var _pixel = _slicedToArray(pixel, 4),\n    r = _pixel[0],\n    g = _pixel[1],\n    b = _pixel[2],\n    a = _pixel[3];\n  return [r, g, b, a];\n}\n\nexport { HTML_COLORS as H, _slicedToArray as _, _arrayLikeToArray as a, _unsupportedIterableToArray as b, colorToIndex as c, colorToArray as d, extractPixel as e, floatColor as f, getPixelColor as g, indexToColor as i, parseColor as p, rgbaToFloat as r };\n", "import { d as _toPropertyKey, e as _getPrototypeOf, a as _createClass, b as _classCallCheck, _ as _inherits, c as _callSuper } from './inherits-d1a1e29b.esm.js';\nimport { i as indexToColor, f as floatColor } from './colors-beb06eb2.esm.js';\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nfunction _superPropBase(t, o) {\n  for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf(t)););\n  return t;\n}\n\nfunction _get() {\n  return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) {\n    var p = _superPropBase(e, t);\n    if (p) {\n      var n = Object.getOwnPropertyDescriptor(p, t);\n      return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value;\n    }\n  }, _get.apply(null, arguments);\n}\n\nfunction _superPropGet(t, o, e, r) {\n  var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e);\n  return 2 & r && \"function\" == typeof p ? function (t) {\n    return p.apply(e, t);\n  } : p;\n}\n\nfunction getAttributeItemsCount(attr) {\n  return attr.normalized ? 1 : attr.size;\n}\nfunction getAttributesItemsCount(attrs) {\n  var res = 0;\n  attrs.forEach(function (attr) {\n    return res += getAttributeItemsCount(attr);\n  });\n  return res;\n}\nfunction loadShader(type, gl, source) {\n  var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n\n  // Creating the shader\n  var shader = gl.createShader(glType);\n  if (shader === null) {\n    throw new Error(\"loadShader: error while creating the shader\");\n  }\n\n  // Loading source\n  gl.shaderSource(shader, source);\n\n  // Compiling the shader\n  gl.compileShader(shader);\n\n  // Retrieving compilation status\n  var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  // Throwing if something went awry\n  if (!successfullyCompiled) {\n    var infoLog = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n  }\n  return shader;\n}\nfunction loadVertexShader(gl, source) {\n  return loadShader(\"VERTEX\", gl, source);\n}\nfunction loadFragmentShader(gl, source) {\n  return loadShader(\"FRAGMENT\", gl, source);\n}\n\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n  var program = gl.createProgram();\n  if (program === null) {\n    throw new Error(\"loadProgram: error while creating the program.\");\n  }\n  var i, l;\n\n  // Attaching the shaders\n  for (i = 0, l = shaders.length; i < l; i++) gl.attachShader(program, shaders[i]);\n  gl.linkProgram(program);\n\n  // Checking status\n  var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!successfullyLinked) {\n    gl.deleteProgram(program);\n    throw new Error(\"loadProgram: error while linking the program.\");\n  }\n  return program;\n}\nfunction killProgram(_ref) {\n  var gl = _ref.gl,\n    buffer = _ref.buffer,\n    program = _ref.program,\n    vertexShader = _ref.vertexShader,\n    fragmentShader = _ref.fragmentShader;\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n  gl.deleteProgram(program);\n  gl.deleteBuffer(buffer);\n}\n\n/**\n * Function use to print a float for inserting in a GLSL program.\n */\nfunction numberToGLSLFloat(n) {\n  return n % 1 === 0 ? n.toFixed(1) : n.toString();\n}\n\nvar PICKING_PREFIX = \"#define PICKING_MODE\\n\";\nvar SIZE_FACTOR_PER_ATTRIBUTE_TYPE = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, WebGL2RenderingContext.BOOL, 1), WebGL2RenderingContext.BYTE, 1), WebGL2RenderingContext.UNSIGNED_BYTE, 1), WebGL2RenderingContext.SHORT, 2), WebGL2RenderingContext.UNSIGNED_SHORT, 2), WebGL2RenderingContext.INT, 4), WebGL2RenderingContext.UNSIGNED_INT, 4), WebGL2RenderingContext.FLOAT, 4);\nvar AbstractProgram = /*#__PURE__*/_createClass(function AbstractProgram(_gl, _pickGl, _renderer) {\n  _classCallCheck(this, AbstractProgram);\n});\nvar Program = /*#__PURE__*/function () {\n  function Program(gl, pickingBuffer, renderer) {\n    _classCallCheck(this, Program);\n    // GLenum\n    _defineProperty(this, \"array\", new Float32Array());\n    _defineProperty(this, \"constantArray\", new Float32Array());\n    _defineProperty(this, \"capacity\", 0);\n    _defineProperty(this, \"verticesCount\", 0);\n    // Reading and caching program definition\n    var def = this.getDefinition();\n    this.VERTICES = def.VERTICES;\n    this.VERTEX_SHADER_SOURCE = def.VERTEX_SHADER_SOURCE;\n    this.FRAGMENT_SHADER_SOURCE = def.FRAGMENT_SHADER_SOURCE;\n    this.UNIFORMS = def.UNIFORMS;\n    this.ATTRIBUTES = def.ATTRIBUTES;\n    this.METHOD = def.METHOD;\n    this.CONSTANT_ATTRIBUTES = \"CONSTANT_ATTRIBUTES\" in def ? def.CONSTANT_ATTRIBUTES : [];\n    this.CONSTANT_DATA = \"CONSTANT_DATA\" in def ? def.CONSTANT_DATA : [];\n    this.isInstanced = \"CONSTANT_ATTRIBUTES\" in def;\n\n    // Computing stride\n    this.ATTRIBUTES_ITEMS_COUNT = getAttributesItemsCount(this.ATTRIBUTES);\n    this.STRIDE = this.VERTICES * this.ATTRIBUTES_ITEMS_COUNT;\n\n    // Members\n    this.renderer = renderer;\n    this.normalProgram = this.getProgramInfo(\"normal\", gl, def.VERTEX_SHADER_SOURCE, def.FRAGMENT_SHADER_SOURCE, null);\n    this.pickProgram = pickingBuffer ? this.getProgramInfo(\"pick\", gl, PICKING_PREFIX + def.VERTEX_SHADER_SOURCE, PICKING_PREFIX + def.FRAGMENT_SHADER_SOURCE, pickingBuffer) : null;\n\n    // For instanced programs:\n    if (this.isInstanced) {\n      var constantAttributesItemsCount = getAttributesItemsCount(this.CONSTANT_ATTRIBUTES);\n      if (this.CONSTANT_DATA.length !== this.VERTICES) throw new Error(\"Program: error while getting constant data (expected \".concat(this.VERTICES, \" items, received \").concat(this.CONSTANT_DATA.length, \" instead)\"));\n      this.constantArray = new Float32Array(this.CONSTANT_DATA.length * constantAttributesItemsCount);\n      for (var i = 0; i < this.CONSTANT_DATA.length; i++) {\n        var vector = this.CONSTANT_DATA[i];\n        if (vector.length !== constantAttributesItemsCount) throw new Error(\"Program: error while getting constant data (one vector has \".concat(vector.length, \" items instead of \").concat(constantAttributesItemsCount, \")\"));\n        for (var j = 0; j < vector.length; j++) this.constantArray[i * constantAttributesItemsCount + j] = vector[j];\n      }\n      this.STRIDE = this.ATTRIBUTES_ITEMS_COUNT;\n    }\n  }\n  return _createClass(Program, [{\n    key: \"kill\",\n    value: function kill() {\n      killProgram(this.normalProgram);\n      if (this.pickProgram) {\n        killProgram(this.pickProgram);\n        this.pickProgram = null;\n      }\n    }\n  }, {\n    key: \"getProgramInfo\",\n    value: function getProgramInfo(name, gl, vertexShaderSource, fragmentShaderSource, frameBuffer) {\n      var def = this.getDefinition();\n\n      // WebGL buffers\n      var buffer = gl.createBuffer();\n      if (buffer === null) throw new Error(\"Program: error while creating the WebGL buffer.\");\n\n      // Shaders and program\n      var vertexShader = loadVertexShader(gl, vertexShaderSource);\n      var fragmentShader = loadFragmentShader(gl, fragmentShaderSource);\n      var program = loadProgram(gl, [vertexShader, fragmentShader]);\n\n      // Initializing locations\n      var uniformLocations = {};\n      def.UNIFORMS.forEach(function (uniformName) {\n        var location = gl.getUniformLocation(program, uniformName);\n        if (location) uniformLocations[uniformName] = location;\n      });\n      var attributeLocations = {};\n      def.ATTRIBUTES.forEach(function (attr) {\n        attributeLocations[attr.name] = gl.getAttribLocation(program, attr.name);\n      });\n\n      // For instanced programs:\n      var constantBuffer;\n      if (\"CONSTANT_ATTRIBUTES\" in def) {\n        def.CONSTANT_ATTRIBUTES.forEach(function (attr) {\n          attributeLocations[attr.name] = gl.getAttribLocation(program, attr.name);\n        });\n        constantBuffer = gl.createBuffer();\n        if (constantBuffer === null) throw new Error(\"Program: error while creating the WebGL constant buffer.\");\n      }\n      return {\n        name: name,\n        program: program,\n        gl: gl,\n        frameBuffer: frameBuffer,\n        buffer: buffer,\n        constantBuffer: constantBuffer || {},\n        uniformLocations: uniformLocations,\n        attributeLocations: attributeLocations,\n        isPicking: name === \"pick\",\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n      };\n    }\n  }, {\n    key: \"bindProgram\",\n    value: function bindProgram(program) {\n      var _this = this;\n      var offset = 0;\n      var gl = program.gl,\n        buffer = program.buffer;\n      if (!this.isInstanced) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        offset = 0;\n        this.ATTRIBUTES.forEach(function (attr) {\n          return offset += _this.bindAttribute(attr, program, offset);\n        });\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n      } else {\n        // Handle constant data (things that remain unchanged for all items):\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.constantBuffer);\n        offset = 0;\n        this.CONSTANT_ATTRIBUTES.forEach(function (attr) {\n          return offset += _this.bindAttribute(attr, program, offset, false);\n        });\n        gl.bufferData(gl.ARRAY_BUFFER, this.constantArray, gl.STATIC_DRAW);\n\n        // Handle \"instance specific\" data (things that vary for each item):\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.buffer);\n        offset = 0;\n        this.ATTRIBUTES.forEach(function (attr) {\n          return offset += _this.bindAttribute(attr, program, offset, true);\n        });\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n      }\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n  }, {\n    key: \"unbindProgram\",\n    value: function unbindProgram(program) {\n      var _this2 = this;\n      if (!this.isInstanced) {\n        this.ATTRIBUTES.forEach(function (attr) {\n          return _this2.unbindAttribute(attr, program);\n        });\n      } else {\n        this.CONSTANT_ATTRIBUTES.forEach(function (attr) {\n          return _this2.unbindAttribute(attr, program, false);\n        });\n        this.ATTRIBUTES.forEach(function (attr) {\n          return _this2.unbindAttribute(attr, program, true);\n        });\n      }\n    }\n  }, {\n    key: \"bindAttribute\",\n    value: function bindAttribute(attr, program, offset, setDivisor) {\n      var sizeFactor = SIZE_FACTOR_PER_ATTRIBUTE_TYPE[attr.type];\n      if (typeof sizeFactor !== \"number\") throw new Error(\"Program.bind: yet unsupported attribute type \\\"\".concat(attr.type, \"\\\"\"));\n      var location = program.attributeLocations[attr.name];\n      var gl = program.gl;\n      if (location !== -1) {\n        gl.enableVertexAttribArray(location);\n        var stride = !this.isInstanced ? this.ATTRIBUTES_ITEMS_COUNT * Float32Array.BYTES_PER_ELEMENT : (setDivisor ? this.ATTRIBUTES_ITEMS_COUNT : getAttributesItemsCount(this.CONSTANT_ATTRIBUTES)) * Float32Array.BYTES_PER_ELEMENT;\n        gl.vertexAttribPointer(location, attr.size, attr.type, attr.normalized || false, stride, offset);\n        if (this.isInstanced && setDivisor) {\n          if (gl instanceof WebGL2RenderingContext) {\n            gl.vertexAttribDivisor(location, 1);\n          } else {\n            var ext = gl.getExtension(\"ANGLE_instanced_arrays\");\n            if (ext) ext.vertexAttribDivisorANGLE(location, 1);\n          }\n        }\n      }\n      return attr.size * sizeFactor;\n    }\n  }, {\n    key: \"unbindAttribute\",\n    value: function unbindAttribute(attr, program, unsetDivisor) {\n      var location = program.attributeLocations[attr.name];\n      var gl = program.gl;\n      if (location !== -1) {\n        gl.disableVertexAttribArray(location);\n        if (this.isInstanced && unsetDivisor) {\n          if (gl instanceof WebGL2RenderingContext) {\n            gl.vertexAttribDivisor(location, 0);\n          } else {\n            var ext = gl.getExtension(\"ANGLE_instanced_arrays\");\n            if (ext) ext.vertexAttribDivisorANGLE(location, 0);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"reallocate\",\n    value: function reallocate(capacity) {\n      // If desired capacity has not changed we do nothing\n      // NOTE: it's possible here to implement more subtle reallocation schemes\n      // when the number of rendered items increase or decrease\n      if (capacity === this.capacity) return;\n      this.capacity = capacity;\n      this.verticesCount = this.VERTICES * capacity;\n      this.array = new Float32Array(!this.isInstanced ? this.verticesCount * this.ATTRIBUTES_ITEMS_COUNT : this.capacity * this.ATTRIBUTES_ITEMS_COUNT);\n    }\n  }, {\n    key: \"hasNothingToRender\",\n    value: function hasNothingToRender() {\n      return this.verticesCount === 0;\n    }\n  }, {\n    key: \"renderProgram\",\n    value: function renderProgram(params, programInfo) {\n      var gl = programInfo.gl,\n        program = programInfo.program;\n\n      // With the current fix for #1397, the alpha blending is enabled for the\n      // picking layer:\n      gl.enable(gl.BLEND);\n\n      // Original code:\n      // if (!isPicking) gl.enable(gl.BLEND);\n      // else gl.disable(gl.BLEND);\n\n      gl.useProgram(program);\n      this.setUniforms(params, programInfo);\n      this.drawWebGL(this.METHOD, programInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render(params) {\n      if (this.hasNothingToRender()) return;\n      if (this.pickProgram) {\n        this.pickProgram.gl.viewport(0, 0, params.width * params.pixelRatio / params.downSizingRatio, params.height * params.pixelRatio / params.downSizingRatio);\n        this.bindProgram(this.pickProgram);\n        this.renderProgram(_objectSpread2(_objectSpread2({}, params), {}, {\n          pixelRatio: params.pixelRatio / params.downSizingRatio\n        }), this.pickProgram);\n        this.unbindProgram(this.pickProgram);\n      }\n      this.normalProgram.gl.viewport(0, 0, params.width * params.pixelRatio, params.height * params.pixelRatio);\n      this.bindProgram(this.normalProgram);\n      this.renderProgram(params, this.normalProgram);\n      this.unbindProgram(this.normalProgram);\n    }\n  }, {\n    key: \"drawWebGL\",\n    value: function drawWebGL(method, _ref) {\n      var gl = _ref.gl,\n        frameBuffer = _ref.frameBuffer;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      if (!this.isInstanced) {\n        gl.drawArrays(method, 0, this.verticesCount);\n      } else {\n        if (gl instanceof WebGL2RenderingContext) {\n          gl.drawArraysInstanced(method, 0, this.VERTICES, this.capacity);\n        } else {\n          var ext = gl.getExtension(\"ANGLE_instanced_arrays\");\n          if (ext) ext.drawArraysInstancedANGLE(method, 0, this.VERTICES, this.capacity);\n        }\n      }\n    }\n  }]);\n}();\n\nvar AbstractNodeProgram = /*#__PURE__*/function (_AbstractProgram) {\n  function AbstractNodeProgram() {\n    _classCallCheck(this, AbstractNodeProgram);\n    return _callSuper(this, AbstractNodeProgram, arguments);\n  }\n  _inherits(AbstractNodeProgram, _AbstractProgram);\n  return _createClass(AbstractNodeProgram);\n}(AbstractProgram);\nvar NodeProgram = /*#__PURE__*/function (_ref) {\n  function NodeProgram() {\n    _classCallCheck(this, NodeProgram);\n    return _callSuper(this, NodeProgram, arguments);\n  }\n  _inherits(NodeProgram, _ref);\n  return _createClass(NodeProgram, [{\n    key: \"kill\",\n    value: function kill() {\n      _superPropGet(NodeProgram, \"kill\", this, 3)([]);\n    }\n  }, {\n    key: \"process\",\n    value: function process(nodeIndex, offset, data) {\n      var i = offset * this.STRIDE;\n      // NOTE: dealing with hidden items automatically\n      if (data.hidden) {\n        for (var l = i + this.STRIDE; i < l; i++) {\n          this.array[i] = 0;\n        }\n        return;\n      }\n      return this.processVisibleItem(indexToColor(nodeIndex), i, data);\n    }\n  }]);\n}(Program);\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @param  {function} drawLabel - An optional node \"draw label\" function.\n * @param  {function} drawHover - An optional node \"draw hover\" function.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses, drawLabel, drawHover) {\n  return /*#__PURE__*/function () {\n    function NodeCompoundProgram(gl, pickingBuffer, renderer) {\n      _classCallCheck(this, NodeCompoundProgram);\n      _defineProperty(this, \"drawLabel\", drawLabel);\n      _defineProperty(this, \"drawHover\", drawHover);\n      this.programs = programClasses.map(function (Program) {\n        return new Program(gl, pickingBuffer, renderer);\n      });\n    }\n    return _createClass(NodeCompoundProgram, [{\n      key: \"reallocate\",\n      value: function reallocate(capacity) {\n        this.programs.forEach(function (program) {\n          return program.reallocate(capacity);\n        });\n      }\n    }, {\n      key: \"process\",\n      value: function process(nodeIndex, offset, data) {\n        this.programs.forEach(function (program) {\n          return program.process(nodeIndex, offset, data);\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render(params) {\n        this.programs.forEach(function (program) {\n          return program.render(params);\n        });\n      }\n    }, {\n      key: \"kill\",\n      value: function kill() {\n        this.programs.forEach(function (program) {\n          return program.kill();\n        });\n      }\n    }]);\n  }();\n}\n\nvar AbstractEdgeProgram = /*#__PURE__*/function (_AbstractProgram) {\n  function AbstractEdgeProgram() {\n    _classCallCheck(this, AbstractEdgeProgram);\n    return _callSuper(this, AbstractEdgeProgram, arguments);\n  }\n  _inherits(AbstractEdgeProgram, _AbstractProgram);\n  return _createClass(AbstractEdgeProgram);\n}(AbstractProgram);\nvar EdgeProgram = /*#__PURE__*/function (_ref) {\n  function EdgeProgram() {\n    var _this;\n    _classCallCheck(this, EdgeProgram);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, EdgeProgram, [].concat(args));\n    _defineProperty(_this, \"drawLabel\", undefined);\n    return _this;\n  }\n  _inherits(EdgeProgram, _ref);\n  return _createClass(EdgeProgram, [{\n    key: \"kill\",\n    value: function kill() {\n      _superPropGet(EdgeProgram, \"kill\", this, 3)([]);\n    }\n  }, {\n    key: \"process\",\n    value: function process(edgeIndex, offset, sourceData, targetData, data) {\n      var i = offset * this.STRIDE;\n      // NOTE: dealing with hidden items automatically\n      if (data.hidden || sourceData.hidden || targetData.hidden) {\n        for (var l = i + this.STRIDE; i < l; i++) {\n          this.array[i] = 0;\n        }\n        return;\n      }\n      return this.processVisibleItem(indexToColor(edgeIndex), i, sourceData, targetData, data);\n    }\n  }]);\n}(Program);\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @param  {function} drawLabel - An optional edge \"draw label\" function.\n * @return {function}\n */\nfunction createEdgeCompoundProgram(programClasses, drawLabel) {\n  return /*#__PURE__*/function () {\n    function EdgeCompoundProgram(gl, pickingBuffer, renderer) {\n      _classCallCheck(this, EdgeCompoundProgram);\n      _defineProperty(this, \"drawLabel\", drawLabel);\n      this.programs = programClasses.map(function (Program) {\n        return new Program(gl, pickingBuffer, renderer);\n      });\n    }\n    return _createClass(EdgeCompoundProgram, [{\n      key: \"reallocate\",\n      value: function reallocate(capacity) {\n        this.programs.forEach(function (program) {\n          return program.reallocate(capacity);\n        });\n      }\n    }, {\n      key: \"process\",\n      value: function process(edgeIndex, offset, sourceData, targetData, data) {\n        this.programs.forEach(function (program) {\n          return program.process(edgeIndex, offset, sourceData, targetData, data);\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render(params) {\n        this.programs.forEach(function (program) {\n          return program.render(params);\n        });\n      }\n    }, {\n      key: \"kill\",\n      value: function kill() {\n        this.programs.forEach(function (program) {\n          return program.kill();\n        });\n      }\n    }]);\n  }();\n}\n\nfunction drawStraightEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n  var size = settings.edgeLabelSize,\n    font = settings.edgeLabelFont,\n    weight = settings.edgeLabelWeight,\n    color = settings.edgeLabelColor.attribute ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\" : settings.edgeLabelColor.color;\n  var label = edgeData.label;\n  if (!label) return;\n  context.fillStyle = color;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n\n  // Computing positions without considering nodes sizes:\n  var sSize = sourceData.size;\n  var tSize = targetData.size;\n  var sx = sourceData.x;\n  var sy = sourceData.y;\n  var tx = targetData.x;\n  var ty = targetData.y;\n  var cx = (sx + tx) / 2;\n  var cy = (sy + ty) / 2;\n  var dx = tx - sx;\n  var dy = ty - sy;\n  var d = Math.sqrt(dx * dx + dy * dy);\n  if (d < sSize + tSize) return;\n\n  // Adding nodes sizes:\n  sx += dx * sSize / d;\n  sy += dy * sSize / d;\n  tx -= dx * tSize / d;\n  ty -= dy * tSize / d;\n  cx = (sx + tx) / 2;\n  cy = (sy + ty) / 2;\n  dx = tx - sx;\n  dy = ty - sy;\n  d = Math.sqrt(dx * dx + dy * dy);\n\n  // Handling ellipsis\n  var textLength = context.measureText(label).width;\n  if (textLength > d) {\n    var ellipsis = \"\u2026\";\n    label = label + ellipsis;\n    textLength = context.measureText(label).width;\n    while (textLength > d && label.length > 1) {\n      label = label.slice(0, -2) + ellipsis;\n      textLength = context.measureText(label).width;\n    }\n    if (label.length < 4) return;\n  }\n  var angle;\n  if (dx > 0) {\n    if (dy > 0) angle = Math.acos(dx / d);else angle = Math.asin(dy / d);\n  } else {\n    if (dy > 0) angle = Math.acos(dx / d) + Math.PI;else angle = Math.asin(dx / d) + Math.PI / 2;\n  }\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n  context.restore();\n}\n\nfunction drawDiscNodeLabel(context, data, settings) {\n  if (!data.label) return;\n  var size = settings.labelSize,\n    font = settings.labelFont,\n    weight = settings.labelWeight,\n    color = settings.labelColor.attribute ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\" : settings.labelColor.color;\n  context.fillStyle = color;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n  context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\n\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawDiscNodeHover(context, data, settings) {\n  var size = settings.labelSize,\n    font = settings.labelFont,\n    weight = settings.labelWeight;\n  context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n\n  // Then we draw the label background\n  context.fillStyle = \"#FFF\";\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 8;\n  context.shadowColor = \"#000\";\n  var PADDING = 2;\n  if (typeof data.label === \"string\") {\n    var textWidth = context.measureText(data.label).width,\n      boxWidth = Math.round(textWidth + 5),\n      boxHeight = Math.round(size + 2 * PADDING),\n      radius = Math.max(data.size, size / 2) + PADDING;\n    var angleRadian = Math.asin(boxHeight / 2 / radius);\n    var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n    context.beginPath();\n    context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n    context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n    context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n    context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n    context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n    context.closePath();\n    context.fill();\n  } else {\n    context.beginPath();\n    context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n    context.closePath();\n    context.fill();\n  }\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 0;\n\n  // And finally we draw the label\n  drawDiscNodeLabel(context, data, settings);\n}\n\n// language=GLSL\nvar SHADER_SOURCE$6 = /*glsl*/\"\\nprecision highp float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_diffVector;\\nvarying float v_radius;\\n\\nuniform float u_correctionRatio;\\n\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float border = u_correctionRatio * 2.0;\\n  float dist = length(v_diffVector) - v_radius + border;\\n\\n  // No antialiasing for picking mode:\\n  #ifdef PICKING_MODE\\n  if (dist > border)\\n    gl_FragColor = transparent;\\n  else\\n    gl_FragColor = v_color;\\n\\n  #else\\n  float t = 0.0;\\n  if (dist > border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / border;\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n  #endif\\n}\\n\";\nvar FRAGMENT_SHADER_SOURCE$2 = SHADER_SOURCE$6;\n\n// language=GLSL\nvar SHADER_SOURCE$5 = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_position;\\nattribute float a_size;\\nattribute float a_angle;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_diffVector;\\nvarying float v_radius;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float size = a_size * u_correctionRatio / u_sizeRatio * 4.0;\\n  vec2 diffVector = size * vec2(cos(a_angle), sin(a_angle));\\n  vec2 position = a_position + diffVector;\\n  gl_Position = vec4(\\n    (u_matrix * vec3(position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  v_diffVector = diffVector;\\n  v_radius = size / 2.0;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE$3 = SHADER_SOURCE$5;\n\nvar _WebGLRenderingContex$3 = WebGLRenderingContext,\n  UNSIGNED_BYTE$3 = _WebGLRenderingContex$3.UNSIGNED_BYTE,\n  FLOAT$3 = _WebGLRenderingContex$3.FLOAT;\nvar UNIFORMS$3 = [\"u_sizeRatio\", \"u_correctionRatio\", \"u_matrix\"];\nvar NodeCircleProgram = /*#__PURE__*/function (_NodeProgram) {\n  function NodeCircleProgram() {\n    _classCallCheck(this, NodeCircleProgram);\n    return _callSuper(this, NodeCircleProgram, arguments);\n  }\n  _inherits(NodeCircleProgram, _NodeProgram);\n  return _createClass(NodeCircleProgram, [{\n    key: \"getDefinition\",\n    value: function getDefinition() {\n      return {\n        VERTICES: 3,\n        VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE$3,\n        FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE$2,\n        METHOD: WebGLRenderingContext.TRIANGLES,\n        UNIFORMS: UNIFORMS$3,\n        ATTRIBUTES: [{\n          name: \"a_position\",\n          size: 2,\n          type: FLOAT$3\n        }, {\n          name: \"a_size\",\n          size: 1,\n          type: FLOAT$3\n        }, {\n          name: \"a_color\",\n          size: 4,\n          type: UNSIGNED_BYTE$3,\n          normalized: true\n        }, {\n          name: \"a_id\",\n          size: 4,\n          type: UNSIGNED_BYTE$3,\n          normalized: true\n        }],\n        CONSTANT_ATTRIBUTES: [{\n          name: \"a_angle\",\n          size: 1,\n          type: FLOAT$3\n        }],\n        CONSTANT_DATA: [[NodeCircleProgram.ANGLE_1], [NodeCircleProgram.ANGLE_2], [NodeCircleProgram.ANGLE_3]]\n      };\n    }\n  }, {\n    key: \"processVisibleItem\",\n    value: function processVisibleItem(nodeIndex, startIndex, data) {\n      var array = this.array;\n      var color = floatColor(data.color);\n      array[startIndex++] = data.x;\n      array[startIndex++] = data.y;\n      array[startIndex++] = data.size;\n      array[startIndex++] = color;\n      array[startIndex++] = nodeIndex;\n    }\n  }, {\n    key: \"setUniforms\",\n    value: function setUniforms(params, _ref) {\n      var gl = _ref.gl,\n        uniformLocations = _ref.uniformLocations;\n      var u_sizeRatio = uniformLocations.u_sizeRatio,\n        u_correctionRatio = uniformLocations.u_correctionRatio,\n        u_matrix = uniformLocations.u_matrix;\n      gl.uniform1f(u_correctionRatio, params.correctionRatio);\n      gl.uniform1f(u_sizeRatio, params.sizeRatio);\n      gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n    }\n  }]);\n}(NodeProgram);\n_defineProperty(NodeCircleProgram, \"ANGLE_1\", 0);\n_defineProperty(NodeCircleProgram, \"ANGLE_2\", 2 * Math.PI / 3);\n_defineProperty(NodeCircleProgram, \"ANGLE_3\", 4 * Math.PI / 3);\n\n// language=GLSL\nvar SHADER_SOURCE$4 = /*glsl*/\"\\nprecision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";\nvar FRAGMENT_SHADER_SOURCE$1 = SHADER_SOURCE$4;\n\n// language=GLSL\nvar SHADER_SOURCE$3 = /*glsl*/\"\\nattribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec3 a_barycentric;\\n\\n#ifdef PICKING_MODE\\nattribute vec4 a_id;\\n#else\\nattribute vec4 a_color;\\n#endif\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_correctionRatio;\\nuniform float u_minEdgeThickness;\\nuniform float u_lengthToThicknessRatio;\\nuniform float u_widenessToThicknessRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float minThickness = u_minEdgeThickness;\\n\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength / u_sizeRatio, minThickness);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float webGLNodeRadius = a_radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * u_lengthToThicknessRatio * 2.0;\\n  float webGLArrowHeadThickness = webGLThickness * u_widenessToThicknessRatio;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (webGLNodeRadius * unitNormal.y)\\n    + db * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y + webGLArrowHeadThickness * unitNormal.x)\\n    + dc * ((webGLNodeRadius + webGLArrowHeadLength) * unitNormal.y - webGLArrowHeadThickness * unitNormal.x),\\n\\n      da * (-webGLNodeRadius * unitNormal.x)\\n    + db * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x + webGLArrowHeadThickness * unitNormal.y)\\n    + dc * (-(webGLNodeRadius + webGLArrowHeadLength) * unitNormal.x - webGLArrowHeadThickness * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE$2 = SHADER_SOURCE$3;\n\nvar _WebGLRenderingContex$2 = WebGLRenderingContext,\n  UNSIGNED_BYTE$2 = _WebGLRenderingContex$2.UNSIGNED_BYTE,\n  FLOAT$2 = _WebGLRenderingContex$2.FLOAT;\nvar UNIFORMS$2 = [\"u_matrix\", \"u_sizeRatio\", \"u_correctionRatio\", \"u_minEdgeThickness\", \"u_lengthToThicknessRatio\", \"u_widenessToThicknessRatio\"];\nvar DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS = {\n  extremity: \"target\",\n  lengthToThicknessRatio: 2.5,\n  widenessToThicknessRatio: 2\n};\nfunction createEdgeArrowHeadProgram(inputOptions) {\n  var options = _objectSpread2(_objectSpread2({}, DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS), inputOptions || {});\n  return /*#__PURE__*/function (_EdgeProgram) {\n    function EdgeArrowHeadProgram() {\n      _classCallCheck(this, EdgeArrowHeadProgram);\n      return _callSuper(this, EdgeArrowHeadProgram, arguments);\n    }\n    _inherits(EdgeArrowHeadProgram, _EdgeProgram);\n    return _createClass(EdgeArrowHeadProgram, [{\n      key: \"getDefinition\",\n      value: function getDefinition() {\n        return {\n          VERTICES: 3,\n          VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE$2,\n          FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE$1,\n          METHOD: WebGLRenderingContext.TRIANGLES,\n          UNIFORMS: UNIFORMS$2,\n          ATTRIBUTES: [{\n            name: \"a_position\",\n            size: 2,\n            type: FLOAT$2\n          }, {\n            name: \"a_normal\",\n            size: 2,\n            type: FLOAT$2\n          }, {\n            name: \"a_radius\",\n            size: 1,\n            type: FLOAT$2\n          }, {\n            name: \"a_color\",\n            size: 4,\n            type: UNSIGNED_BYTE$2,\n            normalized: true\n          }, {\n            name: \"a_id\",\n            size: 4,\n            type: UNSIGNED_BYTE$2,\n            normalized: true\n          }],\n          CONSTANT_ATTRIBUTES: [{\n            name: \"a_barycentric\",\n            size: 3,\n            type: FLOAT$2\n          }],\n          CONSTANT_DATA: [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n        };\n      }\n    }, {\n      key: \"processVisibleItem\",\n      value: function processVisibleItem(edgeIndex, startIndex, sourceData, targetData, data) {\n        if (options.extremity === \"source\") {\n          var _ref = [targetData, sourceData];\n          sourceData = _ref[0];\n          targetData = _ref[1];\n        }\n        var thickness = data.size || 1;\n        var radius = targetData.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = floatColor(data.color);\n\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n          len = 1 / Math.sqrt(len);\n          n1 = -dy * len * thickness;\n          n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        array[startIndex++] = x2;\n        array[startIndex++] = y2;\n        array[startIndex++] = -n1;\n        array[startIndex++] = -n2;\n        array[startIndex++] = radius;\n        array[startIndex++] = color;\n        array[startIndex++] = edgeIndex;\n      }\n    }, {\n      key: \"setUniforms\",\n      value: function setUniforms(params, _ref2) {\n        var gl = _ref2.gl,\n          uniformLocations = _ref2.uniformLocations;\n        var u_matrix = uniformLocations.u_matrix,\n          u_sizeRatio = uniformLocations.u_sizeRatio,\n          u_correctionRatio = uniformLocations.u_correctionRatio,\n          u_minEdgeThickness = uniformLocations.u_minEdgeThickness,\n          u_lengthToThicknessRatio = uniformLocations.u_lengthToThicknessRatio,\n          u_widenessToThicknessRatio = uniformLocations.u_widenessToThicknessRatio;\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n        gl.uniform1f(u_minEdgeThickness, params.minEdgeThickness);\n        gl.uniform1f(u_lengthToThicknessRatio, options.lengthToThicknessRatio);\n        gl.uniform1f(u_widenessToThicknessRatio, options.widenessToThicknessRatio);\n      }\n    }]);\n  }(EdgeProgram);\n}\nvar EdgeArrowHeadProgram = createEdgeArrowHeadProgram();\nvar EdgeArrowHeadProgram$1 = EdgeArrowHeadProgram;\n\n// language=GLSL\nvar SHADER_SOURCE$2 = /*glsl*/\"\\nprecision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\nvarying float v_feather;\\n\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  // We only handle antialiasing for normal mode:\\n  #ifdef PICKING_MODE\\n  gl_FragColor = v_color;\\n  #else\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - v_feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n  #endif\\n}\\n\";\nvar FRAGMENT_SHADER_SOURCE = SHADER_SOURCE$2;\n\n// language=GLSL\nvar SHADER_SOURCE$1 = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute float a_normalCoef;\\nattribute vec2 a_positionStart;\\nattribute vec2 a_positionEnd;\\nattribute float a_positionCoef;\\nattribute float a_radius;\\nattribute float a_radiusCoef;\\n\\nuniform mat3 u_matrix;\\nuniform float u_zoomRatio;\\nuniform float u_sizeRatio;\\nuniform float u_pixelRatio;\\nuniform float u_correctionRatio;\\nuniform float u_minEdgeThickness;\\nuniform float u_lengthToThicknessRatio;\\nuniform float u_feather;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\nvarying float v_feather;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float minThickness = u_minEdgeThickness;\\n\\n  float radius = a_radius * a_radiusCoef;\\n  vec2 normal = a_normal * a_normalCoef;\\n  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;\\n\\n  float normalLength = length(normal);\\n  vec2 unitNormal = normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(radius);\\n  float webGLNodeRadius = direction * radius * 2.0 * u_correctionRatio / u_sizeRatio;\\n  float webGLArrowHeadLength = webGLThickness * u_lengthToThicknessRatio * 2.0;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (webGLNodeRadius + webGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n\\n  v_feather = u_feather * u_correctionRatio / u_zoomRatio / u_pixelRatio * 2.0;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE$1 = SHADER_SOURCE$1;\n\nvar _WebGLRenderingContex$1 = WebGLRenderingContext,\n  UNSIGNED_BYTE$1 = _WebGLRenderingContex$1.UNSIGNED_BYTE,\n  FLOAT$1 = _WebGLRenderingContex$1.FLOAT;\nvar UNIFORMS$1 = [\"u_matrix\", \"u_zoomRatio\", \"u_sizeRatio\", \"u_correctionRatio\", \"u_pixelRatio\", \"u_feather\", \"u_minEdgeThickness\", \"u_lengthToThicknessRatio\"];\nvar DEFAULT_EDGE_CLAMPED_PROGRAM_OPTIONS = {\n  lengthToThicknessRatio: DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS.lengthToThicknessRatio\n};\nfunction createEdgeClampedProgram(inputOptions) {\n  var options = _objectSpread2(_objectSpread2({}, DEFAULT_EDGE_CLAMPED_PROGRAM_OPTIONS), inputOptions || {});\n  return /*#__PURE__*/function (_EdgeProgram) {\n    function EdgeClampedProgram() {\n      _classCallCheck(this, EdgeClampedProgram);\n      return _callSuper(this, EdgeClampedProgram, arguments);\n    }\n    _inherits(EdgeClampedProgram, _EdgeProgram);\n    return _createClass(EdgeClampedProgram, [{\n      key: \"getDefinition\",\n      value: function getDefinition() {\n        return {\n          VERTICES: 6,\n          VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE$1,\n          FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE,\n          METHOD: WebGLRenderingContext.TRIANGLES,\n          UNIFORMS: UNIFORMS$1,\n          ATTRIBUTES: [{\n            name: \"a_positionStart\",\n            size: 2,\n            type: FLOAT$1\n          }, {\n            name: \"a_positionEnd\",\n            size: 2,\n            type: FLOAT$1\n          }, {\n            name: \"a_normal\",\n            size: 2,\n            type: FLOAT$1\n          }, {\n            name: \"a_color\",\n            size: 4,\n            type: UNSIGNED_BYTE$1,\n            normalized: true\n          }, {\n            name: \"a_id\",\n            size: 4,\n            type: UNSIGNED_BYTE$1,\n            normalized: true\n          }, {\n            name: \"a_radius\",\n            size: 1,\n            type: FLOAT$1\n          }],\n          CONSTANT_ATTRIBUTES: [\n          // If 0, then position will be a_positionStart\n          // If 1, then position will be a_positionEnd\n          {\n            name: \"a_positionCoef\",\n            size: 1,\n            type: FLOAT$1\n          }, {\n            name: \"a_normalCoef\",\n            size: 1,\n            type: FLOAT$1\n          }, {\n            name: \"a_radiusCoef\",\n            size: 1,\n            type: FLOAT$1\n          }],\n          CONSTANT_DATA: [[0, 1, 0], [0, -1, 0], [1, 1, 1], [1, 1, 1], [0, -1, 0], [1, -1, -1]]\n        };\n      }\n    }, {\n      key: \"processVisibleItem\",\n      value: function processVisibleItem(edgeIndex, startIndex, sourceData, targetData, data) {\n        var thickness = data.size || 1;\n        var x1 = sourceData.x;\n        var y1 = sourceData.y;\n        var x2 = targetData.x;\n        var y2 = targetData.y;\n        var color = floatColor(data.color);\n\n        // Computing normals\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        var radius = targetData.size || 1;\n        var len = dx * dx + dy * dy;\n        var n1 = 0;\n        var n2 = 0;\n        if (len) {\n          len = 1 / Math.sqrt(len);\n          n1 = -dy * len * thickness;\n          n2 = dx * len * thickness;\n        }\n        var array = this.array;\n        array[startIndex++] = x1;\n        array[startIndex++] = y1;\n        array[startIndex++] = x2;\n        array[startIndex++] = y2;\n        array[startIndex++] = n1;\n        array[startIndex++] = n2;\n        array[startIndex++] = color;\n        array[startIndex++] = edgeIndex;\n        array[startIndex++] = radius;\n      }\n    }, {\n      key: \"setUniforms\",\n      value: function setUniforms(params, _ref) {\n        var gl = _ref.gl,\n          uniformLocations = _ref.uniformLocations;\n        var u_matrix = uniformLocations.u_matrix,\n          u_zoomRatio = uniformLocations.u_zoomRatio,\n          u_feather = uniformLocations.u_feather,\n          u_pixelRatio = uniformLocations.u_pixelRatio,\n          u_correctionRatio = uniformLocations.u_correctionRatio,\n          u_sizeRatio = uniformLocations.u_sizeRatio,\n          u_minEdgeThickness = uniformLocations.u_minEdgeThickness,\n          u_lengthToThicknessRatio = uniformLocations.u_lengthToThicknessRatio;\n        gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n        gl.uniform1f(u_zoomRatio, params.zoomRatio);\n        gl.uniform1f(u_sizeRatio, params.sizeRatio);\n        gl.uniform1f(u_correctionRatio, params.correctionRatio);\n        gl.uniform1f(u_pixelRatio, params.pixelRatio);\n        gl.uniform1f(u_feather, params.antiAliasingFeather);\n        gl.uniform1f(u_minEdgeThickness, params.minEdgeThickness);\n        gl.uniform1f(u_lengthToThicknessRatio, options.lengthToThicknessRatio);\n      }\n    }]);\n  }(EdgeProgram);\n}\nvar EdgeClampedProgram = createEdgeClampedProgram();\nvar EdgeClampedProgram$1 = EdgeClampedProgram;\n\nfunction createEdgeArrowProgram(inputOptions) {\n  return createEdgeCompoundProgram([createEdgeClampedProgram(inputOptions), createEdgeArrowHeadProgram(inputOptions)]);\n}\nvar EdgeArrowProgram = createEdgeArrowProgram();\nvar EdgeArrowProgram$1 = EdgeArrowProgram;\n\n// language=GLSL\nvar SHADER_SOURCE = /*glsl*/\"\\nattribute vec4 a_id;\\nattribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute float a_normalCoef;\\nattribute vec2 a_positionStart;\\nattribute vec2 a_positionEnd;\\nattribute float a_positionCoef;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sizeRatio;\\nuniform float u_zoomRatio;\\nuniform float u_pixelRatio;\\nuniform float u_correctionRatio;\\nuniform float u_minEdgeThickness;\\nuniform float u_feather;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\nvarying float v_feather;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float minThickness = u_minEdgeThickness;\\n\\n  vec2 normal = a_normal * a_normalCoef;\\n  vec2 position = a_positionStart * (1.0 - a_positionCoef) + a_positionEnd * a_positionCoef;\\n\\n  float normalLength = length(normal);\\n  vec2 unitNormal = normal / normalLength;\\n\\n  // We require edges to be at least \\\"minThickness\\\" pixels thick *on screen*\\n  // (so we need to compensate the size ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sizeRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \\\"magic\\\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio / u_sizeRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(position + unitNormal * webGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \\\"magic\\\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasing effect does not depend on the zoom level. So here's yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_zoomRatio;\\n\\n  v_normal = unitNormal;\\n\\n  v_feather = u_feather * u_correctionRatio / u_zoomRatio / u_pixelRatio * 2.0;\\n\\n  #ifdef PICKING_MODE\\n  // For picking mode, we use the ID as the color:\\n  v_color = a_id;\\n  #else\\n  // For normal mode, we use the color:\\n  v_color = a_color;\\n  #endif\\n\\n  v_color.a *= bias;\\n}\\n\";\nvar VERTEX_SHADER_SOURCE = SHADER_SOURCE;\n\nvar _WebGLRenderingContex = WebGLRenderingContext,\n  UNSIGNED_BYTE = _WebGLRenderingContex.UNSIGNED_BYTE,\n  FLOAT = _WebGLRenderingContex.FLOAT;\nvar UNIFORMS = [\"u_matrix\", \"u_zoomRatio\", \"u_sizeRatio\", \"u_correctionRatio\", \"u_pixelRatio\", \"u_feather\", \"u_minEdgeThickness\"];\nvar EdgeRectangleProgram = /*#__PURE__*/function (_EdgeProgram) {\n  function EdgeRectangleProgram() {\n    _classCallCheck(this, EdgeRectangleProgram);\n    return _callSuper(this, EdgeRectangleProgram, arguments);\n  }\n  _inherits(EdgeRectangleProgram, _EdgeProgram);\n  return _createClass(EdgeRectangleProgram, [{\n    key: \"getDefinition\",\n    value: function getDefinition() {\n      return {\n        VERTICES: 6,\n        VERTEX_SHADER_SOURCE: VERTEX_SHADER_SOURCE,\n        FRAGMENT_SHADER_SOURCE: FRAGMENT_SHADER_SOURCE,\n        METHOD: WebGLRenderingContext.TRIANGLES,\n        UNIFORMS: UNIFORMS,\n        ATTRIBUTES: [{\n          name: \"a_positionStart\",\n          size: 2,\n          type: FLOAT\n        }, {\n          name: \"a_positionEnd\",\n          size: 2,\n          type: FLOAT\n        }, {\n          name: \"a_normal\",\n          size: 2,\n          type: FLOAT\n        }, {\n          name: \"a_color\",\n          size: 4,\n          type: UNSIGNED_BYTE,\n          normalized: true\n        }, {\n          name: \"a_id\",\n          size: 4,\n          type: UNSIGNED_BYTE,\n          normalized: true\n        }],\n        CONSTANT_ATTRIBUTES: [\n        // If 0, then position will be a_positionStart\n        // If 2, then position will be a_positionEnd\n        {\n          name: \"a_positionCoef\",\n          size: 1,\n          type: FLOAT\n        }, {\n          name: \"a_normalCoef\",\n          size: 1,\n          type: FLOAT\n        }],\n        CONSTANT_DATA: [[0, 1], [0, -1], [1, 1], [1, 1], [0, -1], [1, -1]]\n      };\n    }\n  }, {\n    key: \"processVisibleItem\",\n    value: function processVisibleItem(edgeIndex, startIndex, sourceData, targetData, data) {\n      var thickness = data.size || 1;\n      var x1 = sourceData.x;\n      var y1 = sourceData.y;\n      var x2 = targetData.x;\n      var y2 = targetData.y;\n      var color = floatColor(data.color);\n\n      // Computing normals\n      var dx = x2 - x1;\n      var dy = y2 - y1;\n      var len = dx * dx + dy * dy;\n      var n1 = 0;\n      var n2 = 0;\n      if (len) {\n        len = 1 / Math.sqrt(len);\n        n1 = -dy * len * thickness;\n        n2 = dx * len * thickness;\n      }\n      var array = this.array;\n      array[startIndex++] = x1;\n      array[startIndex++] = y1;\n      array[startIndex++] = x2;\n      array[startIndex++] = y2;\n      array[startIndex++] = n1;\n      array[startIndex++] = n2;\n      array[startIndex++] = color;\n      array[startIndex++] = edgeIndex;\n    }\n  }, {\n    key: \"setUniforms\",\n    value: function setUniforms(params, _ref) {\n      var gl = _ref.gl,\n        uniformLocations = _ref.uniformLocations;\n      var u_matrix = uniformLocations.u_matrix,\n        u_zoomRatio = uniformLocations.u_zoomRatio,\n        u_feather = uniformLocations.u_feather,\n        u_pixelRatio = uniformLocations.u_pixelRatio,\n        u_correctionRatio = uniformLocations.u_correctionRatio,\n        u_sizeRatio = uniformLocations.u_sizeRatio,\n        u_minEdgeThickness = uniformLocations.u_minEdgeThickness;\n      gl.uniformMatrix3fv(u_matrix, false, params.matrix);\n      gl.uniform1f(u_zoomRatio, params.zoomRatio);\n      gl.uniform1f(u_sizeRatio, params.sizeRatio);\n      gl.uniform1f(u_correctionRatio, params.correctionRatio);\n      gl.uniform1f(u_pixelRatio, params.pixelRatio);\n      gl.uniform1f(u_feather, params.antiAliasingFeather);\n      gl.uniform1f(u_minEdgeThickness, params.minEdgeThickness);\n    }\n  }]);\n}(EdgeProgram);\n\nexport { AbstractNodeProgram as A, DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS as D, EdgeArrowProgram$1 as E, FRAGMENT_SHADER_SOURCE as F, NodeCircleProgram as N, Program as P, _objectSpread2 as _, _defineProperty as a, drawDiscNodeLabel as b, drawDiscNodeHover as c, drawStraightEdgeLabel as d, EdgeRectangleProgram as e, NodeProgram as f, EdgeProgram as g, createEdgeCompoundProgram as h, createEdgeArrowHeadProgram as i, createNodeCompoundProgram as j, AbstractEdgeProgram as k, AbstractProgram as l, EdgeArrowHeadProgram$1 as m, EdgeClampedProgram$1 as n, createEdgeClampedProgram as o, DEFAULT_EDGE_CLAMPED_PROGRAM_OPTIONS as p, createEdgeArrowProgram as q, getAttributeItemsCount as r, getAttributesItemsCount as s, loadVertexShader as t, loadFragmentShader as u, loadProgram as v, killProgram as w, numberToGLSLFloat as x };\n", "import { _ as _inherits, a as _createClass, b as _classCallCheck, c as _callSuper } from '../../dist/inherits-d1a1e29b.esm.js';\nimport { EventEmitter } from 'events';\n\n/**\n * Util type to represent maps of typed elements, but implemented with\n * JavaScript objects.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n/**\n * Returns a type similar to T, but with the K set of properties of the type\n * T *required*, and the rest optional.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n/**\n * Returns a type similar to Partial<T>, but with at least one key set.\n */\n\n/**\n * Custom event emitter types.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar TypedEventEmitter = /*#__PURE__*/function (_ref) {\n  function TypedEventEmitter() {\n    var _this;\n    _classCallCheck(this, TypedEventEmitter);\n    _this = _callSuper(this, TypedEventEmitter);\n    _this.rawEmitter = _this;\n    return _this;\n  }\n  _inherits(TypedEventEmitter, _ref);\n  return _createClass(TypedEventEmitter);\n}(EventEmitter);\n\n/**\n * Event types.\n */\n\n/**\n * Export various other types:\n */\n\nexport { TypedEventEmitter };\n", "import isGraph from 'graphology-utils/is-graph';\nimport { _ as _slicedToArray } from './colors-beb06eb2.esm.js';\n\nvar linear = function linear(k) {\n  return k;\n};\nvar quadraticIn = function quadraticIn(k) {\n  return k * k;\n};\nvar quadraticOut = function quadraticOut(k) {\n  return k * (2 - k);\n};\nvar quadraticInOut = function quadraticInOut(k) {\n  if ((k *= 2) < 1) return 0.5 * k * k;\n  return -0.5 * (--k * (k - 2) - 1);\n};\nvar cubicIn = function cubicIn(k) {\n  return k * k * k;\n};\nvar cubicOut = function cubicOut(k) {\n  return --k * k * k + 1;\n};\nvar cubicInOut = function cubicInOut(k) {\n  if ((k *= 2) < 1) return 0.5 * k * k * k;\n  return 0.5 * ((k -= 2) * k * k + 2);\n};\nvar easings = {\n  linear: linear,\n  quadraticIn: quadraticIn,\n  quadraticOut: quadraticOut,\n  quadraticInOut: quadraticInOut,\n  cubicIn: cubicIn,\n  cubicOut: cubicOut,\n  cubicInOut: cubicInOut\n};\n\n/**\n * Defaults.\n */\n\nvar ANIMATE_DEFAULTS = {\n  easing: \"quadraticInOut\",\n  duration: 150\n};\n\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n  var options = Object.assign({}, ANIMATE_DEFAULTS, opts);\n  var easing = typeof options.easing === \"function\" ? options.easing : easings[options.easing];\n  var start = Date.now();\n  var startPositions = {};\n  for (var node in targets) {\n    var attrs = targets[node];\n    startPositions[node] = {};\n    for (var _k in attrs) startPositions[node][_k] = graph.getNodeAttribute(node, _k);\n  }\n  var frame = null;\n  var _step = function step() {\n    frame = null;\n    var p = (Date.now() - start) / options.duration;\n    if (p >= 1) {\n      // Animation is done\n      for (var _node in targets) {\n        var _attrs = targets[_node];\n\n        // We use given values to avoid precision issues and for convenience\n        for (var _k2 in _attrs) graph.setNodeAttribute(_node, _k2, _attrs[_k2]);\n      }\n      if (typeof callback === \"function\") callback();\n      return;\n    }\n    p = easing(p);\n    for (var _node2 in targets) {\n      var _attrs2 = targets[_node2];\n      var s = startPositions[_node2];\n      for (var _k3 in _attrs2) graph.setNodeAttribute(_node2, _k3, _attrs2[_k3] * p + s[_k3] * (1 - p));\n    }\n    frame = requestAnimationFrame(_step);\n  };\n  _step();\n  return function () {\n    if (frame) cancelAnimationFrame(frame);\n  };\n}\n\nfunction identity() {\n  return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\n\n// TODO: optimize\nfunction scale(m, x, y) {\n  m[0] = x;\n  m[4] = typeof y === \"number\" ? y : x;\n  return m;\n}\nfunction rotate(m, r) {\n  var s = Math.sin(r),\n    c = Math.cos(r);\n  m[0] = c;\n  m[1] = s;\n  m[3] = -s;\n  m[4] = c;\n  return m;\n}\nfunction translate(m, x, y) {\n  m[6] = x;\n  m[7] = y;\n  return m;\n}\nfunction multiply(a, b) {\n  var a00 = a[0],\n    a01 = a[1],\n    a02 = a[2];\n  var a10 = a[3],\n    a11 = a[4],\n    a12 = a[5];\n  var a20 = a[6],\n    a21 = a[7],\n    a22 = a[8];\n  var b00 = b[0],\n    b01 = b[1],\n    b02 = b[2];\n  var b10 = b[3],\n    b11 = b[4],\n    b12 = b[5];\n  var b20 = b[6],\n    b21 = b[7],\n    b22 = b[8];\n  a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return a;\n}\nfunction multiplyVec2(a, b) {\n  var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var a00 = a[0];\n  var a01 = a[1];\n  var a10 = a[3];\n  var a11 = a[4];\n  var a20 = a[6];\n  var a21 = a[7];\n  var b0 = b.x;\n  var b1 = b.y;\n  return {\n    x: b0 * a00 + b1 * a10 + a20 * z,\n    y: b0 * a01 + b1 * a11 + a21 * z\n  };\n}\n\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps to deal with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, i.e. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n  var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n  var graphRatio = graphDimensions.height / graphDimensions.width;\n\n  // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n  // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n  if (viewportRatio < 1 && graphRatio > 1 || viewportRatio > 1 && graphRatio < 1) {\n    return 1;\n  }\n\n  // Else, we need to fit the graph inside the stage:\n  // 1. If the graph is \"squarer\" (i.e. with a ratio closer to 1), we need to make the largest sides touch;\n  // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n  return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\n\n/**\n * Function returning a matrix from the current state of the camera.\n */\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n  // TODO: it's possible to optimize this drastically!\n  var angle = state.angle,\n    ratio = state.ratio,\n    x = state.x,\n    y = state.y;\n  var width = viewportDimensions.width,\n    height = viewportDimensions.height;\n  var matrix = identity();\n  var smallestDimension = Math.min(width, height) - 2 * padding;\n  var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n  if (!inverse) {\n    multiply(matrix, scale(identity(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n    multiply(matrix, rotate(identity(), -angle));\n    multiply(matrix, scale(identity(), 1 / ratio));\n    multiply(matrix, translate(identity(), -x, -y));\n  } else {\n    multiply(matrix, translate(identity(), x, y));\n    multiply(matrix, scale(identity(), ratio));\n    multiply(matrix, rotate(identity(), angle));\n    multiply(matrix, scale(identity(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n  }\n  return matrix;\n}\n\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (i.e. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because the image is vertically\n * swapped in WebGL.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n  var _multiplyVec = multiplyVec2(matrix, {\n      x: Math.cos(cameraState.angle),\n      y: Math.sin(cameraState.angle)\n    }, 0),\n    x = _multiplyVec.x,\n    y = _multiplyVec.y;\n  return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\n\n/**\n * Function returning the graph's node extent in x & y.\n */\nfunction graphExtent(graph) {\n  if (!graph.order) return {\n    x: [0, 1],\n    y: [0, 1]\n  };\n  var xMin = Infinity;\n  var xMax = -Infinity;\n  var yMin = Infinity;\n  var yMax = -Infinity;\n  graph.forEachNode(function (_, attr) {\n    var x = attr.x,\n      y = attr.y;\n    if (x < xMin) xMin = x;\n    if (x > xMax) xMax = x;\n    if (y < yMin) yMin = y;\n    if (y > yMax) yMax = y;\n  });\n  return {\n    x: [xMin, xMax],\n    y: [yMin, yMax]\n  };\n}\n\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n  // check if it's a valid graphology instance\n  if (!isGraph(graph)) throw new Error(\"Sigma: invalid graph instance.\");\n\n  // check if nodes have x/y attributes\n  graph.forEachNode(function (key, attributes) {\n    if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n      throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n    }\n  });\n}\n\n/**\n * Function used to create DOM elements easily.\n */\nfunction createElement(tag, style, attributes) {\n  var element = document.createElement(tag);\n  if (style) {\n    for (var k in style) {\n      element.style[k] = style[k];\n    }\n  }\n  if (attributes) {\n    for (var _k in attributes) {\n      element.setAttribute(_k, attributes[_k]);\n    }\n  }\n  return element;\n}\n\n/**\n * Function returning the browser's pixel ratio.\n */\nfunction getPixelRatio() {\n  if (typeof window.devicePixelRatio !== \"undefined\") return window.devicePixelRatio;\n  return 1;\n}\n\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n */\nfunction zIndexOrdering(_extent, getter, elements) {\n  // If k is > n, we'll use a standard sort\n  return elements.sort(function (a, b) {\n    var zA = getter(a) || 0,\n      zB = getter(b) || 0;\n    if (zA < zB) return -1;\n    if (zA > zB) return 1;\n    return 0;\n  });\n\n  // TODO: counting sort optimization\n}\n\n/**\n * Factory returning a function normalizing the given node's position & size.\n */\n\nfunction createNormalizationFunction(extent) {\n  var _extent$x = _slicedToArray(extent.x, 2),\n    minX = _extent$x[0],\n    maxX = _extent$x[1],\n    _extent$y = _slicedToArray(extent.y, 2),\n    minY = _extent$y[0],\n    maxY = _extent$y[1];\n  var ratio = Math.max(maxX - minX, maxY - minY),\n    dX = (maxX + minX) / 2,\n    dY = (maxY + minY) / 2;\n  if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio)) ratio = 1;\n  if (isNaN(dX)) dX = 0;\n  if (isNaN(dY)) dY = 0;\n  var fn = function fn(data) {\n    return {\n      x: 0.5 + (data.x - dX) / ratio,\n      y: 0.5 + (data.y - dY) / ratio\n    };\n  };\n\n  // TODO: possibility to apply this in batch over array of indices\n  fn.applyTo = function (data) {\n    data.x = 0.5 + (data.x - dX) / ratio;\n    data.y = 0.5 + (data.y - dY) / ratio;\n  };\n  fn.inverse = function (data) {\n    return {\n      x: dX + ratio * (data.x - 0.5),\n      y: dY + ratio * (data.y - 0.5)\n    };\n  };\n  fn.ratio = ratio;\n  return fn;\n}\n\nexport { ANIMATE_DEFAULTS as A, getMatrixImpact as a, createElement as b, createNormalizationFunction as c, getPixelRatio as d, easings as e, multiplyVec2 as f, graphExtent as g, animateNodes as h, identity as i, getCorrectionRatio as j, quadraticOut as k, linear as l, matrixFromCamera as m, quadraticInOut as n, cubicIn as o, cubicOut as p, quadraticIn as q, cubicInOut as r, scale as s, rotate as t, translate as u, validateGraph as v, multiply as w, zIndexOrdering as z };\n", "function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\n/**\n * Extends the target array with the given values.\n */\nfunction extend(array, values) {\n  var l2 = values.size;\n  if (l2 === 0) return;\n  var l1 = array.length;\n  array.length += l2;\n  var i = 0;\n  values.forEach(function (value) {\n    array[l1 + i] = value;\n    i++;\n  });\n}\n\n/**\n * Checks whether the given value is a plain object.\n */\nfunction isPlainObject(value) {\n  return _typeof(value) === \"object\" && value !== null && value.constructor === Object;\n}\n\n/**\n * Helper to use `Object.assign` with more than two objects.\n */\nfunction assign(target) {\n  target = target || {};\n  for (var i = 0, l = arguments.length <= 1 ? 0 : arguments.length - 1; i < l; i++) {\n    var o = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    if (!o) continue;\n    Object.assign(target, o);\n  }\n  return target;\n}\n\n/**\n * Very simple recursive `Object.assign` like function.\n */\nfunction assignDeep(target) {\n  target = target || {};\n  for (var i = 0, l = arguments.length <= 1 ? 0 : arguments.length - 1; i < l; i++) {\n    var o = i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    if (!o) continue;\n    for (var k in o) {\n      if (isPlainObject(o[k])) {\n        target[k] = assignDeep(target[k], o[k]);\n      } else {\n        target[k] = o[k];\n      }\n    }\n  }\n  return target;\n}\n\nexport { _typeof as _, assign as a, assignDeep as b, extend as e, isPlainObject as i };\n", "import { d as drawStraightEdgeLabel, b as drawDiscNodeLabel, c as drawDiscNodeHover, N as NodeCircleProgram, E as EdgeArrowProgram, e as EdgeRectangleProgram } from '../../dist/index-236c62ad.esm.js';\nimport { a as assign } from '../../dist/data-11df7124.esm.js';\nimport '../../dist/inherits-d1a1e29b.esm.js';\nimport '../../dist/colors-beb06eb2.esm.js';\n\n/**\n * Sigma.js Settings\n * =================================\n *\n * The list of settings and some handy functions.\n * @module\n */\n\n/**\n * Sigma.js settings\n * =================================\n */\n\nvar DEFAULT_SETTINGS = {\n  // Performance\n  hideEdgesOnMove: false,\n  hideLabelsOnMove: false,\n  renderLabels: true,\n  renderEdgeLabels: false,\n  enableEdgeEvents: false,\n  // Component rendering\n  defaultNodeColor: \"#999\",\n  defaultNodeType: \"circle\",\n  defaultEdgeColor: \"#ccc\",\n  defaultEdgeType: \"line\",\n  labelFont: \"Arial\",\n  labelSize: 14,\n  labelWeight: \"normal\",\n  labelColor: {\n    color: \"#000\"\n  },\n  edgeLabelFont: \"Arial\",\n  edgeLabelSize: 14,\n  edgeLabelWeight: \"normal\",\n  edgeLabelColor: {\n    attribute: \"color\"\n  },\n  stagePadding: 30,\n  defaultDrawEdgeLabel: drawStraightEdgeLabel,\n  defaultDrawNodeLabel: drawDiscNodeLabel,\n  defaultDrawNodeHover: drawDiscNodeHover,\n  minEdgeThickness: 1.7,\n  antiAliasingFeather: 1,\n  // Mouse and touch settings\n  dragTimeout: 100,\n  draggedEventsTolerance: 3,\n  inertiaDuration: 200,\n  inertiaRatio: 3,\n  zoomDuration: 250,\n  zoomingRatio: 1.7,\n  doubleClickTimeout: 300,\n  doubleClickZoomingRatio: 2.2,\n  doubleClickZoomingDuration: 200,\n  tapMoveTolerance: 10,\n  // Size and scaling\n  zoomToSizeRatioFunction: Math.sqrt,\n  itemSizesReference: \"screen\",\n  autoRescale: true,\n  autoCenter: true,\n  // Labels\n  labelDensity: 1,\n  labelGridCellSize: 100,\n  labelRenderedSizeThreshold: 6,\n  // Reducers\n  nodeReducer: null,\n  edgeReducer: null,\n  // Features\n  zIndex: false,\n  minCameraRatio: null,\n  maxCameraRatio: null,\n  enableCameraZooming: true,\n  enableCameraPanning: true,\n  enableCameraRotation: true,\n  cameraPanBoundaries: null,\n  // Lifecycle\n  allowInvalidContainer: false,\n  // Program classes\n  nodeProgramClasses: {},\n  nodeHoverProgramClasses: {},\n  edgeProgramClasses: {}\n};\nvar DEFAULT_NODE_PROGRAM_CLASSES = {\n  circle: NodeCircleProgram\n};\nvar DEFAULT_EDGE_PROGRAM_CLASSES = {\n  arrow: EdgeArrowProgram,\n  line: EdgeRectangleProgram\n};\nfunction validateSettings(settings) {\n  if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\n    throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\n  }\n  var minCameraRatio = settings.minCameraRatio,\n    maxCameraRatio = settings.maxCameraRatio;\n  if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\n    throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\n  }\n}\nfunction resolveSettings(settings) {\n  var resolvedSettings = assign({}, DEFAULT_SETTINGS, settings);\n  resolvedSettings.nodeProgramClasses = assign({}, DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);\n  resolvedSettings.edgeProgramClasses = assign({}, DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);\n  return resolvedSettings;\n}\n\nexport { DEFAULT_EDGE_PROGRAM_CLASSES, DEFAULT_NODE_PROGRAM_CLASSES, DEFAULT_SETTINGS, resolveSettings, validateSettings };\n", "import { _ as _objectSpread2, a as _defineProperty } from './index-236c62ad.esm.js';\nimport { _ as _inherits, a as _createClass, b as _classCallCheck, c as _callSuper, d as _toPropertyKey } from './inherits-d1a1e29b.esm.js';\nimport { TypedEventEmitter } from '../types/dist/sigma-types.esm.js';\nimport { A as ANIMATE_DEFAULTS, e as easings, g as graphExtent, c as createNormalizationFunction, m as matrixFromCamera, z as zIndexOrdering, a as getMatrixImpact, b as createElement, d as getPixelRatio, f as multiplyVec2, i as identity, v as validateGraph } from './normalization-be445518.esm.js';\nimport { DEFAULT_SETTINGS, validateSettings, resolveSettings } from '../settings/dist/sigma-settings.esm.js';\nimport { _ as _slicedToArray, a as _arrayLikeToArray, b as _unsupportedIterableToArray, g as getPixelColor, c as colorToIndex } from './colors-beb06eb2.esm.js';\nimport { _ as _typeof, e as extend } from './data-11df7124.esm.js';\nimport 'events';\nimport 'graphology-utils/is-graph';\n\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n\n/**\n * Event types.\n */\n/**\n * Camera class\n */\nvar Camera = /*#__PURE__*/function (_TypedEventEmitter) {\n  function Camera() {\n    var _this;\n    _classCallCheck(this, Camera);\n    _this = _callSuper(this, Camera);\n\n    // State\n    _defineProperty(_this, \"x\", 0.5);\n    _defineProperty(_this, \"y\", 0.5);\n    _defineProperty(_this, \"angle\", 0);\n    _defineProperty(_this, \"ratio\", 1);\n    _defineProperty(_this, \"minRatio\", null);\n    _defineProperty(_this, \"maxRatio\", null);\n    _defineProperty(_this, \"enabledZooming\", true);\n    _defineProperty(_this, \"enabledPanning\", true);\n    _defineProperty(_this, \"enabledRotation\", true);\n    _defineProperty(_this, \"clean\", null);\n    _defineProperty(_this, \"nextFrame\", null);\n    _defineProperty(_this, \"previousState\", null);\n    _defineProperty(_this, \"enabled\", true);\n    _this.previousState = _this.getState();\n    return _this;\n  }\n\n  /**\n   * Static method used to create a Camera object with a given state.\n   */\n  _inherits(Camera, _TypedEventEmitter);\n  return _createClass(Camera, [{\n    key: \"enable\",\n    value:\n    /**\n     * Method used to enable the camera.\n     */\n    function enable() {\n      this.enabled = true;\n      return this;\n    }\n\n    /**\n     * Method used to disable the camera.\n     */\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.enabled = false;\n      return this;\n    }\n\n    /**\n     * Method used to retrieve the camera's current state.\n     */\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return {\n        x: this.x,\n        y: this.y,\n        angle: this.angle,\n        ratio: this.ratio\n      };\n    }\n\n    /**\n     * Method used to check whether the camera has the given state.\n     */\n  }, {\n    key: \"hasState\",\n    value: function hasState(state) {\n      return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n    }\n\n    /**\n     * Method used to retrieve the camera's previous state.\n     */\n  }, {\n    key: \"getPreviousState\",\n    value: function getPreviousState() {\n      var state = this.previousState;\n      if (!state) return null;\n      return {\n        x: state.x,\n        y: state.y,\n        angle: state.angle,\n        ratio: state.ratio\n      };\n    }\n\n    /**\n     * Method used to check minRatio and maxRatio values.\n     */\n  }, {\n    key: \"getBoundedRatio\",\n    value: function getBoundedRatio(ratio) {\n      var r = ratio;\n      if (typeof this.minRatio === \"number\") r = Math.max(r, this.minRatio);\n      if (typeof this.maxRatio === \"number\") r = Math.min(r, this.maxRatio);\n      return r;\n    }\n\n    /**\n     * Method used to check various things to return a legit state candidate.\n     */\n  }, {\n    key: \"validateState\",\n    value: function validateState(state) {\n      var validatedState = {};\n      if (this.enabledPanning && typeof state.x === \"number\") validatedState.x = state.x;\n      if (this.enabledPanning && typeof state.y === \"number\") validatedState.y = state.y;\n      if (this.enabledZooming && typeof state.ratio === \"number\") validatedState.ratio = this.getBoundedRatio(state.ratio);\n      if (this.enabledRotation && typeof state.angle === \"number\") validatedState.angle = state.angle;\n      return this.clean ? this.clean(_objectSpread2(_objectSpread2({}, this.getState()), validatedState)) : validatedState;\n    }\n\n    /**\n     * Method used to check whether the camera is currently being animated.\n     */\n  }, {\n    key: \"isAnimated\",\n    value: function isAnimated() {\n      return !!this.nextFrame;\n    }\n\n    /**\n     * Method used to set the camera's state.\n     */\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (!this.enabled) return this;\n\n      // Keeping track of last state\n      this.previousState = this.getState();\n      var validState = this.validateState(state);\n      if (typeof validState.x === \"number\") this.x = validState.x;\n      if (typeof validState.y === \"number\") this.y = validState.y;\n      if (typeof validState.ratio === \"number\") this.ratio = validState.ratio;\n      if (typeof validState.angle === \"number\") this.angle = validState.angle;\n\n      // Emitting\n      if (!this.hasState(this.previousState)) this.emit(\"updated\", this.getState());\n      return this;\n    }\n\n    /**\n     * Method used to update the camera's state using a function.\n     */\n  }, {\n    key: \"updateState\",\n    value: function updateState(updater) {\n      this.setState(updater(this.getState()));\n      return this;\n    }\n\n    /**\n     * Method used to animate the camera.\n     */\n  }, {\n    key: \"animate\",\n    value: function animate(state) {\n      var _this2 = this;\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments.length > 2 ? arguments[2] : undefined;\n      if (!callback) return new Promise(function (resolve) {\n        return _this2.animate(state, opts, resolve);\n      });\n      if (!this.enabled) return;\n      var options = _objectSpread2(_objectSpread2({}, ANIMATE_DEFAULTS), opts);\n      var validState = this.validateState(state);\n      var easing = typeof options.easing === \"function\" ? options.easing : easings[options.easing];\n\n      // State\n      var start = Date.now(),\n        initialState = this.getState();\n\n      // Function performing the animation\n      var _fn = function fn() {\n        var t = (Date.now() - start) / options.duration;\n\n        // The animation is over:\n        if (t >= 1) {\n          _this2.nextFrame = null;\n          _this2.setState(validState);\n          if (_this2.animationCallback) {\n            _this2.animationCallback.call(null);\n            _this2.animationCallback = undefined;\n          }\n          return;\n        }\n        var coefficient = easing(t);\n        var newState = {};\n        if (typeof validState.x === \"number\") newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n        if (typeof validState.y === \"number\") newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n        if (_this2.enabledRotation && typeof validState.angle === \"number\") newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n        if (typeof validState.ratio === \"number\") newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n        _this2.setState(newState);\n        _this2.nextFrame = requestAnimationFrame(_fn);\n      };\n      if (this.nextFrame) {\n        cancelAnimationFrame(this.nextFrame);\n        if (this.animationCallback) this.animationCallback.call(null);\n        this.nextFrame = requestAnimationFrame(_fn);\n      } else {\n        _fn();\n      }\n      this.animationCallback = callback;\n    }\n\n    /**\n     * Method used to zoom the camera.\n     */\n  }, {\n    key: \"animatedZoom\",\n    value: function animatedZoom(factorOrOptions) {\n      if (!factorOrOptions) return this.animate({\n        ratio: this.ratio / DEFAULT_ZOOMING_RATIO\n      });\n      if (typeof factorOrOptions === \"number\") return this.animate({\n        ratio: this.ratio / factorOrOptions\n      });\n      return this.animate({\n        ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)\n      }, factorOrOptions);\n    }\n\n    /**\n     * Method used to unzoom the camera.\n     */\n  }, {\n    key: \"animatedUnzoom\",\n    value: function animatedUnzoom(factorOrOptions) {\n      if (!factorOrOptions) return this.animate({\n        ratio: this.ratio * DEFAULT_ZOOMING_RATIO\n      });\n      if (typeof factorOrOptions === \"number\") return this.animate({\n        ratio: this.ratio * factorOrOptions\n      });\n      return this.animate({\n        ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO)\n      }, factorOrOptions);\n    }\n\n    /**\n     * Method used to reset the camera.\n     */\n  }, {\n    key: \"animatedReset\",\n    value: function animatedReset(options) {\n      return this.animate({\n        x: 0.5,\n        y: 0.5,\n        ratio: 1,\n        angle: 0\n      }, options);\n    }\n\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     */\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Camera.from(this.getState());\n    }\n  }], [{\n    key: \"from\",\n    value: function from(state) {\n      var camera = new Camera();\n      return camera.setState(state);\n    }\n  }]);\n}(TypedEventEmitter);\n\n/**\n * Captor utils functions\n * ======================\n */\n\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object. If\n * a DOM element is given, it uses this element's offset to compute the position\n * (this allows using events that are not bound to the container itself and\n * still have a proper position).\n *\n * @param  {event}       e - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {number}      The local Y value of the mouse.\n */\nfunction getPosition(e, dom) {\n  var bbox = dom.getBoundingClientRect();\n  return {\n    x: e.clientX - bbox.left,\n    y: e.clientY - bbox.top\n  };\n}\n\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}       e   - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getMouseCoords(e, dom) {\n  var res = _objectSpread2(_objectSpread2({}, getPosition(e, dom)), {}, {\n    sigmaDefaultPrevented: false,\n    preventSigmaDefault: function preventSigmaDefault() {\n      res.sigmaDefaultPrevented = true;\n    },\n    original: e\n  });\n  return res;\n}\n\n/**\n * Takes a touch coords or a mouse coords, and always returns a clean mouse coords object.\n */\nfunction cleanMouseCoords(e) {\n  var res = \"x\" in e ? e : _objectSpread2(_objectSpread2({}, e.touches[0] || e.previousTouches[0]), {}, {\n    original: e.original,\n    sigmaDefaultPrevented: e.sigmaDefaultPrevented,\n    preventSigmaDefault: function preventSigmaDefault() {\n      e.sigmaDefaultPrevented = true;\n      res.sigmaDefaultPrevented = true;\n    }\n  });\n  return res;\n}\n\n/**\n * Convert mouse wheel event coords to sigma coords.\n *\n * @param  {event}       e   - A wheel mouse event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getWheelCoords(e, dom) {\n  return _objectSpread2(_objectSpread2({}, getMouseCoords(e, dom)), {}, {\n    delta: getWheelDelta(e)\n  });\n}\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n  var arr = [];\n  for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++) arr.push(touches[i]);\n  return arr;\n}\n\n/**\n * Convert touch coords to sigma coords.\n *\n * @param  {event}       e               - A touch event.\n * @param  {Touch[]}     previousTouches - An array of the previously stored touches.\n * @param  {HTMLElement} dom             - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getTouchCoords(e, previousTouches, dom) {\n  var res = {\n    touches: getTouchesArray(e.touches).map(function (touch) {\n      return getPosition(touch, dom);\n    }),\n    previousTouches: previousTouches.map(function (touch) {\n      return getPosition(touch, dom);\n    }),\n    sigmaDefaultPrevented: false,\n    preventSigmaDefault: function preventSigmaDefault() {\n      res.sigmaDefaultPrevented = true;\n    },\n    original: e\n  };\n  return res;\n}\n\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n  // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n  if (typeof e.deltaY !== \"undefined\") return e.deltaY * -3 / 360;\n  if (typeof e.detail !== \"undefined\") return e.detail / -9;\n  throw new Error(\"Captor: could not extract delta from event.\");\n}\n\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /*#__PURE__*/function (_TypedEventEmitter) {\n  function Captor(container, renderer) {\n    var _this;\n    _classCallCheck(this, Captor);\n    _this = _callSuper(this, Captor);\n    // Properties\n    _this.container = container;\n    _this.renderer = renderer;\n    return _this;\n  }\n  _inherits(Captor, _TypedEventEmitter);\n  return _createClass(Captor);\n}(TypedEventEmitter);\n\nvar MOUSE_SETTINGS_KEYS = [\"doubleClickTimeout\", \"doubleClickZoomingDuration\", \"doubleClickZoomingRatio\", \"dragTimeout\", \"draggedEventsTolerance\", \"inertiaDuration\", \"inertiaRatio\", \"zoomDuration\", \"zoomingRatio\"];\nvar DEFAULT_MOUSE_SETTINGS = MOUSE_SETTINGS_KEYS.reduce(function (iter, key) {\n  return _objectSpread2(_objectSpread2({}, iter), {}, _defineProperty({}, key, DEFAULT_SETTINGS[key]));\n}, {});\n\n/**\n * Event types.\n */\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /*#__PURE__*/function (_Captor) {\n  function MouseCaptor(container, renderer) {\n    var _this;\n    _classCallCheck(this, MouseCaptor);\n    _this = _callSuper(this, MouseCaptor, [container, renderer]);\n\n    // Binding methods\n    // State\n    _defineProperty(_this, \"enabled\", true);\n    _defineProperty(_this, \"draggedEvents\", 0);\n    _defineProperty(_this, \"downStartTime\", null);\n    _defineProperty(_this, \"lastMouseX\", null);\n    _defineProperty(_this, \"lastMouseY\", null);\n    _defineProperty(_this, \"isMouseDown\", false);\n    _defineProperty(_this, \"isMoving\", false);\n    _defineProperty(_this, \"movingTimeout\", null);\n    _defineProperty(_this, \"startCameraState\", null);\n    _defineProperty(_this, \"clicks\", 0);\n    _defineProperty(_this, \"doubleClickTimeout\", null);\n    _defineProperty(_this, \"currentWheelDirection\", 0);\n    _defineProperty(_this, \"settings\", DEFAULT_MOUSE_SETTINGS);\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleRightClick = _this.handleRightClick.bind(_this);\n    _this.handleDown = _this.handleDown.bind(_this);\n    _this.handleUp = _this.handleUp.bind(_this);\n    _this.handleMove = _this.handleMove.bind(_this);\n    _this.handleWheel = _this.handleWheel.bind(_this);\n    _this.handleLeave = _this.handleLeave.bind(_this);\n    _this.handleEnter = _this.handleEnter.bind(_this);\n\n    // Binding events\n    container.addEventListener(\"click\", _this.handleClick, {\n      capture: false\n    });\n    container.addEventListener(\"contextmenu\", _this.handleRightClick, {\n      capture: false\n    });\n    container.addEventListener(\"mousedown\", _this.handleDown, {\n      capture: false\n    });\n    container.addEventListener(\"wheel\", _this.handleWheel, {\n      capture: false\n    });\n    container.addEventListener(\"mouseleave\", _this.handleLeave, {\n      capture: false\n    });\n    container.addEventListener(\"mouseenter\", _this.handleEnter, {\n      capture: false\n    });\n    document.addEventListener(\"mousemove\", _this.handleMove, {\n      capture: false\n    });\n    document.addEventListener(\"mouseup\", _this.handleUp, {\n      capture: false\n    });\n    return _this;\n  }\n  _inherits(MouseCaptor, _Captor);\n  return _createClass(MouseCaptor, [{\n    key: \"kill\",\n    value: function kill() {\n      var container = this.container;\n      container.removeEventListener(\"click\", this.handleClick);\n      container.removeEventListener(\"contextmenu\", this.handleRightClick);\n      container.removeEventListener(\"mousedown\", this.handleDown);\n      container.removeEventListener(\"wheel\", this.handleWheel);\n      container.removeEventListener(\"mouseleave\", this.handleLeave);\n      container.removeEventListener(\"mouseenter\", this.handleEnter);\n      document.removeEventListener(\"mousemove\", this.handleMove);\n      document.removeEventListener(\"mouseup\", this.handleUp);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _this2 = this;\n      if (!this.enabled) return;\n      this.clicks++;\n      if (this.clicks === 2) {\n        this.clicks = 0;\n        if (typeof this.doubleClickTimeout === \"number\") {\n          clearTimeout(this.doubleClickTimeout);\n          this.doubleClickTimeout = null;\n        }\n        return this.handleDoubleClick(e);\n      }\n      setTimeout(function () {\n        _this2.clicks = 0;\n        _this2.doubleClickTimeout = null;\n      }, this.settings.doubleClickTimeout);\n\n      // NOTE: this is here to prevent click events on drag\n      if (this.draggedEvents < this.settings.draggedEventsTolerance) this.emit(\"click\", getMouseCoords(e, this.container));\n    }\n  }, {\n    key: \"handleRightClick\",\n    value: function handleRightClick(e) {\n      if (!this.enabled) return;\n      this.emit(\"rightClick\", getMouseCoords(e, this.container));\n    }\n  }, {\n    key: \"handleDoubleClick\",\n    value: function handleDoubleClick(e) {\n      if (!this.enabled) return;\n      e.preventDefault();\n      e.stopPropagation();\n      var mouseCoords = getMouseCoords(e, this.container);\n      this.emit(\"doubleClick\", mouseCoords);\n      if (mouseCoords.sigmaDefaultPrevented) return;\n\n      // default behavior\n      var camera = this.renderer.getCamera();\n      var newRatio = camera.getBoundedRatio(camera.getState().ratio / this.settings.doubleClickZoomingRatio);\n      camera.animate(this.renderer.getViewportZoomedState(getPosition(e, this.container), newRatio), {\n        easing: \"quadraticInOut\",\n        duration: this.settings.doubleClickZoomingDuration\n      });\n    }\n  }, {\n    key: \"handleDown\",\n    value: function handleDown(e) {\n      if (!this.enabled) return;\n\n      // We only start dragging on left button\n      if (e.button === 0) {\n        this.startCameraState = this.renderer.getCamera().getState();\n        var _getPosition = getPosition(e, this.container),\n          x = _getPosition.x,\n          y = _getPosition.y;\n        this.lastMouseX = x;\n        this.lastMouseY = y;\n        this.draggedEvents = 0;\n        this.downStartTime = Date.now();\n        this.isMouseDown = true;\n      }\n      this.emit(\"mousedown\", getMouseCoords(e, this.container));\n    }\n  }, {\n    key: \"handleUp\",\n    value: function handleUp(e) {\n      var _this3 = this;\n      if (!this.enabled || !this.isMouseDown) return;\n      var camera = this.renderer.getCamera();\n      this.isMouseDown = false;\n      if (typeof this.movingTimeout === \"number\") {\n        clearTimeout(this.movingTimeout);\n        this.movingTimeout = null;\n      }\n      var _getPosition2 = getPosition(e, this.container),\n        x = _getPosition2.x,\n        y = _getPosition2.y;\n      var cameraState = camera.getState(),\n        previousCameraState = camera.getPreviousState() || {\n          x: 0,\n          y: 0\n        };\n      if (this.isMoving) {\n        camera.animate({\n          x: cameraState.x + this.settings.inertiaRatio * (cameraState.x - previousCameraState.x),\n          y: cameraState.y + this.settings.inertiaRatio * (cameraState.y - previousCameraState.y)\n        }, {\n          duration: this.settings.inertiaDuration,\n          easing: \"quadraticOut\"\n        });\n      } else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n        camera.setState({\n          x: cameraState.x,\n          y: cameraState.y\n        });\n      }\n      this.isMoving = false;\n      setTimeout(function () {\n        var shouldRefresh = _this3.draggedEvents > 0;\n        _this3.draggedEvents = 0;\n\n        // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work\n        // when someone releases camera pan drag after having stopped moving.\n        // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2\n        // See also issue: https://github.com/jacomyal/sigma.js/issues/1290\n        // It could be possible to render instead of scheduling a refresh but for\n        // now it seems good enough.\n        if (shouldRefresh && _this3.renderer.getSetting(\"hideEdgesOnMove\")) _this3.renderer.refresh();\n      }, 0);\n      this.emit(\"mouseup\", getMouseCoords(e, this.container));\n    }\n  }, {\n    key: \"handleMove\",\n    value: function handleMove(e) {\n      var _this4 = this;\n      if (!this.enabled) return;\n      var mouseCoords = getMouseCoords(e, this.container);\n\n      // Always trigger a \"mousemovebody\" event, so that it is possible to develop\n      // a drag-and-drop effect that works even when the mouse is out of the\n      // container:\n      this.emit(\"mousemovebody\", mouseCoords);\n\n      // Only trigger the \"mousemove\" event when the mouse is actually hovering\n      // the container, to avoid weirdly hovering nodes and/or edges when the\n      // mouse is not hover the container:\n      if (e.target === this.container || e.composedPath()[0] === this.container) {\n        this.emit(\"mousemove\", mouseCoords);\n      }\n      if (mouseCoords.sigmaDefaultPrevented) return;\n\n      // Handle the case when \"isMouseDown\" all the time, to allow dragging the\n      // stage while the mouse is not hover the container:\n      if (this.isMouseDown) {\n        this.isMoving = true;\n        this.draggedEvents++;\n        if (typeof this.movingTimeout === \"number\") {\n          clearTimeout(this.movingTimeout);\n        }\n        this.movingTimeout = window.setTimeout(function () {\n          _this4.movingTimeout = null;\n          _this4.isMoving = false;\n        }, this.settings.dragTimeout);\n        var camera = this.renderer.getCamera();\n        var _getPosition3 = getPosition(e, this.container),\n          eX = _getPosition3.x,\n          eY = _getPosition3.y;\n        var lastMouse = this.renderer.viewportToFramedGraph({\n          x: this.lastMouseX,\n          y: this.lastMouseY\n        });\n        var mouse = this.renderer.viewportToFramedGraph({\n          x: eX,\n          y: eY\n        });\n        var offsetX = lastMouse.x - mouse.x,\n          offsetY = lastMouse.y - mouse.y;\n        var cameraState = camera.getState();\n        var x = cameraState.x + offsetX,\n          y = cameraState.y + offsetY;\n        camera.setState({\n          x: x,\n          y: y\n        });\n        this.lastMouseX = eX;\n        this.lastMouseY = eY;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }, {\n    key: \"handleLeave\",\n    value: function handleLeave(e) {\n      this.emit(\"mouseleave\", getMouseCoords(e, this.container));\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(e) {\n      this.emit(\"mouseenter\", getMouseCoords(e, this.container));\n    }\n  }, {\n    key: \"handleWheel\",\n    value: function handleWheel(e) {\n      var _this5 = this;\n      var camera = this.renderer.getCamera();\n      if (!this.enabled || !camera.enabledZooming) return;\n      var delta = getWheelDelta(e);\n      if (!delta) return;\n      var wheelCoords = getWheelCoords(e, this.container);\n      this.emit(\"wheel\", wheelCoords);\n      if (wheelCoords.sigmaDefaultPrevented) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n\n      // Default behavior\n      var currentRatio = camera.getState().ratio;\n      var ratioDiff = delta > 0 ? 1 / this.settings.zoomingRatio : this.settings.zoomingRatio;\n      var newRatio = camera.getBoundedRatio(currentRatio * ratioDiff);\n      var wheelDirection = delta > 0 ? 1 : -1;\n      var now = Date.now();\n\n      // Exit early without preventing default behavior when ratio doesn't change:\n      if (currentRatio === newRatio) return;\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Cancel events that are too close each other and in the same direction:\n      if (this.currentWheelDirection === wheelDirection && this.lastWheelTriggerTime && now - this.lastWheelTriggerTime < this.settings.zoomDuration / 5) {\n        return;\n      }\n      camera.animate(this.renderer.getViewportZoomedState(getPosition(e, this.container), newRatio), {\n        easing: \"quadraticOut\",\n        duration: this.settings.zoomDuration\n      }, function () {\n        _this5.currentWheelDirection = 0;\n      });\n      this.currentWheelDirection = wheelDirection;\n      this.lastWheelTriggerTime = now;\n    }\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n  }]);\n}(Captor);\n\nvar TOUCH_SETTINGS_KEYS = [\"dragTimeout\", \"inertiaDuration\", \"inertiaRatio\", \"doubleClickTimeout\", \"doubleClickZoomingRatio\", \"doubleClickZoomingDuration\", \"tapMoveTolerance\"];\nvar DEFAULT_TOUCH_SETTINGS = TOUCH_SETTINGS_KEYS.reduce(function (iter, key) {\n  return _objectSpread2(_objectSpread2({}, iter), {}, _defineProperty({}, key, DEFAULT_SETTINGS[key]));\n}, {});\n\n/**\n * Event types.\n */\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /*#__PURE__*/function (_Captor) {\n  function TouchCaptor(container, renderer) {\n    var _this;\n    _classCallCheck(this, TouchCaptor);\n    _this = _callSuper(this, TouchCaptor, [container, renderer]);\n\n    // Binding methods:\n    _defineProperty(_this, \"enabled\", true);\n    _defineProperty(_this, \"isMoving\", false);\n    _defineProperty(_this, \"hasMoved\", false);\n    _defineProperty(_this, \"touchMode\", 0);\n    _defineProperty(_this, \"startTouchesPositions\", []);\n    _defineProperty(_this, \"lastTouches\", []);\n    _defineProperty(_this, \"lastTap\", null);\n    _defineProperty(_this, \"settings\", DEFAULT_TOUCH_SETTINGS);\n    _this.handleStart = _this.handleStart.bind(_this);\n    _this.handleLeave = _this.handleLeave.bind(_this);\n    _this.handleMove = _this.handleMove.bind(_this);\n\n    // Binding events\n    container.addEventListener(\"touchstart\", _this.handleStart, {\n      capture: false\n    });\n    container.addEventListener(\"touchcancel\", _this.handleLeave, {\n      capture: false\n    });\n    document.addEventListener(\"touchend\", _this.handleLeave, {\n      capture: false,\n      passive: false\n    });\n    document.addEventListener(\"touchmove\", _this.handleMove, {\n      capture: false,\n      passive: false\n    });\n    return _this;\n  }\n  _inherits(TouchCaptor, _Captor);\n  return _createClass(TouchCaptor, [{\n    key: \"kill\",\n    value: function kill() {\n      var container = this.container;\n      container.removeEventListener(\"touchstart\", this.handleStart);\n      container.removeEventListener(\"touchcancel\", this.handleLeave);\n      document.removeEventListener(\"touchend\", this.handleLeave);\n      document.removeEventListener(\"touchmove\", this.handleMove);\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions() {\n      return {\n        width: this.container.offsetWidth,\n        height: this.container.offsetHeight\n      };\n    }\n  }, {\n    key: \"handleStart\",\n    value: function handleStart(e) {\n      var _this2 = this;\n      if (!this.enabled) return;\n      e.preventDefault();\n      var touches = getTouchesArray(e.touches);\n      this.touchMode = touches.length;\n      this.startCameraState = this.renderer.getCamera().getState();\n      this.startTouchesPositions = touches.map(function (touch) {\n        return getPosition(touch, _this2.container);\n      });\n\n      // When there are two touches down, let's record distance and angle as well:\n      if (this.touchMode === 2) {\n        var _this$startTouchesPos = _slicedToArray(this.startTouchesPositions, 2),\n          _this$startTouchesPos2 = _this$startTouchesPos[0],\n          x0 = _this$startTouchesPos2.x,\n          y0 = _this$startTouchesPos2.y,\n          _this$startTouchesPos3 = _this$startTouchesPos[1],\n          x1 = _this$startTouchesPos3.x,\n          y1 = _this$startTouchesPos3.y;\n        this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n        this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n      }\n      this.emit(\"touchdown\", getTouchCoords(e, this.lastTouches, this.container));\n      this.lastTouches = touches;\n      this.lastTouchesPositions = this.startTouchesPositions;\n    }\n  }, {\n    key: \"handleLeave\",\n    value: function handleLeave(e) {\n      if (!this.enabled || !this.startTouchesPositions.length) return;\n      if (e.cancelable) e.preventDefault();\n      if (this.movingTimeout) {\n        this.isMoving = false;\n        clearTimeout(this.movingTimeout);\n      }\n      switch (this.touchMode) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        case 2:\n          if (e.touches.length === 1) {\n            this.handleStart(e);\n            e.preventDefault();\n            break;\n          }\n        /* falls through */\n        case 1:\n          if (this.isMoving) {\n            var camera = this.renderer.getCamera();\n            var cameraState = camera.getState(),\n              previousCameraState = camera.getPreviousState() || {\n                x: 0,\n                y: 0\n              };\n            camera.animate({\n              x: cameraState.x + this.settings.inertiaRatio * (cameraState.x - previousCameraState.x),\n              y: cameraState.y + this.settings.inertiaRatio * (cameraState.y - previousCameraState.y)\n            }, {\n              duration: this.settings.inertiaDuration,\n              easing: \"quadraticOut\"\n            });\n          }\n          this.hasMoved = false;\n          this.isMoving = false;\n          this.touchMode = 0;\n          break;\n      }\n      this.emit(\"touchup\", getTouchCoords(e, this.lastTouches, this.container));\n\n      // When the last touch ends and there hasn't been too much movement, trigger a \"tap\" or \"doubletap\" event:\n      if (!e.touches.length) {\n        var position = getPosition(this.lastTouches[0], this.container);\n        var downPosition = this.startTouchesPositions[0];\n        var dSquare = Math.pow(position.x - downPosition.x, 2) + Math.pow(position.y - downPosition.y, 2);\n        if (!e.touches.length && dSquare < Math.pow(this.settings.tapMoveTolerance, 2)) {\n          // Only trigger \"doubletap\" when the last tap is recent enough:\n          if (this.lastTap && Date.now() - this.lastTap.time < this.settings.doubleClickTimeout) {\n            var touchCoords = getTouchCoords(e, this.lastTouches, this.container);\n            this.emit(\"doubletap\", touchCoords);\n            this.lastTap = null;\n            if (!touchCoords.sigmaDefaultPrevented) {\n              var _camera = this.renderer.getCamera();\n              var newRatio = _camera.getBoundedRatio(_camera.getState().ratio / this.settings.doubleClickZoomingRatio);\n              _camera.animate(this.renderer.getViewportZoomedState(position, newRatio), {\n                easing: \"quadraticInOut\",\n                duration: this.settings.doubleClickZoomingDuration\n              });\n            }\n          }\n          // Else, trigger a normal \"tap\" event:\n          else {\n            var _touchCoords = getTouchCoords(e, this.lastTouches, this.container);\n            this.emit(\"tap\", _touchCoords);\n            this.lastTap = {\n              time: Date.now(),\n              position: _touchCoords.touches[0] || _touchCoords.previousTouches[0]\n            };\n          }\n        }\n      }\n      this.lastTouches = getTouchesArray(e.touches);\n      this.startTouchesPositions = [];\n    }\n  }, {\n    key: \"handleMove\",\n    value: function handleMove(e) {\n      var _this3 = this;\n      if (!this.enabled || !this.startTouchesPositions.length) return;\n      e.preventDefault();\n      var touches = getTouchesArray(e.touches);\n      var touchesPositions = touches.map(function (touch) {\n        return getPosition(touch, _this3.container);\n      });\n      var lastTouches = this.lastTouches;\n      this.lastTouches = touches;\n      this.lastTouchesPositions = touchesPositions;\n      var touchCoords = getTouchCoords(e, lastTouches, this.container);\n      this.emit(\"touchmove\", touchCoords);\n      if (touchCoords.sigmaDefaultPrevented) return;\n\n      // If a move was initiated at some point, and we get back to start point,\n      // we should still consider that we did move (which also happens after a\n      // multiple touch when only one touch remains in which case handleStart\n      // is recalled within handleLeave).\n      // Now, some mobile browsers report zero-distance moves so we also check that\n      // one of the touches did actually move from the origin position.\n      this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {\n        var startPosition = _this3.startTouchesPositions[idx];\n        return startPosition && (position.x !== startPosition.x || position.y !== startPosition.y);\n      }));\n\n      // If there was no move, do not trigger touch moves behavior\n      if (!this.hasMoved) {\n        return;\n      }\n      this.isMoving = true;\n      if (this.movingTimeout) clearTimeout(this.movingTimeout);\n      this.movingTimeout = window.setTimeout(function () {\n        _this3.isMoving = false;\n      }, this.settings.dragTimeout);\n      var camera = this.renderer.getCamera();\n      var startCameraState = this.startCameraState;\n      var padding = this.renderer.getSetting(\"stagePadding\");\n      switch (this.touchMode) {\n        case 1:\n          {\n            var _this$renderer$viewpo = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]),\n              xStart = _this$renderer$viewpo.x,\n              yStart = _this$renderer$viewpo.y;\n            var _this$renderer$viewpo2 = this.renderer.viewportToFramedGraph(touchesPositions[0]),\n              x = _this$renderer$viewpo2.x,\n              y = _this$renderer$viewpo2.y;\n            camera.setState({\n              x: startCameraState.x + xStart - x,\n              y: startCameraState.y + yStart - y\n            });\n            break;\n          }\n        case 2:\n          {\n            /**\n             * Here is the thinking here:\n             *\n             * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n             *    of the d'n'd and now\n             *\n             * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n             *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n             *    position of this same touch now\n             */\n            var newCameraState = {\n              x: 0.5,\n              y: 0.5,\n              angle: 0,\n              ratio: 1\n            };\n            var _touchesPositions$ = touchesPositions[0],\n              x0 = _touchesPositions$.x,\n              y0 = _touchesPositions$.y;\n            var _touchesPositions$2 = touchesPositions[1],\n              x1 = _touchesPositions$2.x,\n              y1 = _touchesPositions$2.y;\n            var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n            var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n\n            // 1.\n            var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\n            newCameraState.ratio = newRatio;\n            newCameraState.angle = startCameraState.angle + angleDiff;\n\n            // 2.\n            var dimensions = this.getDimensions();\n            var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], {\n              cameraState: startCameraState\n            });\n            var smallestDimension = Math.min(dimensions.width, dimensions.height) - 2 * padding;\n            var dx = smallestDimension / dimensions.width;\n            var dy = smallestDimension / dimensions.height;\n            var ratio = newRatio / smallestDimension;\n\n            // Align with center of the graph:\n            var _x = x0 - smallestDimension / 2 / dx;\n            var _y = y0 - smallestDimension / 2 / dy;\n\n            // Rotate:\n            var _ref = [_x * Math.cos(-newCameraState.angle) - _y * Math.sin(-newCameraState.angle), _y * Math.cos(-newCameraState.angle) + _x * Math.sin(-newCameraState.angle)];\n            _x = _ref[0];\n            _y = _ref[1];\n            newCameraState.x = touchGraphPosition.x - _x * ratio;\n            newCameraState.y = touchGraphPosition.y + _y * ratio;\n            camera.setState(newCameraState);\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n  }]);\n}(Captor);\n\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\n\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\n\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\n\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\n\n/**\n * Sigma.js Labels Heuristics\n * ===========================\n *\n * Miscellaneous heuristics related to label display.\n * @module\n */\n/**\n * Class representing a single candidate for the label grid selection.\n *\n * It also describes a deterministic way to compare two candidates to assess\n * which one is better.\n */\nvar LabelCandidate = /*#__PURE__*/function () {\n  function LabelCandidate(key, size) {\n    _classCallCheck(this, LabelCandidate);\n    this.key = key;\n    this.size = size;\n  }\n  return _createClass(LabelCandidate, null, [{\n    key: \"compare\",\n    value: function compare(first, second) {\n      // First we compare by size\n      if (first.size > second.size) return -1;\n      if (first.size < second.size) return 1;\n\n      // Then since no two nodes can have the same key, we use it to\n      // deterministically tie-break by key\n      if (first.key > second.key) return 1;\n\n      // NOTE: this comparator cannot return 0\n      return -1;\n    }\n  }]);\n}();\n/**\n * Class representing a 2D spatial grid divided into constant-size cells.\n */\nvar LabelGrid = /*#__PURE__*/function () {\n  function LabelGrid() {\n    _classCallCheck(this, LabelGrid);\n    _defineProperty(this, \"width\", 0);\n    _defineProperty(this, \"height\", 0);\n    _defineProperty(this, \"cellSize\", 0);\n    _defineProperty(this, \"columns\", 0);\n    _defineProperty(this, \"rows\", 0);\n    _defineProperty(this, \"cells\", {});\n  }\n  return _createClass(LabelGrid, [{\n    key: \"resizeAndClear\",\n    value: function resizeAndClear(dimensions, cellSize) {\n      this.width = dimensions.width;\n      this.height = dimensions.height;\n      this.cellSize = cellSize;\n      this.columns = Math.ceil(dimensions.width / cellSize);\n      this.rows = Math.ceil(dimensions.height / cellSize);\n      this.cells = {};\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(pos) {\n      var xIndex = Math.floor(pos.x / this.cellSize);\n      var yIndex = Math.floor(pos.y / this.cellSize);\n      return yIndex * this.columns + xIndex;\n    }\n  }, {\n    key: \"add\",\n    value: function add(key, size, pos) {\n      var candidate = new LabelCandidate(key, size);\n      var index = this.getIndex(pos);\n      var cell = this.cells[index];\n      if (!cell) {\n        cell = [];\n        this.cells[index] = cell;\n      }\n      cell.push(candidate);\n    }\n  }, {\n    key: \"organize\",\n    value: function organize() {\n      for (var k in this.cells) {\n        var cell = this.cells[k];\n        cell.sort(LabelCandidate.compare);\n      }\n    }\n  }, {\n    key: \"getLabelsToDisplay\",\n    value: function getLabelsToDisplay(ratio, density) {\n      // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\n      // TODO: adjust threshold lower, but increase cells a bit?\n      // TODO: hunt for geom issue in disguise\n      // TODO: memoize while ratio does not move. method to force recompute\n      var cellArea = this.cellSize * this.cellSize;\n      var scaledCellArea = cellArea / ratio / ratio;\n      var scaledDensity = scaledCellArea * density / cellArea;\n      var labelsToDisplayPerCell = Math.ceil(scaledDensity);\n      var labels = [];\n      for (var k in this.cells) {\n        var cell = this.cells[k];\n        for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\n          labels.push(cell[i].key);\n        }\n      }\n      return labels;\n    }\n  }]);\n}();\n\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n  var graph = params.graph,\n    hoveredNode = params.hoveredNode,\n    highlightedNodes = params.highlightedNodes,\n    displayedNodeLabels = params.displayedNodeLabels;\n  var worthyEdges = [];\n\n  // TODO: the code below can be optimized using #.forEach and batching the code per adj\n\n  // We should display an edge's label if:\n  //   - Any of its extremities is highlighted or hovered\n  //   - Both of its extremities has its label shown\n  graph.forEachEdge(function (edge, _, source, target) {\n    if (source === hoveredNode || target === hoveredNode || highlightedNodes.has(source) || highlightedNodes.has(target) || displayedNodeLabels.has(source) && displayedNodeLabels.has(target)) {\n      worthyEdges.push(edge);\n    }\n  });\n  return worthyEdges;\n}\n\n/**\n * Constants.\n */\nvar X_LABEL_MARGIN = 150;\nvar Y_LABEL_MARGIN = 50;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n  if (!hasOwnProperty.call(data, \"x\") || !hasOwnProperty.call(data, \"y\")) throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\n  if (!data.color) data.color = settings.defaultNodeColor;\n  if (!data.label && data.label !== \"\") data.label = null;\n  if (data.label !== undefined && data.label !== null) data.label = \"\" + data.label;else data.label = null;\n  if (!data.size) data.size = 2;\n  if (!hasOwnProperty.call(data, \"hidden\")) data.hidden = false;\n  if (!hasOwnProperty.call(data, \"highlighted\")) data.highlighted = false;\n  if (!hasOwnProperty.call(data, \"forceLabel\")) data.forceLabel = false;\n  if (!data.type || data.type === \"\") data.type = settings.defaultNodeType;\n  if (!data.zIndex) data.zIndex = 0;\n  return data;\n}\nfunction applyEdgeDefaults(settings, _key, data) {\n  if (!data.color) data.color = settings.defaultEdgeColor;\n  if (!data.label) data.label = \"\";\n  if (!data.size) data.size = 0.5;\n  if (!hasOwnProperty.call(data, \"hidden\")) data.hidden = false;\n  if (!hasOwnProperty.call(data, \"forceLabel\")) data.forceLabel = false;\n  if (!data.type || data.type === \"\") data.type = settings.defaultEdgeType;\n  if (!data.zIndex) data.zIndex = 0;\n  return data;\n}\n\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma$1 = /*#__PURE__*/function (_TypedEventEmitter) {\n  function Sigma(graph, container) {\n    var _this;\n    var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, Sigma);\n    _this = _callSuper(this, Sigma);\n\n    // Resolving settings\n    _defineProperty(_this, \"elements\", {});\n    _defineProperty(_this, \"canvasContexts\", {});\n    _defineProperty(_this, \"webGLContexts\", {});\n    _defineProperty(_this, \"pickingLayers\", new Set());\n    _defineProperty(_this, \"textures\", {});\n    _defineProperty(_this, \"frameBuffers\", {});\n    _defineProperty(_this, \"activeListeners\", {});\n    _defineProperty(_this, \"labelGrid\", new LabelGrid());\n    _defineProperty(_this, \"nodeDataCache\", {});\n    _defineProperty(_this, \"edgeDataCache\", {});\n    // Indices to keep track of the index of the item inside programs\n    _defineProperty(_this, \"nodeProgramIndex\", {});\n    _defineProperty(_this, \"edgeProgramIndex\", {});\n    _defineProperty(_this, \"nodesWithForcedLabels\", new Set());\n    _defineProperty(_this, \"edgesWithForcedLabels\", new Set());\n    _defineProperty(_this, \"nodeExtent\", {\n      x: [0, 1],\n      y: [0, 1]\n    });\n    _defineProperty(_this, \"nodeZExtent\", [Infinity, -Infinity]);\n    _defineProperty(_this, \"edgeZExtent\", [Infinity, -Infinity]);\n    _defineProperty(_this, \"matrix\", identity());\n    _defineProperty(_this, \"invMatrix\", identity());\n    _defineProperty(_this, \"correctionRatio\", 1);\n    _defineProperty(_this, \"customBBox\", null);\n    _defineProperty(_this, \"normalizationFunction\", createNormalizationFunction({\n      x: [0, 1],\n      y: [0, 1]\n    }));\n    // Cache:\n    _defineProperty(_this, \"graphToViewportRatio\", 1);\n    _defineProperty(_this, \"itemIDsIndex\", {});\n    _defineProperty(_this, \"nodeIndices\", {});\n    _defineProperty(_this, \"edgeIndices\", {});\n    // Starting dimensions and pixel ratio\n    _defineProperty(_this, \"width\", 0);\n    _defineProperty(_this, \"height\", 0);\n    _defineProperty(_this, \"pixelRatio\", getPixelRatio());\n    _defineProperty(_this, \"pickingDownSizingRatio\", 2 * _this.pixelRatio);\n    // Graph State\n    _defineProperty(_this, \"displayedNodeLabels\", new Set());\n    _defineProperty(_this, \"displayedEdgeLabels\", new Set());\n    _defineProperty(_this, \"highlightedNodes\", new Set());\n    _defineProperty(_this, \"hoveredNode\", null);\n    _defineProperty(_this, \"hoveredEdge\", null);\n    // Internal states\n    _defineProperty(_this, \"renderFrame\", null);\n    _defineProperty(_this, \"renderHighlightedNodesFrame\", null);\n    _defineProperty(_this, \"needToProcess\", false);\n    _defineProperty(_this, \"checkEdgesEventsFrame\", null);\n    // Programs\n    _defineProperty(_this, \"nodePrograms\", {});\n    _defineProperty(_this, \"nodeHoverPrograms\", {});\n    _defineProperty(_this, \"edgePrograms\", {});\n    _this.settings = resolveSettings(settings);\n\n    // Validating\n    validateSettings(_this.settings);\n    validateGraph(graph);\n    if (!(container instanceof HTMLElement)) throw new Error(\"Sigma: container should be an html element.\");\n\n    // Properties\n    _this.graph = graph;\n    _this.container = container;\n\n    // Initializing contexts\n    _this.createWebGLContext(\"edges\", {\n      picking: settings.enableEdgeEvents\n    });\n    _this.createCanvasContext(\"edgeLabels\");\n    _this.createWebGLContext(\"nodes\", {\n      picking: true\n    });\n    _this.createCanvasContext(\"labels\");\n    _this.createCanvasContext(\"hovers\");\n    _this.createWebGLContext(\"hoverNodes\");\n    _this.createCanvasContext(\"mouse\", {\n      style: {\n        touchAction: \"none\",\n        userSelect: \"none\"\n      }\n    });\n\n    // Initial resize\n    _this.resize();\n\n    // Loading programs\n    for (var type in _this.settings.nodeProgramClasses) {\n      _this.registerNodeProgram(type, _this.settings.nodeProgramClasses[type], _this.settings.nodeHoverProgramClasses[type]);\n    }\n    for (var _type in _this.settings.edgeProgramClasses) {\n      _this.registerEdgeProgram(_type, _this.settings.edgeProgramClasses[_type]);\n    }\n\n    // Initializing the camera\n    _this.camera = new Camera();\n\n    // Binding camera events\n    _this.bindCameraHandlers();\n\n    // Initializing captors\n    _this.mouseCaptor = new MouseCaptor(_this.elements.mouse, _this);\n    _this.mouseCaptor.setSettings(_this.settings);\n    _this.touchCaptor = new TouchCaptor(_this.elements.mouse, _this);\n    _this.touchCaptor.setSettings(_this.settings);\n\n    // Binding event handlers\n    _this.bindEventHandlers();\n\n    // Binding graph handlers\n    _this.bindGraphHandlers();\n\n    // Trigger eventual settings-related things\n    _this.handleSettingsUpdate();\n\n    // Processing data for the first time & render\n    _this.refresh();\n    return _this;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Internal methods.\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Internal function used to register a node program\n   *\n   * @param  {string}           key              - The program's key, matching the related nodes \"type\" values.\n   * @param  {NodeProgramType}  NodeProgramClass - A nodes program class.\n   * @param  {NodeProgramType?} NodeHoverProgram - A nodes program class to render hovered nodes (optional).\n   * @return {Sigma}\n   */\n  _inherits(Sigma, _TypedEventEmitter);\n  return _createClass(Sigma, [{\n    key: \"registerNodeProgram\",\n    value: function registerNodeProgram(key, NodeProgramClass, NodeHoverProgram) {\n      if (this.nodePrograms[key]) this.nodePrograms[key].kill();\n      if (this.nodeHoverPrograms[key]) this.nodeHoverPrograms[key].kill();\n      this.nodePrograms[key] = new NodeProgramClass(this.webGLContexts.nodes, this.frameBuffers.nodes, this);\n      this.nodeHoverPrograms[key] = new (NodeHoverProgram || NodeProgramClass)(this.webGLContexts.hoverNodes, null, this);\n      return this;\n    }\n\n    /**\n     * Internal function used to register an edge program\n     *\n     * @param  {string}          key              - The program's key, matching the related edges \"type\" values.\n     * @param  {EdgeProgramType} EdgeProgramClass - An edges program class.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"registerEdgeProgram\",\n    value: function registerEdgeProgram(key, EdgeProgramClass) {\n      if (this.edgePrograms[key]) this.edgePrograms[key].kill();\n      this.edgePrograms[key] = new EdgeProgramClass(this.webGLContexts.edges, this.frameBuffers.edges, this);\n      return this;\n    }\n\n    /**\n     * Internal function used to unregister a node program\n     *\n     * @param  {string} key - The program's key, matching the related nodes \"type\" values.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"unregisterNodeProgram\",\n    value: function unregisterNodeProgram(key) {\n      if (this.nodePrograms[key]) {\n        var _this$nodePrograms = this.nodePrograms,\n          program = _this$nodePrograms[key],\n          programs = _objectWithoutProperties(_this$nodePrograms, [key].map(_toPropertyKey));\n        program.kill();\n        this.nodePrograms = programs;\n      }\n      if (this.nodeHoverPrograms[key]) {\n        var _this$nodeHoverProgra = this.nodeHoverPrograms,\n          _program = _this$nodeHoverProgra[key],\n          _programs = _objectWithoutProperties(_this$nodeHoverProgra, [key].map(_toPropertyKey));\n        _program.kill();\n        this.nodePrograms = _programs;\n      }\n      return this;\n    }\n\n    /**\n     * Internal function used to unregister an edge program\n     *\n     * @param  {string} key - The program's key, matching the related edges \"type\" values.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"unregisterEdgeProgram\",\n    value: function unregisterEdgeProgram(key) {\n      if (this.edgePrograms[key]) {\n        var _this$edgePrograms = this.edgePrograms,\n          program = _this$edgePrograms[key],\n          programs = _objectWithoutProperties(_this$edgePrograms, [key].map(_toPropertyKey));\n        program.kill();\n        this.edgePrograms = programs;\n      }\n      return this;\n    }\n\n    /**\n     * Method (re)binding WebGL texture (for picking).\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"resetWebGLTexture\",\n    value: function resetWebGLTexture(id) {\n      var gl = this.webGLContexts[id];\n      var frameBuffer = this.frameBuffers[id];\n      var currentTexture = this.textures[id];\n      if (currentTexture) gl.deleteTexture(currentTexture);\n      var pickingTexture = gl.createTexture();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.bindTexture(gl.TEXTURE_2D, pickingTexture);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, pickingTexture, 0);\n      this.textures[id] = pickingTexture;\n      return this;\n    }\n\n    /**\n     * Method binding camera handlers.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"bindCameraHandlers\",\n    value: function bindCameraHandlers() {\n      var _this2 = this;\n      this.activeListeners.camera = function () {\n        _this2.scheduleRender();\n      };\n      this.camera.on(\"updated\", this.activeListeners.camera);\n      return this;\n    }\n\n    /**\n     * Method unbinding camera handlers.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"unbindCameraHandlers\",\n    value: function unbindCameraHandlers() {\n      this.camera.removeListener(\"updated\", this.activeListeners.camera);\n      return this;\n    }\n\n    /**\n     * Method that returns the closest node to a given position.\n     */\n  }, {\n    key: \"getNodeAtPosition\",\n    value: function getNodeAtPosition(position) {\n      var x = position.x,\n        y = position.y;\n      var color = getPixelColor(this.webGLContexts.nodes, this.frameBuffers.nodes, x, y, this.pixelRatio, this.pickingDownSizingRatio);\n      var index = colorToIndex.apply(void 0, _toConsumableArray(color));\n      var itemAt = this.itemIDsIndex[index];\n      return itemAt && itemAt.type === \"node\" ? itemAt.id : null;\n    }\n\n    /**\n     * Method binding event handlers.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"bindEventHandlers\",\n    value: function bindEventHandlers() {\n      var _this3 = this;\n      // Handling window resize\n      this.activeListeners.handleResize = function () {\n        // need to call a refresh to rebuild the labelgrid\n        _this3.scheduleRefresh();\n      };\n      window.addEventListener(\"resize\", this.activeListeners.handleResize);\n\n      // Handling mouse move\n      this.activeListeners.handleMove = function (e) {\n        var event = cleanMouseCoords(e);\n        var baseEvent = {\n          event: event,\n          preventSigmaDefault: function preventSigmaDefault() {\n            event.preventSigmaDefault();\n          }\n        };\n        var nodeToHover = _this3.getNodeAtPosition(event);\n        if (nodeToHover && _this3.hoveredNode !== nodeToHover && !_this3.nodeDataCache[nodeToHover].hidden) {\n          // Handling passing from one node to the other directly\n          if (_this3.hoveredNode) _this3.emit(\"leaveNode\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n            node: _this3.hoveredNode\n          }));\n          _this3.hoveredNode = nodeToHover;\n          _this3.emit(\"enterNode\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n            node: nodeToHover\n          }));\n          _this3.scheduleHighlightedNodesRender();\n          return;\n        }\n\n        // Checking if the hovered node is still hovered\n        if (_this3.hoveredNode) {\n          if (_this3.getNodeAtPosition(event) !== _this3.hoveredNode) {\n            var node = _this3.hoveredNode;\n            _this3.hoveredNode = null;\n            _this3.emit(\"leaveNode\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n              node: node\n            }));\n            _this3.scheduleHighlightedNodesRender();\n            return;\n          }\n        }\n        if (_this3.settings.enableEdgeEvents) {\n          var edgeToHover = _this3.hoveredNode ? null : _this3.getEdgeAtPoint(baseEvent.event.x, baseEvent.event.y);\n          if (edgeToHover !== _this3.hoveredEdge) {\n            if (_this3.hoveredEdge) _this3.emit(\"leaveEdge\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n              edge: _this3.hoveredEdge\n            }));\n            if (edgeToHover) _this3.emit(\"enterEdge\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n              edge: edgeToHover\n            }));\n            _this3.hoveredEdge = edgeToHover;\n          }\n        }\n      };\n\n      // Handling mouse move over body (only to dispatch the proper event):\n      this.activeListeners.handleMoveBody = function (e) {\n        var event = cleanMouseCoords(e);\n        _this3.emit(\"moveBody\", {\n          event: event,\n          preventSigmaDefault: function preventSigmaDefault() {\n            event.preventSigmaDefault();\n          }\n        });\n      };\n\n      // Handling mouse leave stage:\n      this.activeListeners.handleLeave = function (e) {\n        var event = cleanMouseCoords(e);\n        var baseEvent = {\n          event: event,\n          preventSigmaDefault: function preventSigmaDefault() {\n            event.preventSigmaDefault();\n          }\n        };\n        if (_this3.hoveredNode) {\n          _this3.emit(\"leaveNode\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n            node: _this3.hoveredNode\n          }));\n          _this3.scheduleHighlightedNodesRender();\n        }\n        if (_this3.settings.enableEdgeEvents && _this3.hoveredEdge) {\n          _this3.emit(\"leaveEdge\", _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n            edge: _this3.hoveredEdge\n          }));\n          _this3.scheduleHighlightedNodesRender();\n        }\n        _this3.emit(\"leaveStage\", _objectSpread2({}, baseEvent));\n      };\n\n      // Handling mouse enter stage:\n      this.activeListeners.handleEnter = function (e) {\n        var event = cleanMouseCoords(e);\n        var baseEvent = {\n          event: event,\n          preventSigmaDefault: function preventSigmaDefault() {\n            event.preventSigmaDefault();\n          }\n        };\n        _this3.emit(\"enterStage\", _objectSpread2({}, baseEvent));\n      };\n\n      // Handling click\n      var createInteractionListener = function createInteractionListener(eventType) {\n        return function (e) {\n          var event = cleanMouseCoords(e);\n          var baseEvent = {\n            event: event,\n            preventSigmaDefault: function preventSigmaDefault() {\n              event.preventSigmaDefault();\n            }\n          };\n          var nodeAtPosition = _this3.getNodeAtPosition(event);\n          if (nodeAtPosition) return _this3.emit(\"\".concat(eventType, \"Node\"), _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n            node: nodeAtPosition\n          }));\n          if (_this3.settings.enableEdgeEvents) {\n            var edge = _this3.getEdgeAtPoint(event.x, event.y);\n            if (edge) return _this3.emit(\"\".concat(eventType, \"Edge\"), _objectSpread2(_objectSpread2({}, baseEvent), {}, {\n              edge: edge\n            }));\n          }\n          return _this3.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\n        };\n      };\n      this.activeListeners.handleClick = createInteractionListener(\"click\");\n      this.activeListeners.handleRightClick = createInteractionListener(\"rightClick\");\n      this.activeListeners.handleDoubleClick = createInteractionListener(\"doubleClick\");\n      this.activeListeners.handleWheel = createInteractionListener(\"wheel\");\n      this.activeListeners.handleDown = createInteractionListener(\"down\");\n      this.activeListeners.handleUp = createInteractionListener(\"up\");\n      this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n      this.mouseCaptor.on(\"mousemovebody\", this.activeListeners.handleMoveBody);\n      this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n      this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n      this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\n      this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\n      this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n      this.mouseCaptor.on(\"mouseup\", this.activeListeners.handleUp);\n      this.mouseCaptor.on(\"mouseleave\", this.activeListeners.handleLeave);\n      this.mouseCaptor.on(\"mouseenter\", this.activeListeners.handleEnter);\n      this.touchCaptor.on(\"touchdown\", this.activeListeners.handleDown);\n      this.touchCaptor.on(\"touchdown\", this.activeListeners.handleMove);\n      this.touchCaptor.on(\"touchup\", this.activeListeners.handleUp);\n      this.touchCaptor.on(\"touchmove\", this.activeListeners.handleMove);\n      this.touchCaptor.on(\"tap\", this.activeListeners.handleClick);\n      this.touchCaptor.on(\"doubletap\", this.activeListeners.handleDoubleClick);\n      this.touchCaptor.on(\"touchmove\", this.activeListeners.handleMoveBody);\n      return this;\n    }\n\n    /**\n     * Method binding graph handlers\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"bindGraphHandlers\",\n    value: function bindGraphHandlers() {\n      var _this4 = this;\n      var graph = this.graph;\n      var LAYOUT_IMPACTING_FIELDS = new Set([\"x\", \"y\", \"zIndex\", \"type\"]);\n      this.activeListeners.eachNodeAttributesUpdatedGraphUpdate = function (e) {\n        var _e$hints;\n        var updatedFields = (_e$hints = e.hints) === null || _e$hints === void 0 ? void 0 : _e$hints.attributes;\n        // we process all nodes\n        _this4.graph.forEachNode(function (node) {\n          return _this4.updateNode(node);\n        });\n\n        // if coord, type or zIndex have changed, we need to schedule a render\n        // (zIndex for the programIndex)\n        var layoutChanged = !updatedFields || updatedFields.some(function (f) {\n          return LAYOUT_IMPACTING_FIELDS.has(f);\n        });\n        _this4.refresh({\n          partialGraph: {\n            nodes: graph.nodes()\n          },\n          skipIndexation: !layoutChanged,\n          schedule: true\n        });\n      };\n      this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate = function (e) {\n        var _e$hints2;\n        var updatedFields = (_e$hints2 = e.hints) === null || _e$hints2 === void 0 ? void 0 : _e$hints2.attributes;\n        // we process all edges\n        _this4.graph.forEachEdge(function (edge) {\n          return _this4.updateEdge(edge);\n        });\n        var layoutChanged = updatedFields && [\"zIndex\", \"type\"].some(function (f) {\n          return updatedFields === null || updatedFields === void 0 ? void 0 : updatedFields.includes(f);\n        });\n        _this4.refresh({\n          partialGraph: {\n            edges: graph.edges()\n          },\n          skipIndexation: !layoutChanged,\n          schedule: true\n        });\n      };\n\n      // On add node, we add the node in indices and then call for a render\n      this.activeListeners.addNodeGraphUpdate = function (payload) {\n        var node = payload.key;\n        // we process the node\n        _this4.addNode(node);\n        // schedule a render for the node\n        _this4.refresh({\n          partialGraph: {\n            nodes: [node]\n          },\n          skipIndexation: false,\n          schedule: true\n        });\n      };\n\n      // On update node, we update indices and then call for a render\n      this.activeListeners.updateNodeGraphUpdate = function (payload) {\n        var node = payload.key;\n        // schedule a render for the node\n        _this4.refresh({\n          partialGraph: {\n            nodes: [node]\n          },\n          skipIndexation: false,\n          schedule: true\n        });\n      };\n\n      // On drop node, we remove the node from indices and then call for a refresh\n      this.activeListeners.dropNodeGraphUpdate = function (payload) {\n        var node = payload.key;\n        // we process the node\n        _this4.removeNode(node);\n        // schedule a render for everything\n        _this4.refresh({\n          schedule: true\n        });\n      };\n\n      // On add edge, we remove the edge from indices and then call for a refresh\n      this.activeListeners.addEdgeGraphUpdate = function (payload) {\n        var edge = payload.key;\n        // we process the edge\n        _this4.addEdge(edge);\n        // schedule a render for the edge\n        _this4.refresh({\n          partialGraph: {\n            edges: [edge]\n          },\n          schedule: true\n        });\n      };\n\n      // On update edge, we update indices and then call for a refresh\n      this.activeListeners.updateEdgeGraphUpdate = function (payload) {\n        var edge = payload.key;\n        // schedule a repaint for the edge\n        _this4.refresh({\n          partialGraph: {\n            edges: [edge]\n          },\n          skipIndexation: false,\n          schedule: true\n        });\n      };\n\n      // On drop edge, we remove the edge from indices and then call for a refresh\n      this.activeListeners.dropEdgeGraphUpdate = function (payload) {\n        var edge = payload.key;\n        // we process the edge\n        _this4.removeEdge(edge);\n        // schedule a render for all edges\n        _this4.refresh({\n          schedule: true\n        });\n      };\n\n      // On clear edges, we clear the edge indices and then call for a refresh\n      this.activeListeners.clearEdgesGraphUpdate = function () {\n        // we clear the edge data structures\n        _this4.clearEdgeState();\n        _this4.clearEdgeIndices();\n        // schedule a render for all edges\n        _this4.refresh({\n          schedule: true\n        });\n      };\n\n      // On graph clear, we clear indices and then call for a refresh\n      this.activeListeners.clearGraphUpdate = function () {\n        // clear graph state\n        _this4.clearEdgeState();\n        _this4.clearNodeState();\n\n        // clear graph indices\n        _this4.clearEdgeIndices();\n        _this4.clearNodeIndices();\n\n        // schedule a render for all\n        _this4.refresh({\n          schedule: true\n        });\n      };\n      graph.on(\"nodeAdded\", this.activeListeners.addNodeGraphUpdate);\n      graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n      graph.on(\"nodeAttributesUpdated\", this.activeListeners.updateNodeGraphUpdate);\n      graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.eachNodeAttributesUpdatedGraphUpdate);\n      graph.on(\"edgeAdded\", this.activeListeners.addEdgeGraphUpdate);\n      graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n      graph.on(\"edgeAttributesUpdated\", this.activeListeners.updateEdgeGraphUpdate);\n      graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate);\n      graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n      graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\n      return this;\n    }\n\n    /**\n     * Method used to unbind handlers from the graph.\n     *\n     * @return {undefined}\n     */\n  }, {\n    key: \"unbindGraphHandlers\",\n    value: function unbindGraphHandlers() {\n      var graph = this.graph;\n      graph.removeListener(\"nodeAdded\", this.activeListeners.addNodeGraphUpdate);\n      graph.removeListener(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n      graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.updateNodeGraphUpdate);\n      graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.eachNodeAttributesUpdatedGraphUpdate);\n      graph.removeListener(\"edgeAdded\", this.activeListeners.addEdgeGraphUpdate);\n      graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n      graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.updateEdgeGraphUpdate);\n      graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.eachEdgeAttributesUpdatedGraphUpdate);\n      graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n      graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\n    }\n\n    /**\n     * Method looking for an edge colliding with a given point at (x, y). Returns\n     * the key of the edge if any, or null else.\n     */\n  }, {\n    key: \"getEdgeAtPoint\",\n    value: function getEdgeAtPoint(x, y) {\n      var color = getPixelColor(this.webGLContexts.edges, this.frameBuffers.edges, x, y, this.pixelRatio, this.pickingDownSizingRatio);\n      var index = colorToIndex.apply(void 0, _toConsumableArray(color));\n      var itemAt = this.itemIDsIndex[index];\n      return itemAt && itemAt.type === \"edge\" ? itemAt.id : null;\n    }\n\n    /**\n     * Method used to process the whole graph's data.\n     *  - extent\n     *  - normalizationFunction\n     *  - compute node's coordinate\n     *  - labelgrid\n     *  - program data allocation\n     * @return {Sigma}\n     */\n  }, {\n    key: \"process\",\n    value: function process() {\n      var _this5 = this;\n      this.emit(\"beforeProcess\");\n      var graph = this.graph;\n      var settings = this.settings;\n      var dimensions = this.getDimensions();\n\n      //\n      // NODES\n      //\n      this.nodeExtent = graphExtent(this.graph);\n      if (!this.settings.autoRescale) {\n        var width = dimensions.width,\n          height = dimensions.height;\n        var _this$nodeExtent = this.nodeExtent,\n          x = _this$nodeExtent.x,\n          y = _this$nodeExtent.y;\n        this.nodeExtent = {\n          x: [(x[0] + x[1]) / 2 - width / 2, (x[0] + x[1]) / 2 + width / 2],\n          y: [(y[0] + y[1]) / 2 - height / 2, (y[0] + y[1]) / 2 + height / 2]\n        };\n      }\n      this.normalizationFunction = createNormalizationFunction(this.customBBox || this.nodeExtent);\n\n      // NOTE: it is important to compute this matrix after computing the node's extent\n      // because #.getGraphDimensions relies on it\n      var nullCamera = new Camera();\n      var nullCameraMatrix = matrixFromCamera(nullCamera.getState(), dimensions, this.getGraphDimensions(), this.getStagePadding());\n      // Resetting the label grid\n      // TODO: it's probably better to do this explicitly or on resizes for layout and anims\n      this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\n      var nodesPerPrograms = {};\n      var nodeIndices = {};\n      var edgeIndices = {};\n      var itemIDsIndex = {};\n      var incrID = 1;\n      var nodes = graph.nodes();\n\n      // Do some indexation on the whole graph\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var node = nodes[i];\n        var data = this.nodeDataCache[node];\n\n        // Get initial coordinates\n        var attrs = graph.getNodeAttributes(node);\n        data.x = attrs.x;\n        data.y = attrs.y;\n        this.normalizationFunction.applyTo(data);\n\n        // labelgrid\n        if (typeof data.label === \"string\" && !data.hidden) this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, {\n          matrix: nullCameraMatrix\n        }));\n\n        // update count per program\n        nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\n      }\n      this.labelGrid.organize();\n\n      // Allocate memory to programs\n      for (var type in this.nodePrograms) {\n        if (!hasOwnProperty.call(this.nodePrograms, type)) {\n          throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\n        }\n        this.nodePrograms[type].reallocate(nodesPerPrograms[type] || 0);\n        // We reset that count here, so that we can reuse it while calling the Program#process methods:\n        nodesPerPrograms[type] = 0;\n      }\n\n      // Order nodes by zIndex before to add them to program\n      if (this.settings.zIndex && this.nodeZExtent[0] !== this.nodeZExtent[1]) nodes = zIndexOrdering(this.nodeZExtent, function (node) {\n        return _this5.nodeDataCache[node].zIndex;\n      }, nodes);\n\n      // Add data to programs\n      for (var _i = 0, _l = nodes.length; _i < _l; _i++) {\n        var _node = nodes[_i];\n        nodeIndices[_node] = incrID;\n        itemIDsIndex[nodeIndices[_node]] = {\n          type: \"node\",\n          id: _node\n        };\n        incrID++;\n        var _data = this.nodeDataCache[_node];\n        this.addNodeToProgram(_node, nodeIndices[_node], nodesPerPrograms[_data.type]++);\n      }\n\n      //\n      // EDGES\n      //\n\n      var edgesPerPrograms = {};\n      var edges = graph.edges();\n\n      // Allocate memory to programs\n      for (var _i2 = 0, _l2 = edges.length; _i2 < _l2; _i2++) {\n        var edge = edges[_i2];\n        var _data2 = this.edgeDataCache[edge];\n        edgesPerPrograms[_data2.type] = (edgesPerPrograms[_data2.type] || 0) + 1;\n      }\n\n      // Order edges by zIndex before to add them to program\n      if (this.settings.zIndex && this.edgeZExtent[0] !== this.edgeZExtent[1]) edges = zIndexOrdering(this.edgeZExtent, function (edge) {\n        return _this5.edgeDataCache[edge].zIndex;\n      }, edges);\n      for (var _type2 in this.edgePrograms) {\n        if (!hasOwnProperty.call(this.edgePrograms, _type2)) {\n          throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(_type2, \"\\\"!\"));\n        }\n        this.edgePrograms[_type2].reallocate(edgesPerPrograms[_type2] || 0);\n        // We reset that count here, so that we can reuse it while calling the Program#process methods:\n        edgesPerPrograms[_type2] = 0;\n      }\n\n      // Add data to programs\n      for (var _i3 = 0, _l3 = edges.length; _i3 < _l3; _i3++) {\n        var _edge = edges[_i3];\n        edgeIndices[_edge] = incrID;\n        itemIDsIndex[edgeIndices[_edge]] = {\n          type: \"edge\",\n          id: _edge\n        };\n        incrID++;\n        var _data3 = this.edgeDataCache[_edge];\n        this.addEdgeToProgram(_edge, edgeIndices[_edge], edgesPerPrograms[_data3.type]++);\n      }\n      this.itemIDsIndex = itemIDsIndex;\n      this.nodeIndices = nodeIndices;\n      this.edgeIndices = edgeIndices;\n      this.emit(\"afterProcess\");\n      return this;\n    }\n\n    /**\n     * Method that backports potential settings updates where it's needed.\n     * @private\n     */\n  }, {\n    key: \"handleSettingsUpdate\",\n    value: function handleSettingsUpdate(oldSettings) {\n      var _this6 = this;\n      var settings = this.settings;\n      this.camera.minRatio = settings.minCameraRatio;\n      this.camera.maxRatio = settings.maxCameraRatio;\n      this.camera.enabledZooming = settings.enableCameraZooming;\n      this.camera.enabledPanning = settings.enableCameraPanning;\n      this.camera.enabledRotation = settings.enableCameraRotation;\n      if (settings.cameraPanBoundaries) {\n        this.camera.clean = function (state) {\n          return _this6.cleanCameraState(state, settings.cameraPanBoundaries && _typeof(settings.cameraPanBoundaries) === \"object\" ? settings.cameraPanBoundaries : {});\n        };\n      } else {\n        this.camera.clean = null;\n      }\n      this.camera.setState(this.camera.validateState(this.camera.getState()));\n      if (oldSettings) {\n        // Check edge programs:\n        if (oldSettings.edgeProgramClasses !== settings.edgeProgramClasses) {\n          for (var type in settings.edgeProgramClasses) {\n            if (settings.edgeProgramClasses[type] !== oldSettings.edgeProgramClasses[type]) {\n              this.registerEdgeProgram(type, settings.edgeProgramClasses[type]);\n            }\n          }\n          for (var _type3 in oldSettings.edgeProgramClasses) {\n            if (!settings.edgeProgramClasses[_type3]) this.unregisterEdgeProgram(_type3);\n          }\n        }\n\n        // Check node programs:\n        if (oldSettings.nodeProgramClasses !== settings.nodeProgramClasses || oldSettings.nodeHoverProgramClasses !== settings.nodeHoverProgramClasses) {\n          for (var _type4 in settings.nodeProgramClasses) {\n            if (settings.nodeProgramClasses[_type4] !== oldSettings.nodeProgramClasses[_type4] || settings.nodeHoverProgramClasses[_type4] !== oldSettings.nodeHoverProgramClasses[_type4]) {\n              this.registerNodeProgram(_type4, settings.nodeProgramClasses[_type4], settings.nodeHoverProgramClasses[_type4]);\n            }\n          }\n          for (var _type5 in oldSettings.nodeProgramClasses) {\n            if (!settings.nodeProgramClasses[_type5]) this.unregisterNodeProgram(_type5);\n          }\n        }\n      }\n\n      // Update captors settings:\n      this.mouseCaptor.setSettings(this.settings);\n      this.touchCaptor.setSettings(this.settings);\n      return this;\n    }\n  }, {\n    key: \"cleanCameraState\",\n    value: function cleanCameraState(state) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$tolerance = _ref.tolerance,\n        tolerance = _ref$tolerance === void 0 ? 0 : _ref$tolerance,\n        boundaries = _ref.boundaries;\n      var newState = _objectSpread2({}, state);\n\n      // Extract necessary properties\n      var _ref2 = boundaries || this.nodeExtent,\n        _ref2$x = _slicedToArray(_ref2.x, 2),\n        xMinGraph = _ref2$x[0],\n        xMaxGraph = _ref2$x[1],\n        _ref2$y = _slicedToArray(_ref2.y, 2),\n        yMinGraph = _ref2$y[0],\n        yMaxGraph = _ref2$y[1];\n\n      // Transform the four corners of the graph rectangle using the provided camera state\n      var corners = [this.graphToViewport({\n        x: xMinGraph,\n        y: yMinGraph\n      }, {\n        cameraState: state\n      }), this.graphToViewport({\n        x: xMaxGraph,\n        y: yMinGraph\n      }, {\n        cameraState: state\n      }), this.graphToViewport({\n        x: xMinGraph,\n        y: yMaxGraph\n      }, {\n        cameraState: state\n      }), this.graphToViewport({\n        x: xMaxGraph,\n        y: yMaxGraph\n      }, {\n        cameraState: state\n      })];\n\n      // Look for new extents, based on these four corners\n      var xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity;\n      corners.forEach(function (_ref3) {\n        var x = _ref3.x,\n          y = _ref3.y;\n        xMin = Math.min(xMin, x);\n        xMax = Math.max(xMax, x);\n        yMin = Math.min(yMin, y);\n        yMax = Math.max(yMax, y);\n      });\n\n      // For each dimension, constraint the smaller element (camera or graph) to fit in the larger one:\n      var graphWidth = xMax - xMin;\n      var graphHeight = yMax - yMin;\n      var _this$getDimensions = this.getDimensions(),\n        width = _this$getDimensions.width,\n        height = _this$getDimensions.height;\n      var dx = 0;\n      var dy = 0;\n      if (graphWidth >= width) {\n        if (xMax < width - tolerance) dx = xMax - (width - tolerance);else if (xMin > tolerance) dx = xMin - tolerance;\n      } else {\n        if (xMax > width + tolerance) dx = xMax - (width + tolerance);else if (xMin < -tolerance) dx = xMin + tolerance;\n      }\n      if (graphHeight >= height) {\n        if (yMax < height - tolerance) dy = yMax - (height - tolerance);else if (yMin > tolerance) dy = yMin - tolerance;\n      } else {\n        if (yMax > height + tolerance) dy = yMax - (height + tolerance);else if (yMin < -tolerance) dy = yMin + tolerance;\n      }\n      if (dx || dy) {\n        // Transform [dx, dy] from viewport to graph (using two different point to transform that vector):\n        var origin = this.viewportToFramedGraph({\n          x: 0,\n          y: 0\n        }, {\n          cameraState: state\n        });\n        var delta = this.viewportToFramedGraph({\n          x: dx,\n          y: dy\n        }, {\n          cameraState: state\n        });\n        dx = delta.x - origin.x;\n        dy = delta.y - origin.y;\n        newState.x += dx;\n        newState.y += dy;\n      }\n      return newState;\n    }\n\n    /**\n     * Method used to render labels.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"renderLabels\",\n    value: function renderLabels() {\n      if (!this.settings.renderLabels) return this;\n      var cameraState = this.camera.getState();\n\n      // Selecting labels to draw\n      var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);\n      extend(labelsToDisplay, this.nodesWithForcedLabels);\n      this.displayedNodeLabels = new Set();\n\n      // Drawing labels\n      var context = this.canvasContexts.labels;\n      for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n        var node = labelsToDisplay[i];\n        var data = this.nodeDataCache[node];\n\n        // If the node was already drawn (like if it is eligible AND has\n        // `forceLabel`), we don't want to draw it again\n        // NOTE: we can do better probably\n        if (this.displayedNodeLabels.has(node)) continue;\n\n        // If the node is hidden, we don't need to display its label obviously\n        if (data.hidden) continue;\n        var _this$framedGraphToVi = this.framedGraphToViewport(data),\n          x = _this$framedGraphToVi.x,\n          y = _this$framedGraphToVi.y;\n\n        // NOTE: we can cache the labels we need to render until the camera's ratio changes\n        var size = this.scaleSize(data.size);\n\n        // Is node big enough?\n        if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold) continue;\n\n        // Is node actually on screen (with some margin)\n        // NOTE: we used to rely on the quadtree for this, but the coordinates\n        // conversion make it unreliable and at that point we already converted\n        // to viewport coordinates and since the label grid already culls the\n        // number of potential labels to display this looks like a good\n        // performance compromise.\n        // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not\n        // considering cells obviously outside of the range of the current\n        // view rectangle.\n        if (x < -X_LABEL_MARGIN || x > this.width + X_LABEL_MARGIN || y < -Y_LABEL_MARGIN || y > this.height + Y_LABEL_MARGIN) continue;\n\n        // Because displayed edge labels depend directly on actually rendered node\n        // labels, we need to only add to this.displayedNodeLabels nodes whose label\n        // is rendered.\n        // This makes this.displayedNodeLabels depend on viewport, which might become\n        // an issue once we start memoizing getLabelsToDisplay.\n        this.displayedNodeLabels.add(node);\n        var defaultDrawNodeLabel = this.settings.defaultDrawNodeLabel;\n        var nodeProgram = this.nodePrograms[data.type];\n        var drawLabel = (nodeProgram === null || nodeProgram === void 0 ? void 0 : nodeProgram.drawLabel) || defaultDrawNodeLabel;\n        drawLabel(context, _objectSpread2(_objectSpread2({\n          key: node\n        }, data), {}, {\n          size: size,\n          x: x,\n          y: y\n        }), this.settings);\n      }\n      return this;\n    }\n\n    /**\n     * Method used to render edge labels, based on which node labels were\n     * rendered.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"renderEdgeLabels\",\n    value: function renderEdgeLabels() {\n      if (!this.settings.renderEdgeLabels) return this;\n      var context = this.canvasContexts.edgeLabels;\n\n      // Clearing\n      context.clearRect(0, 0, this.width, this.height);\n      var edgeLabelsToDisplay = edgeLabelsToDisplayFromNodes({\n        graph: this.graph,\n        hoveredNode: this.hoveredNode,\n        displayedNodeLabels: this.displayedNodeLabels,\n        highlightedNodes: this.highlightedNodes\n      });\n      extend(edgeLabelsToDisplay, this.edgesWithForcedLabels);\n      var displayedLabels = new Set();\n      for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n        var edge = edgeLabelsToDisplay[i],\n          extremities = this.graph.extremities(edge),\n          sourceData = this.nodeDataCache[extremities[0]],\n          targetData = this.nodeDataCache[extremities[1]],\n          edgeData = this.edgeDataCache[edge];\n\n        // If the edge was already drawn (like if it is eligible AND has\n        // `forceLabel`), we don't want to draw it again\n        if (displayedLabels.has(edge)) continue;\n\n        // If the edge is hidden we don't need to display its label\n        // NOTE: the test on sourceData & targetData is probably paranoid at this point?\n        if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\n          continue;\n        }\n        var defaultDrawEdgeLabel = this.settings.defaultDrawEdgeLabel;\n        var edgeProgram = this.edgePrograms[edgeData.type];\n        var drawLabel = (edgeProgram === null || edgeProgram === void 0 ? void 0 : edgeProgram.drawLabel) || defaultDrawEdgeLabel;\n        drawLabel(context, _objectSpread2(_objectSpread2({\n          key: edge\n        }, edgeData), {}, {\n          size: this.scaleSize(edgeData.size)\n        }), _objectSpread2(_objectSpread2(_objectSpread2({\n          key: extremities[0]\n        }, sourceData), this.framedGraphToViewport(sourceData)), {}, {\n          size: this.scaleSize(sourceData.size)\n        }), _objectSpread2(_objectSpread2(_objectSpread2({\n          key: extremities[1]\n        }, targetData), this.framedGraphToViewport(targetData)), {}, {\n          size: this.scaleSize(targetData.size)\n        }), this.settings);\n        displayedLabels.add(edge);\n      }\n      this.displayedEdgeLabels = displayedLabels;\n      return this;\n    }\n\n    /**\n     * Method used to render the highlighted nodes.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"renderHighlightedNodes\",\n    value: function renderHighlightedNodes() {\n      var _this7 = this;\n      var context = this.canvasContexts.hovers;\n\n      // Clearing\n      context.clearRect(0, 0, this.width, this.height);\n\n      // Rendering\n      var render = function render(node) {\n        var data = _this7.nodeDataCache[node];\n        var _this7$framedGraphToV = _this7.framedGraphToViewport(data),\n          x = _this7$framedGraphToV.x,\n          y = _this7$framedGraphToV.y;\n        var size = _this7.scaleSize(data.size);\n        var defaultDrawNodeHover = _this7.settings.defaultDrawNodeHover;\n        var nodeProgram = _this7.nodePrograms[data.type];\n        var drawHover = (nodeProgram === null || nodeProgram === void 0 ? void 0 : nodeProgram.drawHover) || defaultDrawNodeHover;\n        drawHover(context, _objectSpread2(_objectSpread2({\n          key: node\n        }, data), {}, {\n          size: size,\n          x: x,\n          y: y\n        }), _this7.settings);\n      };\n      var nodesToRender = [];\n      if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\n        nodesToRender.push(this.hoveredNode);\n      }\n      this.highlightedNodes.forEach(function (node) {\n        // The hovered node has already been highlighted\n        if (node !== _this7.hoveredNode) nodesToRender.push(node);\n      });\n\n      // Draw labels:\n      nodesToRender.forEach(function (node) {\n        return render(node);\n      });\n\n      // Draw WebGL nodes on top of the labels:\n      var nodesPerPrograms = {};\n\n      // 1. Count nodes per type:\n      nodesToRender.forEach(function (node) {\n        var type = _this7.nodeDataCache[node].type;\n        nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\n      });\n      // 2. Allocate for each type for the proper number of nodes\n      for (var type in this.nodeHoverPrograms) {\n        this.nodeHoverPrograms[type].reallocate(nodesPerPrograms[type] || 0);\n        // Also reset count, to use when rendering:\n        nodesPerPrograms[type] = 0;\n      }\n      // 3. Process all nodes to render:\n      nodesToRender.forEach(function (node) {\n        var data = _this7.nodeDataCache[node];\n        _this7.nodeHoverPrograms[data.type].process(0, nodesPerPrograms[data.type]++, data);\n      });\n      // 4. Clear hovered nodes layer:\n      this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n      // 5. Render:\n      var renderParams = this.getRenderParams();\n      for (var _type6 in this.nodeHoverPrograms) {\n        var program = this.nodeHoverPrograms[_type6];\n        program.render(renderParams);\n      }\n    }\n\n    /**\n     * Method used to schedule a hover render.\n     *\n     */\n  }, {\n    key: \"scheduleHighlightedNodesRender\",\n    value: function scheduleHighlightedNodesRender() {\n      var _this8 = this;\n      if (this.renderHighlightedNodesFrame || this.renderFrame) return;\n      this.renderHighlightedNodesFrame = requestAnimationFrame(function () {\n        // Resetting state\n        _this8.renderHighlightedNodesFrame = null;\n\n        // Rendering\n        _this8.renderHighlightedNodes();\n        _this8.renderEdgeLabels();\n      });\n    }\n\n    /**\n     * Method used to render.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      this.emit(\"beforeRender\");\n      var exitRender = function exitRender() {\n        _this9.emit(\"afterRender\");\n        return _this9;\n      };\n\n      // If a render was scheduled, we cancel it\n      if (this.renderFrame) {\n        cancelAnimationFrame(this.renderFrame);\n        this.renderFrame = null;\n      }\n\n      // First we need to resize\n      this.resize();\n\n      // Do we need to reprocess data?\n      if (this.needToProcess) this.process();\n      this.needToProcess = false;\n\n      // Clearing the canvases\n      this.clear();\n\n      // Prepare the textures\n      this.pickingLayers.forEach(function (layer) {\n        return _this9.resetWebGLTexture(layer);\n      });\n\n      // If we have no nodes we can stop right there\n      if (!this.graph.order) return exitRender();\n\n      // TODO: improve this heuristic or move to the captor itself?\n      // TODO: deal with the touch captor here as well\n      var mouseCaptor = this.mouseCaptor;\n      var moving = this.camera.isAnimated() || mouseCaptor.isMoving || mouseCaptor.draggedEvents || mouseCaptor.currentWheelDirection;\n\n      // Then we need to extract a matrix from the camera\n      var cameraState = this.camera.getState();\n      var viewportDimensions = this.getDimensions();\n      var graphDimensions = this.getGraphDimensions();\n      var padding = this.getStagePadding();\n      this.matrix = matrixFromCamera(cameraState, viewportDimensions, graphDimensions, padding);\n      this.invMatrix = matrixFromCamera(cameraState, viewportDimensions, graphDimensions, padding, true);\n      this.correctionRatio = getMatrixImpact(this.matrix, cameraState, viewportDimensions);\n      this.graphToViewportRatio = this.getGraphToViewportRatio();\n\n      // [jacomyal]\n      // This comment is related to the one above the `getMatrixImpact` definition:\n      // - `this.correctionRatio` is somehow not completely explained\n      // - `this.graphToViewportRatio` is the ratio of a distance in the viewport divided by the same distance in the\n      //   graph\n      // - `this.normalizationFunction.ratio` is basically `Math.max(graphDX, graphDY)`\n      // And now, I observe that if I multiply these three ratios, I have something constant, which value remains 2, even\n      // when I change the graph, the viewport or the camera. It might be useful later, so I prefer to let this comment:\n      // console.log(this.graphToViewportRatio * this.correctionRatio * this.normalizationFunction.ratio * 2);\n\n      var params = this.getRenderParams();\n\n      // Drawing nodes\n      for (var type in this.nodePrograms) {\n        var program = this.nodePrograms[type];\n        program.render(params);\n      }\n\n      // Drawing edges\n      if (!this.settings.hideEdgesOnMove || !moving) {\n        for (var _type7 in this.edgePrograms) {\n          var _program2 = this.edgePrograms[_type7];\n          _program2.render(params);\n        }\n      }\n\n      // Do not display labels on move per setting\n      if (this.settings.hideLabelsOnMove && moving) return exitRender();\n      this.renderLabels();\n      this.renderEdgeLabels();\n      this.renderHighlightedNodes();\n      return exitRender();\n    }\n\n    /**\n     * Add a node in the internal data structures.\n     * @private\n     * @param key The node's graphology ID\n     */\n  }, {\n    key: \"addNode\",\n    value: function addNode(key) {\n      // Node display data resolution:\n      //  1. First we get the node's attributes\n      //  2. We optionally reduce them using the function provided by the user\n      //     Note that this function must return a total object and won't be merged\n      //  3. We apply our defaults, while running some vital checks\n      //  4. We apply the normalization function\n      // We shallow copy node data to avoid dangerous behaviors from reducers\n      var attr = Object.assign({}, this.graph.getNodeAttributes(key));\n      if (this.settings.nodeReducer) attr = this.settings.nodeReducer(key, attr);\n      var data = applyNodeDefaults(this.settings, key, attr);\n      this.nodeDataCache[key] = data;\n\n      // Label:\n      // We delete and add if needed because this function is also used from\n      // update\n      this.nodesWithForcedLabels[\"delete\"](key);\n      if (data.forceLabel && !data.hidden) this.nodesWithForcedLabels.add(key);\n\n      // Highlighted:\n      // We remove and re add if needed because this function is also used from\n      // update\n      this.highlightedNodes[\"delete\"](key);\n      if (data.highlighted && !data.hidden) this.highlightedNodes.add(key);\n\n      // zIndex\n      if (this.settings.zIndex) {\n        if (data.zIndex < this.nodeZExtent[0]) this.nodeZExtent[0] = data.zIndex;\n        if (data.zIndex > this.nodeZExtent[1]) this.nodeZExtent[1] = data.zIndex;\n      }\n    }\n\n    /**\n     * Update a node the internal data structures.\n     * @private\n     * @param key The node's graphology ID\n     */\n  }, {\n    key: \"updateNode\",\n    value: function updateNode(key) {\n      this.addNode(key);\n\n      // Re-apply normalization on the node\n      var data = this.nodeDataCache[key];\n      this.normalizationFunction.applyTo(data);\n    }\n\n    /**\n     * Remove a node from the internal data structures.\n     * @private\n     * @param key The node's graphology ID\n     */\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(key) {\n      // Remove from node cache\n      delete this.nodeDataCache[key];\n      // Remove from node program index\n      delete this.nodeProgramIndex[key];\n      // Remove from higlighted nodes\n      this.highlightedNodes[\"delete\"](key);\n      // Remove from hovered\n      if (this.hoveredNode === key) this.hoveredNode = null;\n      // Remove from forced label\n      this.nodesWithForcedLabels[\"delete\"](key);\n    }\n\n    /**\n     * Add an edge into the internal data structures.\n     * @private\n     * @param key The edge's graphology ID\n     */\n  }, {\n    key: \"addEdge\",\n    value: function addEdge(key) {\n      // Edge display data resolution:\n      //  1. First we get the edge's attributes\n      //  2. We optionally reduce them using the function provided by the user\n      //  3. Note that this function must return a total object and won't be merged\n      //  4. We apply our defaults, while running some vital checks\n      // We shallow copy edge data to avoid dangerous behaviors from reducers\n      var attr = Object.assign({}, this.graph.getEdgeAttributes(key));\n      if (this.settings.edgeReducer) attr = this.settings.edgeReducer(key, attr);\n      var data = applyEdgeDefaults(this.settings, key, attr);\n      this.edgeDataCache[key] = data;\n\n      // Forced label\n      // we filter and re push if needed because this function is also used from\n      // update\n      this.edgesWithForcedLabels[\"delete\"](key);\n      if (data.forceLabel && !data.hidden) this.edgesWithForcedLabels.add(key);\n\n      // Check zIndex\n      if (this.settings.zIndex) {\n        if (data.zIndex < this.edgeZExtent[0]) this.edgeZExtent[0] = data.zIndex;\n        if (data.zIndex > this.edgeZExtent[1]) this.edgeZExtent[1] = data.zIndex;\n      }\n    }\n\n    /**\n     * Update an edge in the internal data structures.\n     * @private\n     * @param key The edge's graphology ID\n     */\n  }, {\n    key: \"updateEdge\",\n    value: function updateEdge(key) {\n      this.addEdge(key);\n    }\n\n    /**\n     * Remove an edge from the internal data structures.\n     * @private\n     * @param key The edge's graphology ID\n     */\n  }, {\n    key: \"removeEdge\",\n    value: function removeEdge(key) {\n      // Remove from edge cache\n      delete this.edgeDataCache[key];\n      // Remove from programId index\n      delete this.edgeProgramIndex[key];\n      // Remove from hovered\n      if (this.hoveredEdge === key) this.hoveredEdge = null;\n      // Remove from forced label\n      this.edgesWithForcedLabels[\"delete\"](key);\n    }\n\n    /**\n     * Clear all indices related to nodes.\n     * @private\n     */\n  }, {\n    key: \"clearNodeIndices\",\n    value: function clearNodeIndices() {\n      // LabelGrid & nodeExtent are only manage/populated in the process function\n      this.labelGrid = new LabelGrid();\n      this.nodeExtent = {\n        x: [0, 1],\n        y: [0, 1]\n      };\n      this.nodeDataCache = {};\n      this.edgeProgramIndex = {};\n      this.nodesWithForcedLabels = new Set();\n      this.nodeZExtent = [Infinity, -Infinity];\n      this.highlightedNodes = new Set();\n    }\n\n    /**\n     * Clear all indices related to edges.\n     * @private\n     */\n  }, {\n    key: \"clearEdgeIndices\",\n    value: function clearEdgeIndices() {\n      this.edgeDataCache = {};\n      this.edgeProgramIndex = {};\n      this.edgesWithForcedLabels = new Set();\n      this.edgeZExtent = [Infinity, -Infinity];\n    }\n\n    /**\n     * Clear all indices.\n     * @private\n     */\n  }, {\n    key: \"clearIndices\",\n    value: function clearIndices() {\n      this.clearEdgeIndices();\n      this.clearNodeIndices();\n    }\n\n    /**\n     * Clear all graph state related to nodes.\n     * @private\n     */\n  }, {\n    key: \"clearNodeState\",\n    value: function clearNodeState() {\n      this.displayedNodeLabels = new Set();\n      this.highlightedNodes = new Set();\n      this.hoveredNode = null;\n    }\n\n    /**\n     * Clear all graph state related to edges.\n     * @private\n     */\n  }, {\n    key: \"clearEdgeState\",\n    value: function clearEdgeState() {\n      this.displayedEdgeLabels = new Set();\n      this.highlightedNodes = new Set();\n      this.hoveredEdge = null;\n    }\n\n    /**\n     * Clear all graph state.\n     * @private\n     */\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      this.clearEdgeState();\n      this.clearNodeState();\n    }\n\n    /**\n     * Add the node data to its program.\n     * @private\n     * @param node The node's graphology ID\n     * @param fingerprint A fingerprint used to identity the node with picking\n     * @param position The index where to place the node in the program\n     */\n  }, {\n    key: \"addNodeToProgram\",\n    value: function addNodeToProgram(node, fingerprint, position) {\n      var data = this.nodeDataCache[node];\n      var nodeProgram = this.nodePrograms[data.type];\n      if (!nodeProgram) throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(data.type, \"\\\"!\"));\n      nodeProgram.process(fingerprint, position, data);\n      // Saving program index\n      this.nodeProgramIndex[node] = position;\n    }\n\n    /**\n     * Add the edge data to its program.\n     * @private\n     * @param edge The edge's graphology ID\n     * @param fingerprint A fingerprint used to identity the edge with picking\n     * @param position The index where to place the edge in the program\n     */\n  }, {\n    key: \"addEdgeToProgram\",\n    value: function addEdgeToProgram(edge, fingerprint, position) {\n      var data = this.edgeDataCache[edge];\n      var edgeProgram = this.edgePrograms[data.type];\n      if (!edgeProgram) throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(data.type, \"\\\"!\"));\n      var extremities = this.graph.extremities(edge),\n        sourceData = this.nodeDataCache[extremities[0]],\n        targetData = this.nodeDataCache[extremities[1]];\n      edgeProgram.process(fingerprint, position, sourceData, targetData, data);\n      // Saving program index\n      this.edgeProgramIndex[edge] = position;\n    }\n\n    /**---------------------------------------------------------------------------\n     * Public API.\n     **---------------------------------------------------------------------------\n     */\n\n    /**\n     * Function used to get the render params.\n     *\n     * @return {RenderParams}\n     */\n  }, {\n    key: \"getRenderParams\",\n    value: function getRenderParams() {\n      return {\n        matrix: this.matrix,\n        invMatrix: this.invMatrix,\n        width: this.width,\n        height: this.height,\n        pixelRatio: this.pixelRatio,\n        zoomRatio: this.camera.ratio,\n        cameraAngle: this.camera.angle,\n        sizeRatio: 1 / this.scaleSize(),\n        correctionRatio: this.correctionRatio,\n        downSizingRatio: this.pickingDownSizingRatio,\n        minEdgeThickness: this.settings.minEdgeThickness,\n        antiAliasingFeather: this.settings.antiAliasingFeather\n      };\n    }\n\n    /**\n     * Function used to retrieve the actual stage padding value.\n     *\n     * @return {number}\n     */\n  }, {\n    key: \"getStagePadding\",\n    value: function getStagePadding() {\n      var _this$settings = this.settings,\n        stagePadding = _this$settings.stagePadding,\n        autoRescale = _this$settings.autoRescale;\n      return autoRescale ? stagePadding || 0 : 0;\n    }\n\n    /**\n     * Function used to create a layer element.\n     *\n     * @param {string} id - Context's id.\n     * @param {string} tag - The HTML tag to use.\n     * @param options\n     * @return {Sigma}\n     */\n  }, {\n    key: \"createLayer\",\n    value: function createLayer(id, tag) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (this.elements[id]) throw new Error(\"Sigma: a layer named \\\"\".concat(id, \"\\\" already exists\"));\n      var element = createElement(tag, {\n        position: \"absolute\"\n      }, {\n        \"class\": \"sigma-\".concat(id)\n      });\n      if (options.style) Object.assign(element.style, options.style);\n      this.elements[id] = element;\n      if (\"beforeLayer\" in options && options.beforeLayer) {\n        this.elements[options.beforeLayer].before(element);\n      } else if (\"afterLayer\" in options && options.afterLayer) {\n        this.elements[options.afterLayer].after(element);\n      } else {\n        this.container.appendChild(element);\n      }\n      return element;\n    }\n\n    /**\n     * Function used to create a canvas element.\n     *\n     * @param {string} id - Context's id.\n     * @param options\n     * @return {Sigma}\n     */\n  }, {\n    key: \"createCanvas\",\n    value: function createCanvas(id) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.createLayer(id, \"canvas\", options);\n    }\n\n    /**\n     * Function used to create a canvas context and add the relevant DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @param  options\n     * @return {Sigma}\n     */\n  }, {\n    key: \"createCanvasContext\",\n    value: function createCanvasContext(id) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var canvas = this.createCanvas(id, options);\n      var contextOptions = {\n        preserveDrawingBuffer: false,\n        antialias: false\n      };\n      this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n      return this;\n    }\n\n    /**\n     * Function used to create a WebGL context and add the relevant DOM\n     * elements.\n     *\n     * @param  {string}  id      - Context's id.\n     * @param  {object?} options - #getContext params to override (optional)\n     * @return {WebGLRenderingContext}\n     */\n  }, {\n    key: \"createWebGLContext\",\n    value: function createWebGLContext(id) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var canvas = (options === null || options === void 0 ? void 0 : options.canvas) || this.createCanvas(id, options);\n      if (options.hidden) canvas.remove();\n      var contextOptions = _objectSpread2({\n        preserveDrawingBuffer: false,\n        antialias: false\n      }, options);\n      var context;\n\n      // First we try webgl2 for an easy performance boost\n      context = canvas.getContext(\"webgl2\", contextOptions);\n\n      // Else we fall back to webgl\n      if (!context) context = canvas.getContext(\"webgl\", contextOptions);\n\n      // Edge, I am looking right at you...\n      if (!context) context = canvas.getContext(\"experimental-webgl\", contextOptions);\n      var gl = context;\n      this.webGLContexts[id] = gl;\n\n      // Blending:\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n      // Prepare frame buffer for picking layers:\n      if (options.picking) {\n        this.pickingLayers.add(id);\n        var newFrameBuffer = gl.createFramebuffer();\n        if (!newFrameBuffer) throw new Error(\"Sigma: cannot create a new frame buffer for layer \".concat(id));\n        this.frameBuffers[id] = newFrameBuffer;\n      }\n      return gl;\n    }\n\n    /**\n     * Function used to properly kill a layer.\n     *\n     * @param  {string} id - Layer id.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"killLayer\",\n    value: function killLayer(id) {\n      var element = this.elements[id];\n      if (!element) throw new Error(\"Sigma: cannot kill layer \".concat(id, \", which does not exist\"));\n      if (this.webGLContexts[id]) {\n        var _gl$getExtension;\n        var gl = this.webGLContexts[id];\n        (_gl$getExtension = gl.getExtension(\"WEBGL_lose_context\")) === null || _gl$getExtension === void 0 || _gl$getExtension.loseContext();\n        delete this.webGLContexts[id];\n      } else if (this.canvasContexts[id]) {\n        delete this.canvasContexts[id];\n      }\n\n      // Delete layer element\n      element.remove();\n      delete this.elements[id];\n      return this;\n    }\n\n    /**\n     * Method returning the renderer's camera.\n     *\n     * @return {Camera}\n     */\n  }, {\n    key: \"getCamera\",\n    value: function getCamera() {\n      return this.camera;\n    }\n\n    /**\n     * Method setting the renderer's camera.\n     *\n     * @param  {Camera} camera - New camera.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"setCamera\",\n    value: function setCamera(camera) {\n      this.unbindCameraHandlers();\n      this.camera = camera;\n      this.bindCameraHandlers();\n    }\n\n    /**\n     * Method returning the container DOM element.\n     *\n     * @return {HTMLElement}\n     */\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.container;\n    }\n\n    /**\n     * Method returning the renderer's graph.\n     *\n     * @return {Graph}\n     */\n  }, {\n    key: \"getGraph\",\n    value: function getGraph() {\n      return this.graph;\n    }\n\n    /**\n     * Method used to set the renderer's graph.\n     *\n     * @return {Graph}\n     */\n  }, {\n    key: \"setGraph\",\n    value: function setGraph(graph) {\n      if (graph === this.graph) return;\n\n      // Check hoveredNode and hoveredEdge\n      if (this.hoveredNode && !graph.hasNode(this.hoveredNode)) this.hoveredNode = null;\n      if (this.hoveredEdge && !graph.hasEdge(this.hoveredEdge)) this.hoveredEdge = null;\n\n      // Unbinding handlers on the current graph\n      this.unbindGraphHandlers();\n      if (this.checkEdgesEventsFrame !== null) {\n        cancelAnimationFrame(this.checkEdgesEventsFrame);\n        this.checkEdgesEventsFrame = null;\n      }\n\n      // Installing new graph\n      this.graph = graph;\n\n      // Binding new handlers\n      this.bindGraphHandlers();\n\n      // Re-rendering now to avoid discrepancies from now to next frame\n      this.refresh();\n    }\n\n    /**\n     * Method returning the mouse captor.\n     *\n     * @return {MouseCaptor}\n     */\n  }, {\n    key: \"getMouseCaptor\",\n    value: function getMouseCaptor() {\n      return this.mouseCaptor;\n    }\n\n    /**\n     * Method returning the touch captor.\n     *\n     * @return {TouchCaptor}\n     */\n  }, {\n    key: \"getTouchCaptor\",\n    value: function getTouchCaptor() {\n      return this.touchCaptor;\n    }\n\n    /**\n     * Method returning the current renderer's dimensions.\n     *\n     * @return {Dimensions}\n     */\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions() {\n      return {\n        width: this.width,\n        height: this.height\n      };\n    }\n\n    /**\n     * Method returning the current graph's dimensions.\n     *\n     * @return {Dimensions}\n     */\n  }, {\n    key: \"getGraphDimensions\",\n    value: function getGraphDimensions() {\n      var extent = this.customBBox || this.nodeExtent;\n      return {\n        width: extent.x[1] - extent.x[0] || 1,\n        height: extent.y[1] - extent.y[0] || 1\n      };\n    }\n\n    /**\n     * Method used to get all the sigma node attributes.\n     * It's useful for example to get the position of a node\n     * and to get values that are set by the nodeReducer\n     *\n     * @param  {string} key - The node's key.\n     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\n     */\n  }, {\n    key: \"getNodeDisplayData\",\n    value: function getNodeDisplayData(key) {\n      var node = this.nodeDataCache[key];\n      return node ? Object.assign({}, node) : undefined;\n    }\n\n    /**\n     * Method used to get all the sigma edge attributes.\n     * It's useful for example to get values that are set by the edgeReducer.\n     *\n     * @param  {string} key - The edge's key.\n     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\n     */\n  }, {\n    key: \"getEdgeDisplayData\",\n    value: function getEdgeDisplayData(key) {\n      var edge = this.edgeDataCache[key];\n      return edge ? Object.assign({}, edge) : undefined;\n    }\n\n    /**\n     * Method used to get the set of currently displayed node labels.\n     *\n     * @return {Set<string>} A set of node keys whose label is displayed.\n     */\n  }, {\n    key: \"getNodeDisplayedLabels\",\n    value: function getNodeDisplayedLabels() {\n      return new Set(this.displayedNodeLabels);\n    }\n\n    /**\n     * Method used to get the set of currently displayed edge labels.\n     *\n     * @return {Set<string>} A set of edge keys whose label is displayed.\n     */\n  }, {\n    key: \"getEdgeDisplayedLabels\",\n    value: function getEdgeDisplayedLabels() {\n      return new Set(this.displayedEdgeLabels);\n    }\n\n    /**\n     * Method returning a copy of the settings collection.\n     *\n     * @return {Settings} A copy of the settings collection.\n     */\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return _objectSpread2({}, this.settings);\n    }\n\n    /**\n     * Method returning the current value for a given setting key.\n     *\n     * @param  {string} key - The setting key to get.\n     * @return {any} The value attached to this setting key or undefined if not found\n     */\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(key) {\n      return this.settings[key];\n    }\n\n    /**\n     * Method setting the value of a given setting key. Note that this will schedule\n     * a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(key, value) {\n      var oldValues = _objectSpread2({}, this.settings);\n      this.settings[key] = value;\n      validateSettings(this.settings);\n      this.handleSettingsUpdate(oldValues);\n      this.scheduleRefresh();\n      return this;\n    }\n\n    /**\n     * Method updating the value of a given setting key using the provided function.\n     * Note that this will schedule a new render next frame.\n     *\n     * @param  {string}   key     - The setting key to set.\n     * @param  {function} updater - The update function.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"updateSetting\",\n    value: function updateSetting(key, updater) {\n      this.setSetting(key, updater(this.settings[key]));\n      return this;\n    }\n\n    /**\n     * Method setting multiple settings at once.\n     *\n     * @param  {Partial<Settings>} settings - The settings to set.\n     * @return {Sigma}\n     */\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      var oldValues = _objectSpread2({}, this.settings);\n      this.settings = _objectSpread2(_objectSpread2({}, this.settings), settings);\n      validateSettings(this.settings);\n      this.handleSettingsUpdate(oldValues);\n      this.scheduleRefresh();\n      return this;\n    }\n\n    /**\n     * Method used to resize the renderer.\n     *\n     * @param  {boolean} force - If true, then resize is processed even if size is unchanged (optional).\n     * @return {Sigma}\n     */\n  }, {\n    key: \"resize\",\n    value: function resize(force) {\n      var previousWidth = this.width,\n        previousHeight = this.height;\n      this.width = this.container.offsetWidth;\n      this.height = this.container.offsetHeight;\n      this.pixelRatio = getPixelRatio();\n      if (this.width === 0) {\n        if (this.settings.allowInvalidContainer) this.width = 1;else throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n      }\n      if (this.height === 0) {\n        if (this.settings.allowInvalidContainer) this.height = 1;else throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n      }\n\n      // If nothing has changed, we can stop right here\n      if (!force && previousWidth === this.width && previousHeight === this.height) return this;\n\n      // Sizing dom elements\n      for (var id in this.elements) {\n        var element = this.elements[id];\n        element.style.width = this.width + \"px\";\n        element.style.height = this.height + \"px\";\n      }\n\n      // Sizing canvas contexts\n      for (var _id in this.canvasContexts) {\n        this.elements[_id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n        this.elements[_id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n        if (this.pixelRatio !== 1) this.canvasContexts[_id].scale(this.pixelRatio, this.pixelRatio);\n      }\n\n      // Sizing WebGL contexts\n      for (var _id2 in this.webGLContexts) {\n        this.elements[_id2].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n        this.elements[_id2].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n        var gl = this.webGLContexts[_id2];\n        gl.viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\n\n        // Clear picking texture if needed\n        if (this.pickingLayers.has(_id2)) {\n          var currentTexture = this.textures[_id2];\n          if (currentTexture) gl.deleteTexture(currentTexture);\n        }\n      }\n      this.emit(\"resize\");\n      return this;\n    }\n\n    /**\n     * Method used to clear all the canvases.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.emit(\"beforeClear\");\n      this.webGLContexts.nodes.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);\n      this.webGLContexts.nodes.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);\n      this.webGLContexts.edges.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);\n      this.webGLContexts.edges.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);\n      this.webGLContexts.hoverNodes.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);\n      this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n      this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n      this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n      this.emit(\"afterClear\");\n      return this;\n    }\n\n    /**\n     * Method used to refresh, i.e. force the renderer to reprocess graph\n     * data and render, but keep the state.\n     * - if a partialGraph is provided, we only reprocess those nodes & edges.\n     * - if schedule is TRUE, we schedule a render instead of sync render\n     * - if skipIndexation is TRUE, then labelGrid & program indexation are skipped (can be used if you haven't modify x, y, zIndex & size)\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh(opts) {\n      var _this10 = this;\n      var skipIndexation = (opts === null || opts === void 0 ? void 0 : opts.skipIndexation) !== undefined ? opts === null || opts === void 0 ? void 0 : opts.skipIndexation : false;\n      var schedule = (opts === null || opts === void 0 ? void 0 : opts.schedule) !== undefined ? opts.schedule : false;\n      var fullRefresh = !opts || !opts.partialGraph;\n      if (fullRefresh) {\n        // Re-index graph data\n        this.clearEdgeIndices();\n        this.clearNodeIndices();\n        this.graph.forEachNode(function (node) {\n          return _this10.addNode(node);\n        });\n        this.graph.forEachEdge(function (edge) {\n          return _this10.addEdge(edge);\n        });\n      } else {\n        var _opts$partialGraph, _opts$partialGraph2;\n        var nodes = ((_opts$partialGraph = opts.partialGraph) === null || _opts$partialGraph === void 0 ? void 0 : _opts$partialGraph.nodes) || [];\n        for (var i = 0, l = (nodes === null || nodes === void 0 ? void 0 : nodes.length) || 0; i < l; i++) {\n          var node = nodes[i];\n          // Recompute node's data (ie. apply reducer)\n          this.updateNode(node);\n          // Add node to the program if layout is unchanged.\n          // otherwise it will be done in the process function\n          if (skipIndexation) {\n            var programIndex = this.nodeProgramIndex[node];\n            if (programIndex === undefined) throw new Error(\"Sigma: node \\\"\".concat(node, \"\\\" can't be repaint\"));\n            this.addNodeToProgram(node, this.nodeIndices[node], programIndex);\n          }\n        }\n        var edges = (opts === null || opts === void 0 || (_opts$partialGraph2 = opts.partialGraph) === null || _opts$partialGraph2 === void 0 ? void 0 : _opts$partialGraph2.edges) || [];\n        for (var _i4 = 0, _l4 = edges.length; _i4 < _l4; _i4++) {\n          var edge = edges[_i4];\n          // Recompute edge's data (ie. apply reducer)\n          this.updateEdge(edge);\n          // Add edge to the program\n          // otherwise it will be done in the process function\n          if (skipIndexation) {\n            var _programIndex = this.edgeProgramIndex[edge];\n            if (_programIndex === undefined) throw new Error(\"Sigma: edge \\\"\".concat(edge, \"\\\" can't be repaint\"));\n            this.addEdgeToProgram(edge, this.edgeIndices[edge], _programIndex);\n          }\n        }\n      }\n\n      // Do we need to call the process function ?\n      if (fullRefresh || !skipIndexation) this.needToProcess = true;\n      if (schedule) this.scheduleRender();else this.render();\n      return this;\n    }\n\n    /**\n     * Method used to schedule a render at the next available frame.\n     * This method can be safely called on a same frame because it basically\n     * debounces refresh to the next frame.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"scheduleRender\",\n    value: function scheduleRender() {\n      var _this11 = this;\n      if (!this.renderFrame) {\n        this.renderFrame = requestAnimationFrame(function () {\n          _this11.render();\n        });\n      }\n      return this;\n    }\n\n    /**\n     * Method used to schedule a refresh (i.e. fully reprocess graph data and render)\n     * at the next available frame.\n     * This method can be safely called on a same frame because it basically\n     * debounces refresh to the next frame.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"scheduleRefresh\",\n    value: function scheduleRefresh(opts) {\n      return this.refresh(_objectSpread2(_objectSpread2({}, opts), {}, {\n        schedule: true\n      }));\n    }\n\n    /**\n     * Method used to (un)zoom, while preserving the position of a viewport point.\n     * Used for instance to zoom \"on the mouse cursor\".\n     *\n     * @param viewportTarget\n     * @param newRatio\n     * @return {CameraState}\n     */\n  }, {\n    key: \"getViewportZoomedState\",\n    value: function getViewportZoomedState(viewportTarget, newRatio) {\n      var _this$camera$getState = this.camera.getState(),\n        ratio = _this$camera$getState.ratio,\n        angle = _this$camera$getState.angle,\n        x = _this$camera$getState.x,\n        y = _this$camera$getState.y;\n      var _this$settings2 = this.settings,\n        minCameraRatio = _this$settings2.minCameraRatio,\n        maxCameraRatio = _this$settings2.maxCameraRatio;\n      if (typeof maxCameraRatio === \"number\") newRatio = Math.min(newRatio, maxCameraRatio);\n      if (typeof minCameraRatio === \"number\") newRatio = Math.max(newRatio, minCameraRatio);\n      var ratioDiff = newRatio / ratio;\n      var center = {\n        x: this.width / 2,\n        y: this.height / 2\n      };\n      var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\n      var graphCenterPosition = this.viewportToFramedGraph(center);\n      return {\n        angle: angle,\n        x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\n        y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\n        ratio: newRatio\n      };\n    }\n\n    /**\n     * Method returning the abstract rectangle containing the graph according\n     * to the camera's state.\n     *\n     * @return {object} - The view's rectangle.\n     */\n  }, {\n    key: \"viewRectangle\",\n    value: function viewRectangle() {\n      var p1 = this.viewportToFramedGraph({\n          x: 0,\n          y: 0\n        }),\n        p2 = this.viewportToFramedGraph({\n          x: this.width,\n          y: 0\n        }),\n        h = this.viewportToFramedGraph({\n          x: 0,\n          y: this.height\n        });\n      return {\n        x1: p1.x,\n        y1: p1.y,\n        x2: p2.x,\n        y2: p2.y,\n        height: p2.y - h.y\n      };\n    }\n\n    /**\n     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n  }, {\n    key: \"framedGraphToViewport\",\n    value: function framedGraphToViewport(coordinates) {\n      var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\n      var matrix = override.matrix ? override.matrix : recomputeMatrix ? matrixFromCamera(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getStagePadding()) : this.matrix;\n      var viewportPos = multiplyVec2(matrix, coordinates);\n      return {\n        x: (1 + viewportPos.x) * this.width / 2,\n        y: (1 - viewportPos.y) * this.height / 2\n      };\n    }\n\n    /**\n     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n  }, {\n    key: \"viewportToFramedGraph\",\n    value: function viewportToFramedGraph(coordinates) {\n      var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\n      var invMatrix = override.matrix ? override.matrix : recomputeMatrix ? matrixFromCamera(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getStagePadding(), true) : this.invMatrix;\n      var res = multiplyVec2(invMatrix, {\n        x: coordinates.x / this.width * 2 - 1,\n        y: 1 - coordinates.y / this.height * 2\n      });\n      if (isNaN(res.x)) res.x = 0;\n      if (isNaN(res.y)) res.y = 0;\n      return res;\n    }\n\n    /**\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  viewportPoint\n     * @param {CoordinateConversionOverride} override\n     */\n  }, {\n    key: \"viewportToGraph\",\n    value: function viewportToGraph(viewportPoint) {\n      var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\n    }\n\n    /**\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  graphPoint\n     * @param {CoordinateConversionOverride} override\n     */\n  }, {\n    key: \"graphToViewport\",\n    value: function graphToViewport(graphPoint) {\n      var override = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\n    }\n\n    /**\n     * Method returning the distance multiplier between the graph system and the\n     * viewport system.\n     */\n  }, {\n    key: \"getGraphToViewportRatio\",\n    value: function getGraphToViewportRatio() {\n      var graphP1 = {\n        x: 0,\n        y: 0\n      };\n      var graphP2 = {\n        x: 1,\n        y: 1\n      };\n      var graphD = Math.sqrt(Math.pow(graphP1.x - graphP2.x, 2) + Math.pow(graphP1.y - graphP2.y, 2));\n      var viewportP1 = this.graphToViewport(graphP1);\n      var viewportP2 = this.graphToViewport(graphP2);\n      var viewportD = Math.sqrt(Math.pow(viewportP1.x - viewportP2.x, 2) + Math.pow(viewportP1.y - viewportP2.y, 2));\n      return viewportD / graphD;\n    }\n\n    /**\n     * Method returning the graph's bounding box.\n     *\n     * @return {{ x: Extent, y: Extent }}\n     */\n  }, {\n    key: \"getBBox\",\n    value: function getBBox() {\n      return this.nodeExtent;\n    }\n\n    /**\n     * Method returning the graph's custom bounding box, if any.\n     *\n     * @return {{ x: Extent, y: Extent } | null}\n     */\n  }, {\n    key: \"getCustomBBox\",\n    value: function getCustomBBox() {\n      return this.customBBox;\n    }\n\n    /**\n     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\n     *\n     * @return {Sigma}\n     */\n  }, {\n    key: \"setCustomBBox\",\n    value: function setCustomBBox(customBBox) {\n      this.customBBox = customBBox;\n      this.scheduleRender();\n      return this;\n    }\n\n    /**\n     * Method used to shut the container & release event listeners.\n     *\n     * @return {undefined}\n     */\n  }, {\n    key: \"kill\",\n    value: function kill() {\n      // Emitting \"kill\" events so that plugins and such can cleanup\n      this.emit(\"kill\");\n\n      // Releasing events\n      this.removeAllListeners();\n\n      // Releasing camera handlers\n      this.unbindCameraHandlers();\n\n      // Releasing DOM events & captors\n      window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n      this.mouseCaptor.kill();\n      this.touchCaptor.kill();\n\n      // Releasing graph handlers\n      this.unbindGraphHandlers();\n\n      // Releasing cache & state\n      this.clearIndices();\n      this.clearState();\n      this.nodeDataCache = {};\n      this.edgeDataCache = {};\n      this.highlightedNodes.clear();\n\n      // Clearing frames\n      if (this.renderFrame) {\n        cancelAnimationFrame(this.renderFrame);\n        this.renderFrame = null;\n      }\n      if (this.renderHighlightedNodesFrame) {\n        cancelAnimationFrame(this.renderHighlightedNodesFrame);\n        this.renderHighlightedNodesFrame = null;\n      }\n\n      // Destroying canvases\n      var container = this.container;\n      while (container.firstChild) container.removeChild(container.firstChild);\n\n      // Kill programs:\n      for (var type in this.nodePrograms) {\n        this.nodePrograms[type].kill();\n      }\n      for (var _type8 in this.nodeHoverPrograms) {\n        this.nodeHoverPrograms[_type8].kill();\n      }\n      for (var _type9 in this.edgePrograms) {\n        this.edgePrograms[_type9].kill();\n      }\n      this.nodePrograms = {};\n      this.nodeHoverPrograms = {};\n      this.edgePrograms = {};\n\n      // Kill all canvas/WebGL contexts\n      for (var id in this.elements) {\n        this.killLayer(id);\n      }\n\n      // Destroying remaining collections\n      this.canvasContexts = {};\n      this.webGLContexts = {};\n      this.elements = {};\n    }\n\n    /**\n     * Method used to scale the given size according to the camera's ratio, i.e.\n     * zooming state.\n     *\n     * @param  {number?} size -        The size to scale (node size, edge thickness etc.).\n     * @param  {number?} cameraRatio - A camera ratio (defaults to the actual camera ratio).\n     * @return {number}              - The scaled size.\n     */\n  }, {\n    key: \"scaleSize\",\n    value: function scaleSize() {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var cameraRatio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.camera.ratio;\n      return size / this.settings.zoomToSizeRatioFunction(cameraRatio) * (this.getSetting(\"itemSizesReference\") === \"positions\" ? cameraRatio * this.graphToViewportRatio : 1);\n    }\n\n    /**\n     * Method that returns the collection of all used canvases.\n     * At the moment, the instantiated canvases are the following, and in the\n     * following order in the DOM:\n     * - `edges`\n     * - `nodes`\n     * - `edgeLabels`\n     * - `labels`\n     * - `hovers`\n     * - `hoverNodes`\n     * - `mouse`\n     *\n     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\n     */\n  }, {\n    key: \"getCanvases\",\n    value: function getCanvases() {\n      var res = {};\n      for (var layer in this.elements) if (this.elements[layer] instanceof HTMLCanvasElement) res[layer] = this.elements[layer];\n      return res;\n    }\n  }]);\n}(TypedEventEmitter);\n\n/**\n * Sigma.js Library Endpoint\n * =========================\n *\n * The library endpoint.\n * @module\n */\nvar Sigma = Sigma$1;\n\nexport { Camera, MouseCaptor, Sigma$1 as Sigma, TouchCaptor, Sigma as default };\n", "import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n", "let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n", "import { v4 } from \"uuid\";\r\n\r\ntype InterfaceWithMethods = Record<string, (...args: any[]) => any>;\r\n\r\nexport type WorkerifyInterface<T extends InterfaceWithMethods> = {\r\n  [K in keyof T]: (\r\n    ...args: Parameters<T[K]>\r\n  ) => ReturnType<T[K]> extends Promise<any>\r\n    ? ReturnType<T[K]>\r\n    : Promise<ReturnType<T[K]>>;\r\n};\r\n\r\ntype WorkerifyRequest<T extends InterfaceWithMethods> = {\r\n  [K in keyof T]: {\r\n    type: K;\r\n    contents: Parameters<T[K]>;\r\n    _discriminator: string;\r\n    id: string;\r\n  };\r\n}[keyof T];\r\n\r\ntype WorkerifyResponse<T extends InterfaceWithMethods> = {\r\n  [K in keyof T]: {\r\n    contents: ReturnType<T[K]>;\r\n    _discriminator: string;\r\n    id: string;\r\n  };\r\n}[keyof T];\r\n\r\nexport function workerifyServer<I extends InterfaceWithMethods>(\r\n  i: I,\r\n  discriminator: string,\r\n  onReceive: (cb: (req: any) => any) => () => void,\r\n  send: (res: any) => void\r\n) {\r\n  let inf = i;\r\n  const unsub = onReceive(async (req: any) => {\r\n    if (!req || req._discriminator !== discriminator) {\r\n      return;\r\n    }\r\n\r\n    const typedReq: WorkerifyRequest<I> = req;\r\n\r\n    const responseContents = await inf[typedReq.type](...typedReq.contents);\r\n\r\n    send({\r\n      contents: responseContents,\r\n      _discriminator: discriminator,\r\n      id: typedReq.id,\r\n    });\r\n  });\r\n\r\n  return {\r\n    unsub,\r\n    setInterface(i: I) {\r\n      inf = i;\r\n    },\r\n  };\r\n}\r\n\r\nexport function workerifyClient<I extends InterfaceWithMethods>(\r\n  discriminator: string,\r\n  onReceive: (cb: (req: any) => any) => () => void,\r\n  send: (req: any) => void\r\n): WorkerifyInterface<I> {\r\n  return new Proxy({} as I, {\r\n    get(i, prop) {\r\n      return (...args: any[]) => {\r\n        const id = v4();\r\n        const req = {\r\n          type: prop,\r\n          contents: args,\r\n          _discriminator: discriminator,\r\n          id,\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n          onReceive((res) => {\r\n            if (!res || res._discriminator !== discriminator) {\r\n              return;\r\n            }\r\n\r\n            const typedRes: WorkerifyResponse<I> = res;\r\n\r\n            if (typedRes.id === id) {\r\n              resolve(typedRes.contents);\r\n            }\r\n          });\r\n          send(req);\r\n        });\r\n      };\r\n    },\r\n  });\r\n}\r\n"],
  "mappings": "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",
  "names": ["require_events", "__commonJSMin", "exports", "module", "R", "ReflectApply", "target", "receiver", "args", "ReflectOwnKeys", "ProcessEmitWarning", "warning", "NumberIsNaN", "value", "EventEmitter", "once", "defaultMaxListeners", "checkListener", "listener", "arg", "n", "_getMaxListeners", "that", "type", "i", "doError", "events", "er", "err", "handler", "len", "listeners", "arrayClone", "_addListener", "prepend", "m", "existing", "w", "onceWrapper", "_onceWrap", "state", "wrapped", "list", "position", "originalListener", "spliceOne", "keys", "key", "_listeners", "unwrap", "evlistener", "unwrapListeners", "emitter", "listenerCount", "arr", "copy", "index", "ret", "name", "resolve", "reject", "errorListener", "resolver", "eventTargetAgnosticAddListener", "addErrorHandlerIfEventEmitter", "flags", "wrapListener", "require_defaults", "__commonJSMin", "exports", "module", "isLeaf", "o", "resolveDefaults", "target", "defaults", "output", "k", "existing", "def", "require_is_graph", "__commonJSMin", "exports", "module", "value", "require_random", "__commonJSMin", "exports", "module", "createRandom", "rng", "a", "b", "random", "require_shuffle_in_place", "__commonJSMin", "exports", "module", "createRandom", "createShuffleInPlace", "rng", "customRandom", "sequence", "length", "lastIndex", "index", "r", "value", "shuffleInPlace", "require_circlepack", "__commonJSMin", "exports", "module", "resolveDefaults", "isGraph", "shuffle", "DEFAULTS", "CircleWrap", "id", "x", "y", "r", "circleWrap", "child", "root", "key", "setNode", "graph", "parentCircle", "posMap", "circle", "enclosesNot", "a", "b", "dr", "dx", "dy", "enclosesWeak", "enclosesWeakAll", "B", "encloseBasis1", "encloseBasis2", "x1", "y1", "r1", "x2", "y2", "r2", "x21", "y21", "r21", "encloseBasis3", "c", "x3", "y3", "r3", "a2", "a3", "b2", "b3", "c2", "c3", "d1", "d2", "d3", "ab", "xa", "xb", "ya", "yb", "A", "C", "encloseBasis", "extendBasis", "p", "j", "score", "node", "enclose", "circles", "shuffleFunc", "circlesLoc", "n", "e", "place", "intersects", "packEnclose", "aa", "ca", "i", "k", "sj", "sk", "pack", "safety", "packHierarchy", "packHierarchyAndShift", "genericCirclePackLayout", "assign", "options", "positions", "nodes", "center", "hierarchyAttributes", "scale", "container", "attributes", "newCircleWrap", "parentContainer", "v", "attr", "circlePackLayout", "require_circular", "__commonJSMin", "exports", "module", "resolveDefaults", "isGraph", "DEFAULTS", "genericCircularLayout", "assign", "graph", "options", "dimensions", "center", "scale", "tau", "offset", "l", "x", "y", "assignPosition", "i", "target", "positions", "node", "_", "attr", "circularLayout", "require_random", "__commonJSMin", "exports", "module", "resolveDefaults", "isGraph", "DEFAULTS", "genericRandomLayout", "assign", "graph", "options", "dimensions", "d", "center", "rng", "scale", "offset", "assignPosition", "target", "i", "positions", "node", "_", "attr", "randomLayout", "require_rotation", "__commonJSMin", "exports", "module", "resolveDefaults", "isGraph", "RAD_CONVERSION", "DEFAULTS", "genericRotation", "assign", "graph", "angle", "options", "dimensions", "xd", "yd", "xCenter", "yCenter", "xMin", "xMax", "yMin", "yMax", "node", "attr", "x", "y", "cos", "sin", "assignPosition", "target", "positions", "o", "_", "rotation", "require_graphology_layout", "__commonJSMin", "exports", "assignPolyfill", "target", "i", "l", "k", "assign", "getMatchingEdge", "graph", "source", "type", "sourceData", "edge", "isPlainObject", "value", "isEmpty", "o", "privateProperty", "name", "readOnlyProperty", "descriptor", "validateHints", "hints", "incrementalIdStartingFromRandomByte", "chain", "iterables", "current", "step", "emptyIterator", "GraphError", "message", "InvalidArgumentsGraphError", "_InvalidArgumentsGraphError", "NotFoundGraphError", "_NotFoundGraphError", "UsageGraphError", "_UsageGraphError", "MixedNodeData", "key", "attributes", "DirectedNodeData", "UndirectedNodeData", "EdgeData", "undirected", "outKey", "inKey", "adj", "head", "NODE", "SOURCE", "TARGET", "OPPOSITE", "findRelevantNodeData", "method", "mode", "nodeOrEdge", "nameOrEdge", "add1", "add2", "nodeData", "edgeData", "arg1", "arg2", "attachNodeAttributeGetter", "Class", "data", "attachNodeAttributesGetter", "attachNodeAttributeChecker", "attachNodeAttributeSetter", "attachNodeAttributeUpdater", "updater", "attachNodeAttributeRemover", "attachNodeAttributesReplacer", "attachNodeAttributesMerger", "attachNodeAttributesUpdater", "NODE_ATTRIBUTES_METHODS", "element", "attachNodeAttributesMethods", "Graph", "attacher", "attachEdgeAttributeGetter", "attachEdgeAttributesGetter", "attachEdgeAttributeChecker", "attachEdgeAttributeSetter", "attachEdgeAttributeUpdater", "attachEdgeAttributeRemover", "attachEdgeAttributesReplacer", "attachEdgeAttributesMerger", "attachEdgeAttributesUpdater", "EDGE_ATTRIBUTES_METHODS", "attachEdgeAttributesMethods", "EDGES_ITERATION", "forEachSimple", "breakable", "object", "callback", "avoid", "shouldBreak", "forEachMulti", "createIterator", "keys", "forEachForKeySimple", "targetData", "forEachForKeyMulti", "createIteratorForKey", "done", "createEdgeArray", "size", "list", "mask", "iterator", "forEachEdge", "shouldFilter", "createEdgeIterator", "forEachEdgeForNode", "multi", "direction", "fn", "found", "createEdgeArrayForNode", "edges", "createEdgeIteratorForNode", "forEachEdgeForPath", "createEdgeArrayForPath", "createEdgeIteratorForPath", "attachEdgeArrayCreator", "description", "attachForEachEdge", "forEachName", "mapName", "args", "result", "length", "e", "ea", "s", "t", "sa", "ta", "u", "filterName", "reduceName", "initialValue", "accumulator", "attachFindEdge", "findEdgeName", "someName", "everyName", "attachEdgeIteratorCreator", "originalName", "attachEdgeIterationMethods", "NEIGHBORS_ITERATION", "CompositeSetWrapper", "set", "forEachInObjectOnce", "visited", "neighborData", "forEachNeighbor", "createNeighborArrayForNode", "neighbors", "createDedupedObjectIterator", "createNeighborIterator", "attachNeighborArrayCreator", "node", "attachForEachNeighbor", "n", "a", "attachFindNeighbor", "capitalizedSingular", "findName", "attachNeighborIteratorCreator", "iteratorName", "attachNeighborIterationMethods", "forEachAdjacency", "assymetric", "disconnectedNodes", "neighbor", "hasEdges", "serializeNode", "serialized", "serializeEdge", "validateSerializedNode", "validateSerializedEdge", "INSTANCE_ID", "TYPES", "EMITTER_PROPS", "EDGE_ADD_METHODS", "verb", "DEFAULTS", "addNode", "unsafeAddNode", "addEdge", "mustGenerateKey", "eventData", "isSelfLoop", "mergeEdge", "asUpdater", "alreadyExistingEdgeData", "info", "oldAttributes", "sourceWasAdded", "targetWasAdded", "dropEdgeFromData", "_Graph", "options", "NodeDataClass", "instancePrefix", "edgeId", "edgeKeyGenerator", "availableEdgeKey", "prop", "degree", "loops", "nodes", "merge", "_sa", "_ta", "undirectedByDefault", "multiIndex", "label", "tmp", "desc", "dummy", "DirectedGraph", "finalOptions", "UndirectedGraph", "MultiGraph", "MultiDirectedGraph", "MultiUndirectedGraph", "attachStaticFromMethod", "instance", "import_graphology_layout", "_toPrimitive", "t", "r", "e", "i", "_toPropertyKey", "_classCallCheck", "a", "n", "_defineProperties", "o", "_createClass", "_getPrototypeOf", "_isNativeReflectConstruct", "_assertThisInitialized", "_possibleConstructorReturn", "_callSuper", "_setPrototypeOf", "_inherits", "_arrayWithHoles", "r", "_iterableToArrayLimit", "l", "t", "n", "i", "u", "a", "f", "o", "_arrayLikeToArray", "e", "_unsupportedIterableToArray", "_nonIterableRest", "_slicedToArray", "HTML_COLORS", "INT8", "INT32", "FLOAT32", "RGBA_TEST_REGEX", "RGBA_EXTRACT_REGEX", "parseColor", "val", "r", "g", "b", "a", "match", "FLOAT_COLOR_CACHE", "htmlColor", "HTML_COLORS", "floatColor", "rgbaToFloat", "masking", "parsed", "color", "FLOAT_INDEX_CACHE", "indexToColor", "index", "r", "g", "b", "a", "color", "rgbaToFloat", "colorToIndex", "_a", "getPixelColor", "gl", "frameBuffer", "x", "y", "pixelRatio", "downSizingRatio", "bufferX", "bufferY", "pixel", "_pixel", "_slicedToArray", "_defineProperty", "e", "r", "t", "_toPropertyKey", "ownKeys", "o", "_objectSpread2", "_superPropBase", "_getPrototypeOf", "_get", "p", "n", "_superPropGet", "getAttributeItemsCount", "attr", "getAttributesItemsCount", "attrs", "res", "loadShader", "type", "gl", "source", "glType", "shader", "successfullyCompiled", "infoLog", "loadVertexShader", "loadFragmentShader", "loadProgram", "shaders", "program", "i", "l", "successfullyLinked", "killProgram", "_ref", "buffer", "vertexShader", "fragmentShader", "PICKING_PREFIX", "SIZE_FACTOR_PER_ATTRIBUTE_TYPE", "_defineProperty", "Program", "gl", "pickingBuffer", "renderer", "_classCallCheck", "_defineProperty", "def", "getAttributesItemsCount", "PICKING_PREFIX", "constantAttributesItemsCount", "i", "vector", "j", "_createClass", "killProgram", "name", "vertexShaderSource", "fragmentShaderSource", "frameBuffer", "buffer", "vertexShader", "loadVertexShader", "fragmentShader", "loadFragmentShader", "program", "loadProgram", "uniformLocations", "uniformName", "location", "attributeLocations", "attr", "constantBuffer", "_this", "offset", "_this2", "setDivisor", "sizeFactor", "SIZE_FACTOR_PER_ATTRIBUTE_TYPE", "stride", "ext", "unsetDivisor", "capacity", "params", "programInfo", "_objectSpread2", "method", "_ref", "NodeProgram", "_ref", "_classCallCheck", "_callSuper", "_inherits", "_createClass", "_superPropGet", "nodeIndex", "offset", "data", "i", "l", "indexToColor", "Program", "EdgeProgram", "_ref", "_this", "_classCallCheck", "_len", "args", "_key", "_callSuper", "_defineProperty", "_inherits", "_createClass", "_superPropGet", "edgeIndex", "offset", "sourceData", "targetData", "data", "i", "l", "indexToColor", "Program", "createEdgeCompoundProgram", "programClasses", "drawLabel", "EdgeCompoundProgram", "gl", "pickingBuffer", "renderer", "capacity", "program", "params", "drawStraightEdgeLabel", "context", "edgeData", "settings", "size", "font", "weight", "color", "label", "sSize", "tSize", "sx", "sy", "tx", "ty", "cx", "cy", "dx", "dy", "d", "textLength", "ellipsis", "angle", "drawDiscNodeLabel", "drawDiscNodeHover", "PADDING", "textWidth", "boxWidth", "boxHeight", "radius", "angleRadian", "xDeltaCoord", "SHADER_SOURCE$6", "FRAGMENT_SHADER_SOURCE$2", "SHADER_SOURCE$5", "VERTEX_SHADER_SOURCE$3", "_WebGLRenderingContex$3", "UNSIGNED_BYTE$3", "FLOAT$3", "UNIFORMS$3", "NodeCircleProgram", "_NodeProgram", "nodeIndex", "startIndex", "array", "floatColor", "uniformLocations", "u_sizeRatio", "u_correctionRatio", "u_matrix", "NodeProgram", "SHADER_SOURCE$4", "FRAGMENT_SHADER_SOURCE$1", "SHADER_SOURCE$3", "VERTEX_SHADER_SOURCE$2", "_WebGLRenderingContex$2", "UNSIGNED_BYTE$2", "FLOAT$2", "UNIFORMS$2", "DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS", "createEdgeArrowHeadProgram", "inputOptions", "options", "_objectSpread2", "_EdgeProgram", "EdgeArrowHeadProgram", "thickness", "x1", "y1", "x2", "y2", "len", "n1", "n2", "_ref2", "u_minEdgeThickness", "u_lengthToThicknessRatio", "u_widenessToThicknessRatio", "SHADER_SOURCE$2", "FRAGMENT_SHADER_SOURCE", "SHADER_SOURCE$1", "VERTEX_SHADER_SOURCE$1", "_WebGLRenderingContex$1", "UNSIGNED_BYTE$1", "FLOAT$1", "UNIFORMS$1", "DEFAULT_EDGE_CLAMPED_PROGRAM_OPTIONS", "DEFAULT_EDGE_ARROW_HEAD_PROGRAM_OPTIONS", "createEdgeClampedProgram", "inputOptions", "options", "_objectSpread2", "_EdgeProgram", "EdgeClampedProgram", "_classCallCheck", "_callSuper", "_inherits", "_createClass", "edgeIndex", "startIndex", "sourceData", "targetData", "data", "thickness", "x1", "y1", "x2", "y2", "color", "floatColor", "dx", "dy", "radius", "len", "n1", "n2", "array", "params", "_ref", "gl", "uniformLocations", "u_matrix", "u_zoomRatio", "u_feather", "u_pixelRatio", "u_correctionRatio", "u_sizeRatio", "u_minEdgeThickness", "u_lengthToThicknessRatio", "EdgeProgram", "createEdgeArrowProgram", "inputOptions", "createEdgeCompoundProgram", "createEdgeClampedProgram", "createEdgeArrowHeadProgram", "EdgeArrowProgram", "EdgeArrowProgram$1", "SHADER_SOURCE", "VERTEX_SHADER_SOURCE", "_WebGLRenderingContex", "UNSIGNED_BYTE", "FLOAT", "UNIFORMS", "EdgeRectangleProgram", "_EdgeProgram", "_classCallCheck", "_callSuper", "_inherits", "_createClass", "FRAGMENT_SHADER_SOURCE", "edgeIndex", "startIndex", "sourceData", "targetData", "data", "thickness", "x1", "y1", "x2", "y2", "color", "floatColor", "dx", "dy", "len", "n1", "n2", "array", "params", "_ref", "gl", "uniformLocations", "u_matrix", "u_zoomRatio", "u_feather", "u_pixelRatio", "u_correctionRatio", "u_sizeRatio", "u_minEdgeThickness", "EdgeProgram", "import_events", "TypedEventEmitter", "_ref", "_this", "_classCallCheck", "_callSuper", "_inherits", "_createClass", "import_is_graph", "linear", "k", "quadraticIn", "quadraticOut", "quadraticInOut", "cubicIn", "cubicOut", "cubicInOut", "easings", "ANIMATE_DEFAULTS", "identity", "scale", "m", "x", "y", "rotate", "r", "s", "c", "translate", "multiply", "a", "b", "a00", "a01", "a02", "a10", "a11", "a12", "a20", "a21", "a22", "b00", "b01", "b02", "b10", "b11", "b12", "b20", "b21", "b22", "multiplyVec2", "z", "b0", "b1", "getCorrectionRatio", "viewportDimensions", "graphDimensions", "viewportRatio", "graphRatio", "matrixFromCamera", "state", "padding", "inverse", "angle", "ratio", "width", "height", "matrix", "smallestDimension", "correctionRatio", "getMatrixImpact", "cameraState", "_multiplyVec", "graphExtent", "graph", "xMin", "xMax", "yMin", "yMax", "_", "attr", "validateGraph", "isGraph", "key", "attributes", "createElement", "tag", "style", "element", "k", "_k", "getPixelRatio", "zIndexOrdering", "_extent", "getter", "elements", "zA", "zB", "createNormalizationFunction", "extent", "_extent$x", "_slicedToArray", "minX", "maxX", "_extent$y", "minY", "maxY", "dX", "dY", "fn", "data", "_typeof", "o", "extend", "array", "values", "l2", "l1", "i", "value", "assign", "target", "i", "l", "o", "DEFAULT_SETTINGS", "drawStraightEdgeLabel", "drawDiscNodeLabel", "drawDiscNodeHover", "DEFAULT_NODE_PROGRAM_CLASSES", "NodeCircleProgram", "DEFAULT_EDGE_PROGRAM_CLASSES", "EdgeArrowProgram$1", "EdgeRectangleProgram", "validateSettings", "settings", "minCameraRatio", "maxCameraRatio", "resolveSettings", "resolvedSettings", "assign", "import_events", "import_is_graph", "DEFAULT_ZOOMING_RATIO", "Camera", "_TypedEventEmitter", "_this", "_classCallCheck", "_callSuper", "_defineProperty", "_inherits", "_createClass", "state", "ratio", "validatedState", "_objectSpread2", "validState", "updater", "_this2", "opts", "callback", "resolve", "options", "ANIMATE_DEFAULTS", "easing", "easings", "start", "initialState", "_fn", "t", "coefficient", "newState", "factorOrOptions", "camera", "TypedEventEmitter", "getPosition", "e", "dom", "bbox", "getMouseCoords", "res", "cleanMouseCoords", "getWheelCoords", "getWheelDelta", "MAX_TOUCHES", "getTouchesArray", "touches", "arr", "l", "getTouchCoords", "previousTouches", "touch", "Captor", "container", "renderer", "MOUSE_SETTINGS_KEYS", "DEFAULT_MOUSE_SETTINGS", "iter", "key", "DEFAULT_SETTINGS", "MouseCaptor", "_Captor", "mouseCoords", "newRatio", "_getPosition", "x", "y", "_this3", "_getPosition2", "cameraState", "previousCameraState", "shouldRefresh", "_this4", "_getPosition3", "eX", "eY", "lastMouse", "mouse", "offsetX", "offsetY", "_this5", "delta", "wheelCoords", "currentRatio", "ratioDiff", "wheelDirection", "now", "settings", "TOUCH_SETTINGS_KEYS", "DEFAULT_TOUCH_SETTINGS", "TouchCaptor", "_this$startTouchesPos", "_slicedToArray", "_this$startTouchesPos2", "x0", "y0", "_this$startTouchesPos3", "x1", "y1", "position", "downPosition", "dSquare", "touchCoords", "_camera", "_touchCoords", "touchesPositions", "lastTouches", "idx", "startPosition", "startCameraState", "padding", "_this$renderer$viewpo", "xStart", "yStart", "_this$renderer$viewpo2", "newCameraState", "_touchesPositions$", "_touchesPositions$2", "angleDiff", "dimensions", "touchGraphPosition", "smallestDimension", "dx", "dy", "_x", "_y", "_ref", "_arrayWithoutHoles", "r", "_arrayLikeToArray", "_iterableToArray", "_nonIterableSpread", "_toConsumableArray", "_unsupportedIterableToArray", "_objectWithoutPropertiesLoose", "n", "_objectWithoutProperties", "o", "i", "LabelCandidate", "size", "first", "second", "LabelGrid", "cellSize", "pos", "xIndex", "yIndex", "candidate", "index", "cell", "k", "density", "cellArea", "scaledCellArea", "scaledDensity", "labelsToDisplayPerCell", "labels", "edgeLabelsToDisplayFromNodes", "params", "graph", "hoveredNode", "highlightedNodes", "displayedNodeLabels", "worthyEdges", "edge", "_", "source", "target", "X_LABEL_MARGIN", "Y_LABEL_MARGIN", "hasOwnProperty", "applyNodeDefaults", "data", "applyEdgeDefaults", "_key", "Sigma$1", "Sigma", "identity", "createNormalizationFunction", "getPixelRatio", "resolveSettings", "validateSettings", "validateGraph", "type", "_type", "NodeProgramClass", "NodeHoverProgram", "EdgeProgramClass", "_this$nodePrograms", "program", "programs", "_toPropertyKey", "_this$nodeHoverProgra", "_program", "_programs", "_this$edgePrograms", "id", "gl", "frameBuffer", "currentTexture", "pickingTexture", "color", "getPixelColor", "colorToIndex", "itemAt", "event", "baseEvent", "nodeToHover", "node", "edgeToHover", "createInteractionListener", "eventType", "nodeAtPosition", "LAYOUT_IMPACTING_FIELDS", "_e$hints", "updatedFields", "layoutChanged", "f", "_e$hints2", "payload", "graphExtent", "width", "height", "_this$nodeExtent", "nullCamera", "nullCameraMatrix", "matrixFromCamera", "nodesPerPrograms", "nodeIndices", "edgeIndices", "itemIDsIndex", "incrID", "nodes", "attrs", "zIndexOrdering", "_i", "_l", "_node", "_data", "edgesPerPrograms", "edges", "_i2", "_l2", "_data2", "_type2", "_i3", "_l3", "_edge", "_data3", "oldSettings", "_this6", "_typeof", "_type3", "_type4", "_type5", "_ref$tolerance", "tolerance", "boundaries", "_ref2", "_ref2$x", "xMinGraph", "xMaxGraph", "_ref2$y", "yMinGraph", "yMaxGraph", "corners", "xMin", "xMax", "yMin", "yMax", "_ref3", "graphWidth", "graphHeight", "_this$getDimensions", "origin", "labelsToDisplay", "extend", "context", "_this$framedGraphToVi", "defaultDrawNodeLabel", "nodeProgram", "drawLabel", "edgeLabelsToDisplay", "displayedLabels", "extremities", "sourceData", "targetData", "edgeData", "defaultDrawEdgeLabel", "edgeProgram", "_this7", "render", "_this7$framedGraphToV", "defaultDrawNodeHover", "drawHover", "nodesToRender", "renderParams", "_type6", "_this8", "_this9", "exitRender", "layer", "mouseCaptor", "moving", "viewportDimensions", "graphDimensions", "getMatrixImpact", "_type7", "_program2", "attr", "fingerprint", "_this$settings", "stagePadding", "autoRescale", "tag", "element", "createElement", "canvas", "contextOptions", "newFrameBuffer", "_gl$getExtension", "extent", "value", "oldValues", "force", "previousWidth", "previousHeight", "_id", "_id2", "_this10", "skipIndexation", "schedule", "fullRefresh", "_opts$partialGraph", "_opts$partialGraph2", "programIndex", "_i4", "_l4", "_programIndex", "_this11", "viewportTarget", "_this$camera$getState", "angle", "_this$settings2", "minCameraRatio", "maxCameraRatio", "center", "graphMousePosition", "graphCenterPosition", "p1", "p2", "h", "coordinates", "override", "recomputeMatrix", "matrix", "viewportPos", "multiplyVec2", "invMatrix", "viewportPoint", "graphPoint", "graphP1", "graphP2", "graphD", "viewportP1", "viewportP2", "viewportD", "customBBox", "_type8", "_type9", "cameraRatio", "byteToHex", "i", "unsafeStringify", "arr", "offset", "getRandomValues", "rnds8", "rng", "randomUUID", "native_default", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "i", "unsafeStringify", "v4_default", "workerifyClient", "discriminator", "onReceive", "send", "i", "prop", "args", "id", "v4_default", "req", "resolve", "reject", "res", "typedRes", "hslToRgb", "h", "s", "l", "r", "g", "b", "q", "p", "hueToRgb", "t", "rgb2hex", "lerp", "a", "x", "angleOffsets", "i", "applyCircleIteration", "graph", "neighborCountMap", "node", "neighborCount", "neighbors", "nodeData", "angleOffset", "angle", "rad", "nx", "ny", "attribs", "influence", "worker", "positions", "workerClient", "workerifyClient", "req", "e", "res", "graphRaw", "DirectedGraph", "data", "nodeColors", "graphCount", "url", "article", "colorRgb", "color", "slug", "targetUrl", "iters", "idx", "sigma", "Sigma", "animLoop", "oldEdgeSettings", "n", "neighborsIn"]
}
